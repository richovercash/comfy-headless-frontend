{"KSampler": {"input": {"required": {"model": ["MODEL", {"tooltip": "The model used for denoising the input latent."}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true, "tooltip": "The random seed used for creating the noise."}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000, "tooltip": "The number of steps used in the denoising process."}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01, "tooltip": "The Classifier-Free Guidance scale balances creativity and adherence to the prompt. Higher values result in images more closely matching the prompt however too high values will negatively impact quality."}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"tooltip": "The algorithm used when sampling, this can affect the quality, speed, and style of the generated output."}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"tooltip": "The scheduler controls how noise is gradually removed to form the image."}], "positive": ["CONDITIONING", {"tooltip": "The conditioning describing the attributes you want to include in the image."}], "negative": ["CONDITIONING", {"tooltip": "The conditioning describing the attributes you want to exclude from the image."}], "latent_image": ["LATENT", {"tooltip": "The latent image to denoise."}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of denoising applied, lower values will maintain the structure of the initial image allowing for image to image sampling."}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler", "display_name": "KSampler", "description": "Uses the provided model, positive and negative conditioning to denoise the latent image.", "python_module": "nodes", "category": "sampling", "output_node": false, "output_tooltips": ["The denoised latent."]}, "CheckpointLoaderSimple": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], {"tooltip": "The name of the checkpoint (model) to load."}]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderSimple", "display_name": "Load Checkpoint", "description": "Loads a diffusion model checkpoint, diffusion models are used to denoise latents.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The model used for denoising latents.", "The CLIP model used for encoding text prompts.", "The VAE model used for encoding and decoding images to and from latent space."]}, "CLIPTextEncode": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "tooltip": "The text to be encoded."}], "clip": ["CLIP", {"tooltip": "The CLIP model used for encoding the text."}]}}, "input_order": {"required": ["text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncode", "display_name": "CLIP Text Encode (Prompt)", "description": "Encodes a text prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.", "python_module": "nodes", "category": "conditioning", "output_node": false, "output_tooltips": ["A conditioning containing the embedded text used to guide the diffusion model."]}, "CLIPSetLastLayer": {"input": {"required": {"clip": ["CLIP"], "stop_at_clip_layer": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}]}}, "input_order": {"required": ["clip", "stop_at_clip_layer"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPSetLastLayer", "display_name": "CLIP Set Last Layer", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "VAEDecode": {"input": {"required": {"samples": ["LATENT", {"tooltip": "The latent to be decoded."}], "vae": ["VAE", {"tooltip": "The VAE model used for decoding the latent."}]}}, "input_order": {"required": ["samples", "vae"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecode", "display_name": "VAE Decode", "description": "Decodes latent images back into pixel space images.", "python_module": "nodes", "category": "latent", "output_node": false, "output_tooltips": ["The decoded image."]}, "VAEEncode": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["pixels", "vae"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncode", "display_name": "VAE Encode", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "VAEEncodeForInpaint": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "mask": ["MASK"], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["pixels", "vae", "mask", "grow_mask_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeForInpaint", "display_name": "VAE Encode (for Inpainting)", "description": "", "python_module": "nodes", "category": "latent/inpaint", "output_node": false}, "VAELoader": {"input": {"required": {"vae_name": [["ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]]}}, "input_order": {"required": ["vae_name"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAELoader", "display_name": "Load VAE", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "EmptyLatentImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 16384, "step": 8, "tooltip": "The width of the latent images in pixels."}], "height": ["INT", {"default": 512, "min": 16, "max": 16384, "step": 8, "tooltip": "The height of the latent images in pixels."}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentImage", "display_name": "Empty Latent Image", "description": "Create a new batch of empty latent images to be denoised via sampling.", "python_module": "nodes", "category": "latent", "output_node": false, "output_tooltips": ["The empty latent image batch."]}, "LatentUpscale": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["samples", "upscale_method", "width", "height", "crop"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscale", "display_name": "Upscale Latent", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentUpscaleBy": {"input": {"required": {"samples": ["LATENT"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "scale_by": ["FLOAT", {"default": 1.5, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "upscale_method", "scale_by"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentUpscaleBy", "display_name": "Upscale Latent By", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentFromBatch": {"input": {"required": {"samples": ["LATENT"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 63}], "length": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["samples", "batch_index", "length"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentFromBatch", "display_name": "Latent From Batch", "description": "", "python_module": "nodes", "category": "latent/batch", "output_node": false}, "RepeatLatentBatch": {"input": {"required": {"samples": ["LATENT"], "amount": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["samples", "amount"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RepeatLatentBatch", "display_name": "Repeat Latent Batch", "description": "", "python_module": "nodes", "category": "latent/batch", "output_node": false}, "SaveImage": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImage", "display_name": "Save Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "nodes", "category": "image", "output_node": true}, "PreviewImage": {"input": {"required": {"images": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewImage", "display_name": "Preview Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "nodes", "category": "image", "output_node": true}, "LoadImage": {"input": {"required": {"image": [["148354449be94dcd2b8993c901253cdf.jpg", "2a40229891e585339c49d5f87bfe80d4.jpg", "44914-Ford-car-muscle_cars-4283821840.jpg", "58a00e372c9b2abc148517e663ee0a2f.jpg", "635b41fcb0d9d5bd450d10eb93dc1ca8-829068172.jpg", "7.png", "755690-3113977175.jpg", "A-stunning-living-room-featuring-key-elements-of-Brutalist-interior-design-780026718.webp", "FLUX_Redux_00004_.png", "FLUX_Redux_00005_.png", "FLUX_Redux_00008_.png", "FLUX_Redux_00009_.png", "FLUX_Redux_00011_.png", "FLUX_Redux_00012_.png", "FLUX_Redux_00013_.png", "Image_00015_.png", "Image_00018_.png", "Image_00019_.png", "Image_00021_.png", "Image_00033_.png", "Image_00058_.png", "MCW_ARTILLERY_GALLERY_04.webp", "MCW_TROOPER_WEB_GALLERY_01_2c721bd6-129b-40ac-9dbf-9c776b998521.webp", "MCW_TROOPER_WEB_GALLERY_02_06cf5825-3b98-4640-b549-5166754ac3c1.webp", "MCW_TROOPER_WEB_GALLERY_03.webp", "MCW_TROOPER_WEB_GALLERY_04.webp", "Screenshot from 2025-04-01 21-35-49.png", "Screenshot from 2025-04-16 20-35-52.png", "Zero-123__00017_.png", "a08715fd9dc4b7b812574dd4f5ae7fe7.jpg", "ahkibarar.jpg", "anime-front.png", "anime-rear.png", "anime-side.png", "asba-drums-2lnnbIHP8MM-unsplash.jpg", "bigstock-Portrait-of-a-smiling-woman-wi-86892704-2260387209.jpg", "blonde-hair-blue-eyes-girl-side-part-long-straight-style-2719680466.jpg", "camaroSS.png", "canny_process_00024_.png", "canny_process_00031_.png", "canny_res_00019_.png", "canny_res_00030_.png", "canny_res_00035_.png", "canny_res_00052_.png", "canny_res_00053_.png", "canny_res_00059_.png", "canny_res_00060_.png", "canny_res_00061_.png", "canny_res_00063_.png", "canny_res_00064_.png", "canny_res_00067_.png", "canny_res_00069_.png", "cycles__00001_.png", "cycles__00004_.png", "cycles__00005_.png", "example.png", "image1.png", "image8-2x2.png", "image8.png", "l-intro-1695760417-2303340266.jpg", "madmax_firecar4-2484916880.jpg", "man5-3395367803.jpg", "motobike.jpg", "tokyotreat_akihabara-adventure-thumbnail-3092584056.png", "typical_humanoid_mech.png", "what-is-man-1000x600-1940545957.jpg", "wp11174249-935136148.jpg"], {"image_upload": true}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImage", "display_name": "Load Image", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "LoadImageMask": {"input": {"required": {"image": [["148354449be94dcd2b8993c901253cdf.jpg", "2a40229891e585339c49d5f87bfe80d4.jpg", "44914-Ford-car-muscle_cars-4283821840.jpg", "58a00e372c9b2abc148517e663ee0a2f.jpg", "635b41fcb0d9d5bd450d10eb93dc1ca8-829068172.jpg", "7.png", "755690-3113977175.jpg", "A-stunning-living-room-featuring-key-elements-of-Brutalist-interior-design-780026718.webp", "FLUX_Redux_00004_.png", "FLUX_Redux_00005_.png", "FLUX_Redux_00008_.png", "FLUX_Redux_00009_.png", "FLUX_Redux_00011_.png", "FLUX_Redux_00012_.png", "FLUX_Redux_00013_.png", "Image_00015_.png", "Image_00018_.png", "Image_00019_.png", "Image_00021_.png", "Image_00033_.png", "Image_00058_.png", "MCW_ARTILLERY_GALLERY_04.webp", "MCW_TROOPER_WEB_GALLERY_01_2c721bd6-129b-40ac-9dbf-9c776b998521.webp", "MCW_TROOPER_WEB_GALLERY_02_06cf5825-3b98-4640-b549-5166754ac3c1.webp", "MCW_TROOPER_WEB_GALLERY_03.webp", "MCW_TROOPER_WEB_GALLERY_04.webp", "Screenshot from 2025-04-01 21-35-49.png", "Screenshot from 2025-04-16 20-35-52.png", "Zero-123__00017_.png", "a08715fd9dc4b7b812574dd4f5ae7fe7.jpg", "ahkibarar.jpg", "anime-front.png", "anime-rear.png", "anime-side.png", "asba-drums-2lnnbIHP8MM-unsplash.jpg", "bigstock-Portrait-of-a-smiling-woman-wi-86892704-2260387209.jpg", "blonde-hair-blue-eyes-girl-side-part-long-straight-style-2719680466.jpg", "camaroSS.png", "canny_process_00024_.png", "canny_process_00031_.png", "canny_res_00019_.png", "canny_res_00030_.png", "canny_res_00035_.png", "canny_res_00052_.png", "canny_res_00053_.png", "canny_res_00059_.png", "canny_res_00060_.png", "canny_res_00061_.png", "canny_res_00063_.png", "canny_res_00064_.png", "canny_res_00067_.png", "canny_res_00069_.png", "cycles__00001_.png", "cycles__00004_.png", "cycles__00005_.png", "example.png", "image1.png", "image8-2x2.png", "image8.png", "l-intro-1695760417-2303340266.jpg", "madmax_firecar4-2484916880.jpg", "man5-3395367803.jpg", "motobike.jpg", "tokyotreat_akihabara-adventure-thumbnail-3092584056.png", "typical_humanoid_mech.png", "what-is-man-1000x600-1940545957.jpg", "wp11174249-935136148.jpg"], {"image_upload": true}], "channel": [["alpha", "red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "LoadImageMask", "display_name": "Load Image (as Mask)", "description": "", "python_module": "nodes", "category": "mask", "output_node": false}, "LoadImageOutput": {"input": {"required": {"image": ["COMBO", {"image_upload": true, "image_folder": "output", "remote": {"route": "/internal/files/output", "refresh_button": true, "control_after_refresh": "first"}}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImageOutput", "display_name": "Load Image (from Outputs)", "description": "Load an image from the output folder. When the refresh button is clicked, the node will update the image list and automatically select the first image, allowing for easy iteration.", "python_module": "nodes", "category": "image", "output_node": false, "experimental": true}, "ImageScale": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "upscale_method", "width", "height", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScale", "display_name": "Upscale Image", "description": "", "python_module": "nodes", "category": "image/upscaling", "output_node": false}, "ImageScaleBy": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleBy", "display_name": "Upscale Image By", "description": "", "python_module": "nodes", "category": "image/upscaling", "output_node": false}, "ImageInvert": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageInvert", "display_name": "Invert Image", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ImageBatch": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatch", "display_name": "Batch Images", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ImagePadForOutpaint": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 40, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image", "left", "top", "right", "bottom", "feathering"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaint", "display_name": "Pad Image for Outpainting", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "EmptyImage": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "color": ["INT", {"default": 0, "min": 0, "max": 16777215, "step": 1, "display": "color"}]}}, "input_order": {"required": ["width", "height", "batch_size", "color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "EmptyImage", "display_name": "EmptyImage", "description": "", "python_module": "nodes", "category": "image", "output_node": false}, "ConditioningAverage": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "conditioning_from": ["CONDITIONING"], "conditioning_to_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_to", "conditioning_from", "conditioning_to_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningAverage", "display_name": "ConditioningAverage", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningCombine": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_1", "conditioning_2"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningCombine", "display_name": "Conditioning (Combine)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningConcat": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "conditioning_from": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_to", "conditioning_from"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningConcat", "display_name": "Conditioning (Concat)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetArea": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["INT", {"default": 64, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 64, "min": 64, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "x", "y", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetArea", "display_name": "Conditioning (Set Area)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetAreaPercentage": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "height": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "x": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "y": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "x", "y", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaPercentage", "display_name": "Conditioning (Set Area with Percentage)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetAreaStrength": {"input": {"required": {"conditioning": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaStrength", "display_name": "ConditioningSetAreaStrength", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ConditioningSetMask": {"input": {"required": {"conditioning": ["CONDITIONING"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["conditioning", "mask", "strength", "set_cond_area"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetMask", "display_name": "Conditioning (Set Mask)", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "KSamplerAdvanced": {"input": {"required": {"model": ["MODEL"], "add_noise": [["enable", "disable"]], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "return_with_leftover_noise": [["disable", "enable"]]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "start_at_step", "end_at_step", "return_with_leftover_noise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerAdvanced", "display_name": "KSampler (Advanced)", "description": "", "python_module": "nodes", "category": "sampling", "output_node": false}, "SetLatentNoiseMask": {"input": {"required": {"samples": ["LATENT"], "mask": ["MASK"]}}, "input_order": {"required": ["samples", "mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "SetLatentNoiseMask", "display_name": "Set Latent Noise Mask", "description": "", "python_module": "nodes", "category": "latent/inpaint", "output_node": false}, "LatentComposite": {"input": {"required": {"samples_to": ["LATENT"], "samples_from": ["LATENT"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feather": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["samples_to", "samples_from", "x", "y", "feather"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentComposite", "display_name": "Latent Composite", "description": "", "python_module": "nodes", "category": "latent", "output_node": false}, "LatentBlend": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["samples1", "samples2", "blend_factor"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBlend", "display_name": "Latent Blend", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "LatentRotate": {"input": {"required": {"samples": ["LATENT"], "rotation": [["none", "90 degrees", "180 degrees", "270 degrees"]]}}, "input_order": {"required": ["samples", "rotation"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentRotate", "display_name": "Rotate Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LatentFlip": {"input": {"required": {"samples": ["LATENT"], "flip_method": [["x-axis: vertically", "y-axis: horizontally"]]}}, "input_order": {"required": ["samples", "flip_method"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentFlip", "display_name": "Flip Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "LatentCrop": {"input": {"required": {"samples": ["LATENT"], "width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["samples", "width", "height", "x", "y"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentCrop", "display_name": "Crop Latent", "description": "", "python_module": "nodes", "category": "latent/transform", "output_node": false}, "FluxLoraLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "clip": ["CLIP", {"tooltip": "The CLIP model the LoRA will be applied to."}], "lora_name": [["0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"tooltip": "The name of the LoRA."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the CLIP model. This value can be negative."}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "FluxLoraLoader", "display_name": "Load LoRA", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "CLIPLoader": {"input": {"required": {"clip_name": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "type": [["stable_diffusion", "stable_cascade", "sd3", "stable_audio", "mochi", "ltxv", "pixart", "cosmos", "lumina2", "wan"]]}, "optional": {"device": [["default", "cpu"], {"advanced": true}]}}, "input_order": {"required": ["clip_name", "type"], "optional": ["device"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPLoader", "display_name": "Load CLIP", "description": "[Recipes]\n\nstable_diffusion: clip-l\nstable_cascade: clip-g\nsd3: t5 xxl/ clip-g / clip-l\nstable_audio: t5 base\nmochi: t5 xxl\ncosmos: old t5 xxl\nlumina2: gemma 2 2B\nwan: umt5 xxl", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "UNETLoader": {"input": {"required": {"unet_name": [["IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors"]], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2"]]}}, "input_order": {"required": ["unet_name", "weight_dtype"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNETLoader", "display_name": "Load Diffusion Model", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "DualCLIPLoader": {"input": {"required": {"clip_name1": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name2": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "type": [["sdxl", "sd3", "flux", "hunyuan_video"]]}, "optional": {"device": [["default", "cpu"], {"advanced": true}]}}, "input_order": {"required": ["clip_name1", "clip_name2", "type"], "optional": ["device"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "DualCLIPLoader", "display_name": "DualCLIPLoader", "description": "[Recipes]\n\nsdxl: clip-l, clip-g\nsd3: clip-l, clip-g / clip-l, t5 / clip-g, t5\nflux: clip-l, t5", "python_module": "nodes", "category": "advanced/loaders", "output_node": false}, "CLIPVisionEncode": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "image": ["IMAGE"], "crop": [["center", "none"]]}}, "input_order": {"required": ["clip_vision", "image", "crop"]}, "output": ["CLIP_VISION_OUTPUT"], "output_is_list": [false], "output_name": ["CLIP_VISION_OUTPUT"], "name": "CLIPVisionEncode", "display_name": "CLIP Vision Encode", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "StyleModelApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "style_model": ["STYLE_MODEL"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_type": [["multiply", "attn_bias"]]}}, "input_order": {"required": ["conditioning", "style_model", "clip_vision_output", "strength", "strength_type"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StyleModelApply", "display_name": "Apply Style Model", "description": "", "python_module": "nodes", "category": "conditioning/style_model", "output_node": false}, "unCLIPConditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "noise_augmentation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "clip_vision_output", "strength", "noise_augmentation"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "unCLIPConditioning", "display_name": "unCLIPConditioning", "description": "", "python_module": "nodes", "category": "conditioning", "output_node": false}, "ControlNetApply": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ControlNetApply", "display_name": "Apply ControlNet (OLD)", "description": "", "python_module": "nodes", "category": "conditioning/controlnet", "output_node": false, "deprecated": true}, "ControlNetApplyAdvanced": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"vae": ["VAE"]}}, "input_order": {"required": ["positive", "negative", "control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["vae"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetApplyAdvanced", "display_name": "Apply ControlNet", "description": "", "python_module": "nodes", "category": "conditioning/controlnet", "output_node": false}, "ControlNetLoader": {"input": {"required": {"control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}}, "input_order": {"required": ["control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "ControlNetLoader", "display_name": "Load ControlNet Model", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "DiffControlNetLoader": {"input": {"required": {"model": ["MODEL"], "control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}}, "input_order": {"required": ["model", "control_net_name"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "DiffControlNetLoader", "display_name": "Load ControlNet Model (diff)", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "StyleModelLoader": {"input": {"required": {"style_model_name": [["flux1-redux-dev.safetensors"]]}}, "input_order": {"required": ["style_model_name"]}, "output": ["STYLE_MODEL"], "output_is_list": [false], "output_name": ["STYLE_MODEL"], "name": "StyleModelLoader", "display_name": "Load Style Model", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "CLIPVisionLoader": {"input": {"required": {"clip_name": [["CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "clip-vit-large-patch14.safetensors", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_vision_g.safetensors", "sigclip_vision_patch14_384.safetensors"]]}}, "input_order": {"required": ["clip_name"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "CLIPVisionLoader", "display_name": "Load CLIP Vision", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "VAEDecodeTiled": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 32}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}], "temporal_size": ["INT", {"default": 64, "min": 8, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to decode at a time."}], "temporal_overlap": ["INT", {"default": 8, "min": 4, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to overlap."}]}}, "input_order": {"required": ["samples", "vae", "tile_size", "overlap", "temporal_size", "temporal_overlap"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "VAEDecodeTiled", "display_name": "VAE Decode (Tiled)", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "VAEEncodeTiled": {"input": {"required": {"pixels": ["IMAGE"], "vae": ["VAE"], "tile_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}], "temporal_size": ["INT", {"default": 64, "min": 8, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to encode at a time."}], "temporal_overlap": ["INT", {"default": 8, "min": 4, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to overlap."}]}}, "input_order": {"required": ["pixels", "vae", "tile_size", "overlap", "temporal_size", "temporal_overlap"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeTiled", "display_name": "VAE Encode (Tiled)", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "unCLIPCheckpointLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION"], "name": "unCLIPCheckpointLoader", "display_name": "unCLIPCheckpointLoader", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "GLIGENLoader": {"input": {"required": {"gligen_name": [[]]}}, "input_order": {"required": ["gligen_name"]}, "output": ["GLIGEN"], "output_is_list": [false], "output_name": ["GLIGEN"], "name": "GLIGENLoader", "display_name": "GLIGENLoader", "description": "", "python_module": "nodes", "category": "loaders", "output_node": false}, "GLIGENTextBoxApply": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "width": ["INT", {"default": 64, "min": 8, "max": 16384, "step": 8}], "height": ["INT", {"default": 64, "min": 8, "max": 16384, "step": 8}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["conditioning_to", "clip", "gligen_textbox_model", "text", "width", "height", "x", "y"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "GLIGENTextBoxApply", "display_name": "GLIGENTextBoxApply", "description": "", "python_module": "nodes", "category": "conditioning/gligen", "output_node": false}, "InpaintModelConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"], "mask": ["MASK"], "noise_mask": ["BOOLEAN", {"default": true, "tooltip": "Add a noise mask to the latent so sampling will only happen within the mask. Might improve results or completely break things depending on the model."}]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels", "mask", "noise_mask"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InpaintModelConditioning", "display_name": "InpaintModelConditioning", "description": "", "python_module": "nodes", "category": "conditioning/inpaint", "output_node": false}, "CheckpointLoader": {"input": {"required": {"config_name": [["anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"]], "ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["config_name", "ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoader", "display_name": "Load Checkpoint With Config (DEPRECATED)", "description": "", "python_module": "nodes", "category": "advanced/loaders", "output_node": false, "deprecated": true}, "DiffusersLoader": {"input": {"required": {"model_path": [[]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "DiffusersLoader", "display_name": "DiffusersLoader", "description": "", "python_module": "nodes", "category": "advanced/loaders/deprecated", "output_node": false}, "LoadLatent": {"input": {"required": {"latent": [[]]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LoadLatent", "display_name": "LoadLatent", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": false}, "SaveLatent": {"input": {"required": {"samples": ["LATENT"], "filename_prefix": ["STRING", {"default": "latents/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["samples", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveLatent", "display_name": "SaveLatent", "description": "", "python_module": "nodes", "category": "_for_testing", "output_node": true}, "ConditioningZeroOut": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningZeroOut", "display_name": "ConditioningZeroOut", "description": "", "python_module": "nodes", "category": "advanced/conditioning", "output_node": false}, "ConditioningSetTimestepRange": {"input": {"required": {"conditioning": ["CONDITIONING"], "start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "start", "end"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetTimestepRange", "display_name": "ConditioningSetTimestepRange", "description": "", "python_module": "nodes", "category": "advanced/conditioning", "output_node": false}, "FluxLoraLoaderModelOnly": {"input": {"required": {"model": ["MODEL"], "lora_name": [["0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FluxLoraLoaderModelOnly", "display_name": "FluxLoraLoaderModelOnly", "description": "LoRAs are used to modify diffusion and CLIP models, altering the way in which latents are denoised such as applying styles. Multiple LoRA nodes can be linked together.", "python_module": "nodes", "category": "loaders", "output_node": false, "output_tooltips": ["The modified diffusion model.", "The modified CLIP model."]}, "LatentAdd": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentAdd", "display_name": "LatentAdd", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentSubtract": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentSubtract", "display_name": "LatentSubtract", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentMultiply": {"input": {"required": {"samples": ["LATENT"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "multiplier"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentMultiply", "display_name": "LatentMultiply", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentInterpolate": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["samples1", "samples2", "ratio"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentInterpolate", "display_name": "LatentInterpolate", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentBatch": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"]}}, "input_order": {"required": ["samples1", "samples2"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatch", "display_name": "LatentBatch", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/batch", "output_node": false}, "LatentBatchSeedBehavior": {"input": {"required": {"samples": ["LATENT"], "seed_behavior": [["random", "fixed"], {"default": "fixed"}]}}, "input_order": {"required": ["samples", "seed_behavior"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatchSeedBehavior", "display_name": "LatentBatchSeedBehavior", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced", "output_node": false}, "LatentApplyOperation": {"input": {"required": {"samples": ["LATENT"], "operation": ["LATENT_OPERATION"]}}, "input_order": {"required": ["samples", "operation"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentApplyOperation", "display_name": "LatentApplyOperation", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "LatentApplyOperationCFG": {"input": {"required": {"model": ["MODEL"], "operation": ["LATENT_OPERATION"]}}, "input_order": {"required": ["model", "operation"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LatentApplyOperationCFG", "display_name": "LatentApplyOperationCFG", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "LatentOperationTonemapReinhard": {"input": {"required": {"multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["multiplier"]}, "output": ["LATENT_OPERATION"], "output_is_list": [false], "output_name": ["LATENT_OPERATION"], "name": "LatentOperationTonemapReinhard", "display_name": "LatentOperationTonemapReinhard", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "LatentOperationSharpen": {"input": {"required": {"sharpen_radius": ["INT", {"default": 9, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "alpha": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 5.0, "step": 0.01}]}}, "input_order": {"required": ["sharpen_radius", "sigma", "alpha"]}, "output": ["LATENT_OPERATION"], "output_is_list": [false], "output_name": ["LATENT_OPERATION"], "name": "LatentOperationSharpen", "display_name": "LatentOperationSharpen", "description": "", "python_module": "comfy_extras.nodes_latent", "category": "latent/advanced/operations", "output_node": false, "experimental": true}, "HypernetworkLoader": {"input": {"required": {"model": ["MODEL"], "hypernetwork_name": [[]], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "hypernetwork_name", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HypernetworkLoader", "display_name": "HypernetworkLoader", "description": "", "python_module": "comfy_extras.nodes_hypernetwork", "category": "loaders", "output_node": false}, "UpscaleModelLoader": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]]}}, "input_order": {"required": ["model_name"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "UpscaleModelLoader", "display_name": "Load Upscale Model", "description": "", "python_module": "comfy_extras.nodes_upscale_model", "category": "loaders", "output_node": false}, "ImageUpscaleWithModel": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "image": ["IMAGE"]}}, "input_order": {"required": ["upscale_model", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUpscaleWithModel", "display_name": "Upscale Image (using Model)", "description": "", "python_module": "comfy_extras.nodes_upscale_model", "category": "image/upscaling", "output_node": false}, "ImageBlend": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "blend_mode": [["normal", "multiply", "screen", "overlay", "soft_light", "difference"]]}}, "input_order": {"required": ["image1", "image2", "blend_factor", "blend_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBlend", "display_name": "Image Blend", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageBlur": {"input": {"required": {"image": ["IMAGE"], "blur_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["image", "blur_radius", "sigma"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBlur", "display_name": "Image Blur", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageQuantize": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 256, "min": 1, "max": 256, "step": 1}], "dither": [["none", "floyd-steinberg", "bayer-2", "bayer-4", "bayer-8", "bayer-16"]]}}, "input_order": {"required": ["image", "colors", "dither"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageQuantize", "display_name": "Image Quantize", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageSharpen": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.01}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}}, "input_order": {"required": ["image", "sharpen_radius", "sigma", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSharpen", "display_name": "Image Sharpen", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/postprocessing", "output_node": false}, "ImageScaleToTotalPixels": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "megapixels": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 16.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "megapixels"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageScaleToTotalPixels", "display_name": "Scale Image to Total Pixels", "description": "", "python_module": "comfy_extras.nodes_post_processing", "category": "image/upscaling", "output_node": false}, "LatentCompositeMasked": {"input": {"required": {"destination": ["LATENT"], "source": ["LATENT"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "resize_source": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "resize_source"], "optional": ["mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentCompositeMasked", "display_name": "LatentCompositeMasked", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "latent", "output_node": false}, "ImageCompositeMasked": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "resize_source": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "resize_source"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeMasked", "display_name": "ImageCompositeMasked", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "image", "output_node": false}, "MaskToImage": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MaskToImage", "display_name": "Convert Mask to Image", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ImageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue", "alpha"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImageToMask", "display_name": "Convert Image to Mask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ImageColorToMask": {"input": {"required": {"image": ["IMAGE"], "color": ["INT", {"default": 0, "min": 0, "max": 16777215, "step": 1, "display": "color"}]}}, "input_order": {"required": ["image", "color"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ImageColorToMask", "display_name": "ImageColorToMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "SolidMask": {"input": {"required": {"value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["value", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "SolidMask", "display_name": "SolidMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "InvertMask": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "InvertMask", "display_name": "InvertMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "CropMask": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["mask", "x", "y", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CropMask", "display_name": "CropMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "MaskComposite": {"input": {"required": {"destination": ["MASK"], "source": ["MASK"], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "operation": [["multiply", "add", "subtract", "and", "or", "xor"]]}}, "input_order": {"required": ["destination", "source", "x", "y", "operation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskComposite", "display_name": "MaskComposite", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "FeatherMask": {"input": {"required": {"mask": ["MASK"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["mask", "left", "top", "right", "bottom"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FeatherMask", "display_name": "FeatherMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "GrowMask": {"input": {"required": {"mask": ["MASK"], "expand": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "tapered_corners": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mask", "expand", "tapered_corners"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "GrowMask", "display_name": "GrowMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "ThresholdMask": {"input": {"required": {"mask": ["MASK"], "value": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "value"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ThresholdMask", "display_name": "ThresholdMask", "description": "", "python_module": "comfy_extras.nodes_mask", "category": "mask", "output_node": false}, "PorterDuffImageComposite": {"input": {"required": {"source": ["IMAGE"], "source_alpha": ["MASK"], "destination": ["IMAGE"], "destination_alpha": ["MASK"], "mode": [["ADD", "CLEAR", "DARKEN", "DST", "DST_ATOP", "DST_IN", "DST_OUT", "DST_OVER", "LIGHTEN", "MULTIPLY", "OVERLAY", "SCREEN", "SRC", "SRC_ATOP", "SRC_IN", "SRC_OUT", "SRC_OVER", "XOR"], {"default": "DST"}]}}, "input_order": {"required": ["source", "source_alpha", "destination", "destination_alpha", "mode"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "PorterDuffImageComposite", "display_name": "Porter-Duff Image Composite", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "SplitImageWithAlpha": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "SplitImageWithAlpha", "display_name": "Split Image with Alpha", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "JoinImageWithAlpha": {"input": {"required": {"image": ["IMAGE"], "alpha": ["MASK"]}}, "input_order": {"required": ["image", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "JoinImageWithAlpha", "display_name": "Join Image with Alpha", "description": "", "python_module": "comfy_extras.nodes_compositing", "category": "mask/compositing", "output_node": false}, "RebatchLatents": {"input": {"required": {"latents": ["LATENT"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["latents", "batch_size"]}, "output": ["LATENT"], "output_is_list": [true], "output_name": ["LATENT"], "name": "RebatchLatents", "display_name": "Rebatch Latents", "description": "", "python_module": "comfy_extras.nodes_rebatch", "category": "latent/batch", "output_node": false}, "RebatchImages": {"input": {"required": {"images": ["IMAGE"], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["images", "batch_size"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "RebatchImages", "display_name": "Rebatch Images", "description": "", "python_module": "comfy_extras.nodes_rebatch", "category": "image/batch", "output_node": false}, "ModelMergeSimple": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "ratio"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSimple", "display_name": "ModelMergeSimple", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeBlocks": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "input": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "input", "middle", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeBlocks", "display_name": "ModelMergeBlocks", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeSubtract": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "multiplier"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSubtract", "display_name": "ModelMergeSubtract", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "ModelMergeAdd": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"]}}, "input_order": {"required": ["model1", "model2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeAdd", "display_name": "ModelMergeAdd", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CheckpointSave": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "filename_prefix": ["STRING", {"default": "checkpoints/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "clip", "vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CheckpointSave", "display_name": "Save Checkpoint", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "CLIPMergeSimple": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"], "ratio": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["clip1", "clip2", "ratio"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeSimple", "display_name": "CLIPMergeSimple", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPMergeSubtract": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip1", "clip2", "multiplier"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeSubtract", "display_name": "CLIPMergeSubtract", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPMergeAdd": {"input": {"required": {"clip1": ["CLIP"], "clip2": ["CLIP"]}}, "input_order": {"required": ["clip1", "clip2"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPMergeAdd", "display_name": "CLIPMergeAdd", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": false}, "CLIPSave": {"input": {"required": {"clip": ["CLIP"], "filename_prefix": ["STRING", {"default": "clip/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["clip", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CLIPSave", "display_name": "CLIPSave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "VAESave": {"input": {"required": {"vae": ["VAE"], "filename_prefix": ["STRING", {"default": "vae/ComfyUI_vae"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "VAESave", "display_name": "VAESave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "ModelSave": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "diffusion_models/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelSave", "display_name": "ModelSave", "description": "", "python_module": "comfy_extras.nodes_model_merging", "category": "advanced/model_merging", "output_node": true}, "TomePatchModel": {"input": {"required": {"model": ["MODEL"], "ratio": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "ratio"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TomePatchModel", "display_name": "TomePatchModel", "description": "", "python_module": "comfy_extras.nodes_tomesd", "category": "model_patches/unet", "output_node": false}, "CLIPTextEncodeSDXLRefiner": {"input": {"required": {"ascore": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["ascore", "width", "height", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXLRefiner", "display_name": "CLIPTextEncodeSDXLRefiner", "description": "", "python_module": "comfy_extras.nodes_clip_sdxl", "category": "advanced/conditioning", "output_node": false}, "CLIPTextEncodeSDXL": {"input": {"required": {"clip": ["CLIP"], "width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "text_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "width", "height", "crop_w", "crop_h", "target_width", "target_height", "text_g", "text_l"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXL", "display_name": "CLIPTextEncodeSDXL", "description": "", "python_module": "comfy_extras.nodes_clip_sdxl", "category": "advanced/conditioning", "output_node": false}, "Canny": {"input": {"required": {"image": ["IMAGE"], "low_threshold": ["FLOAT", {"default": 0.4, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"default": 0.8, "min": 0.01, "max": 0.99, "step": 0.01}]}}, "input_order": {"required": ["image", "low_threshold", "high_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Canny", "display_name": "Canny", "description": "", "python_module": "comfy_extras.nodes_canny", "category": "image/preprocessors", "output_node": false}, "FreeU": {"input": {"required": {"model": ["MODEL"], "b1": ["FLOAT", {"default": 1.1, "min": 0.0, "max": 10.0, "step": 0.01}], "b2": ["FLOAT", {"default": 1.2, "min": 0.0, "max": 10.0, "step": 0.01}], "s1": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 10.0, "step": 0.01}], "s2": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "b1", "b2", "s1", "s2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreeU", "display_name": "FreeU", "description": "", "python_module": "comfy_extras.nodes_freelunch", "category": "model_patches/unet", "output_node": false}, "FreeU_V2": {"input": {"required": {"model": ["MODEL"], "b1": ["FLOAT", {"default": 1.3, "min": 0.0, "max": 10.0, "step": 0.01}], "b2": ["FLOAT", {"default": 1.4, "min": 0.0, "max": 10.0, "step": 0.01}], "s1": ["FLOAT", {"default": 0.9, "min": 0.0, "max": 10.0, "step": 0.01}], "s2": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "b1", "b2", "s1", "s2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FreeU_V2", "display_name": "FreeU_V2", "description": "", "python_module": "comfy_extras.nodes_freelunch", "category": "model_patches/unet", "output_node": false}, "SamplerCustom": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "add_noise", "noise_seed", "cfg", "positive", "negative", "sampler", "sigmas", "latent_image"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "SamplerCustom", "display_name": "SamplerCustom", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling", "output_node": false}, "BasicScheduler": {"input": {"required": {"model": ["MODEL"], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "scheduler", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BasicScheduler", "display_name": "BasicScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "KarrasScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "rho"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "KarrasScheduler", "display_name": "KarrasScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "ExponentialScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "ExponentialScheduler", "display_name": "ExponentialScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "PolyexponentialScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "rho"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "PolyexponentialScheduler", "display_name": "PolyexponentialScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "LaplaceScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "mu": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.1, "round": false}], "beta": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["steps", "sigma_max", "sigma_min", "mu", "beta"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "LaplaceScheduler", "display_name": "LaplaceScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "VPScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "beta_d": ["FLOAT", {"default": 19.9, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "beta_min": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 5000.0, "step": 0.01, "round": false}], "eps_s": ["FLOAT", {"default": 0.001, "min": 0.0, "max": 1.0, "step": 0.0001, "round": false}]}}, "input_order": {"required": ["steps", "beta_d", "beta_min", "eps_s"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "VPScheduler", "display_name": "VPScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "BetaSamplingScheduler": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "alpha": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 50.0, "step": 0.01, "round": false}], "beta": ["FLOAT", {"default": 0.6, "min": 0.0, "max": 50.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["model", "steps", "alpha", "beta"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BetaSamplingScheduler", "display_name": "BetaSamplingScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "SDTurboScheduler": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 1, "min": 1, "max": 10}], "denoise": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "SDTurboScheduler", "display_name": "SDTurboScheduler", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "KSamplerSelect": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]]}}, "input_order": {"required": ["sampler_name"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "KSamplerSelect", "display_name": "KSamplerSelect", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerAncestral": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerAncestral", "display_name": "SamplerEulerAncestral", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerAncestralCFGPP": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerAncestralCFGPP", "display_name": "SamplerEulerAncestralCFG++", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerLMS": {"input": {"required": {"order": ["INT", {"default": 4, "min": 1, "max": 100}]}}, "input_order": {"required": ["order"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerLMS", "display_name": "SamplerLMS", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_3M_SDE": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["eta", "s_noise", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_3M_SDE", "display_name": "SamplerDPMPP_3M_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_2M_SDE": {"input": {"required": {"solver_type": [["midpoint", "heun"]], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["solver_type", "eta", "s_noise", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_2M_SDE", "display_name": "SamplerDPMPP_2M_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_SDE": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "r": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "noise_device": [["gpu", "cpu"]]}}, "input_order": {"required": ["eta", "s_noise", "r", "noise_device"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_SDE", "display_name": "SamplerDPMPP_SDE", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMPP_2S_Ancestral": {"input": {"required": {"eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMPP_2S_Ancestral", "display_name": "SamplerDPMPP_2S_Ancestral", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerDPMAdaptative": {"input": {"required": {"order": ["INT", {"default": 3, "min": 2, "max": 3}], "rtol": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "atol": ["FLOAT", {"default": 0.0078, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "h_init": ["FLOAT", {"default": 0.05, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "pcoeff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "icoeff": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "dcoeff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "accept_safety": ["FLOAT", {"default": 0.81, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "eta": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["order", "rtol", "atol", "h_init", "pcoeff", "icoeff", "dcoeff", "accept_safety", "eta", "s_noise"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerDPMAdaptative", "display_name": "SamplerDPMAdaptative", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SplitSigmas": {"input": {"required": {"sigmas": ["SIGMAS"], "step": ["INT", {"default": 0, "min": 0, "max": 10000}]}}, "input_order": {"required": ["sigmas", "step"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["high_sigmas", "low_sigmas"], "name": "SplitSigmas", "display_name": "SplitSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "SplitSigmasDenoise": {"input": {"required": {"sigmas": ["SIGMAS"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "denoise"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["high_sigmas", "low_sigmas"], "name": "SplitSigmasDenoise", "display_name": "SplitSigmasDenoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "FlipSigmas": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "FlipSigmas", "display_name": "FlipSigmas", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "SetFirstSigma": {"input": {"required": {"sigmas": ["SIGMAS"], "sigma": ["FLOAT", {"default": 136.0, "min": 0.0, "max": 20000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["sigmas", "sigma"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "SetFirstSigma", "display_name": "SetFirstSigma", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "CFGGuider": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "cfg"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "CFGGuider", "display_name": "CFGGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "DualCFGGuider": {"input": {"required": {"model": ["MODEL"], "cond1": ["CONDITIONING"], "cond2": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg_conds": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "cfg_cond2_negative": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}]}}, "input_order": {"required": ["model", "cond1", "cond2", "negative", "cfg_conds", "cfg_cond2_negative"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "DualCFGGuider", "display_name": "DualCFGGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "BasicGuider": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["model", "conditioning"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "BasicGuider", "display_name": "BasicGuider", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/guiders", "output_node": false}, "RandomNoise": {"input": {"required": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "control_after_generate": true}]}}, "input_order": {"required": ["noise_seed"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "RandomNoise", "display_name": "RandomNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/noise", "output_node": false}, "DisableNoise": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "DisableNoise", "display_name": "DisableNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling/noise", "output_node": false}, "AddNoise": {"input": {"required": {"model": ["MODEL"], "noise": ["NOISE"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "noise", "sigmas", "latent_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "AddNoise", "display_name": "AddNoise", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "_for_testing/custom_sampling/noise", "output_node": false}, "SamplerCustomAdvanced": {"input": {"required": {"noise": ["NOISE"], "guider": ["GUIDER"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["noise", "guider", "sampler", "sigmas", "latent_image"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised_output"], "name": "SamplerCustomAdvanced", "display_name": "SamplerCustomAdvanced", "description": "", "python_module": "comfy_extras.nodes_custom_sampler", "category": "sampling/custom_sampling", "output_node": false}, "HyperTile": {"input": {"required": {"model": ["MODEL"], "tile_size": ["INT", {"default": 256, "min": 1, "max": 2048}], "swap_size": ["INT", {"default": 2, "min": 1, "max": 128}], "max_depth": ["INT", {"default": 0, "min": 0, "max": 10}], "scale_depth": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "tile_size", "swap_size", "max_depth", "scale_depth"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "HyperTile", "display_name": "HyperTile", "description": "", "python_module": "comfy_extras.nodes_hypertile", "category": "model_patches/unet", "output_node": false}, "ModelSamplingDiscrete": {"input": {"required": {"model": ["MODEL"], "sampling": [["eps", "v_prediction", "lcm", "x0", "img_to_img"]], "zsnr": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["model", "sampling", "zsnr"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingDiscrete", "display_name": "ModelSamplingDiscrete", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingContinuousEDM": {"input": {"required": {"model": ["MODEL"], "sampling": [["v_prediction", "edm", "edm_playground_v2.5", "eps"]], "sigma_max": ["FLOAT", {"default": 120.0, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}], "sigma_min": ["FLOAT", {"default": 0.002, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["model", "sampling", "sigma_max", "sigma_min"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingContinuousEDM", "display_name": "ModelSamplingContinuousEDM", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingContinuousV": {"input": {"required": {"model": ["MODEL"], "sampling": [["v_prediction"]], "sigma_max": ["FLOAT", {"default": 500.0, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}], "sigma_min": ["FLOAT", {"default": 0.03, "min": 0.0, "max": 1000.0, "step": 0.001, "round": false}]}}, "input_order": {"required": ["model", "sampling", "sigma_max", "sigma_min"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingContinuousV", "display_name": "ModelSamplingContinuousV", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingStableCascade": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingStableCascade", "display_name": "ModelSamplingStableCascade", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingSD3": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingSD3", "display_name": "ModelSamplingSD3", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingAuraFlow": {"input": {"required": {"model": ["MODEL"], "shift": ["FLOAT", {"default": 1.73, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingAuraFlow", "display_name": "ModelSamplingAuraFlow", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelSamplingFlux": {"input": {"required": {"model": ["MODEL"], "max_shift": ["FLOAT", {"default": 1.15, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 100.0, "step": 0.01}], "width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}]}}, "input_order": {"required": ["model", "max_shift", "base_shift", "width", "height"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingFlux", "display_name": "ModelSamplingFlux", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "RescaleCFG": {"input": {"required": {"model": ["MODEL"], "multiplier": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "multiplier"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RescaleCFG", "display_name": "RescaleCFG", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/model", "output_node": false}, "ModelComputeDtype": {"input": {"required": {"model": ["MODEL"], "dtype": [["default", "fp32", "fp16", "bf16"]]}}, "input_order": {"required": ["model", "dtype"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelComputeDtype", "display_name": "ModelComputeDtype", "description": "", "python_module": "comfy_extras.nodes_model_advanced", "category": "advanced/debug/model", "output_node": false}, "PatchModelAddDownscale": {"input": {"required": {"model": ["MODEL"], "block_number": ["INT", {"default": 3, "min": 1, "max": 32, "step": 1}], "downscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 9.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.001}], "downscale_after_skip": ["BOOLEAN", {"default": true}], "downscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "upscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]]}}, "input_order": {"required": ["model", "block_number", "downscale_factor", "start_percent", "end_percent", "downscale_after_skip", "downscale_method", "upscale_method"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PatchModelAddDownscale", "display_name": "PatchModelAddDownscale (Kohya Deep Shrink)", "description": "", "python_module": "comfy_extras.nodes_model_downscale", "category": "model_patches/unet", "output_node": false}, "ImageCrop": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "x": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "x", "y"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCrop", "display_name": "Image Crop", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/transform", "output_node": false}, "RepeatImageBatch": {"input": {"required": {"image": ["IMAGE"], "amount": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RepeatImageBatch", "display_name": "RepeatImageBatch", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/batch", "output_node": false}, "ImageFromBatch": {"input": {"required": {"image": ["IMAGE"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 4095}], "length": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["image", "batch_index", "length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFromBatch", "display_name": "ImageFromBatch", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/batch", "output_node": false}, "SaveAnimatedWEBP": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "fps": ["FLOAT", {"default": 6.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "lossless": ["BOOLEAN", {"default": true}], "quality": ["INT", {"default": 80, "min": 0, "max": 100}], "method": [["default", "fastest", "slowest"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "fps", "lossless", "quality", "method"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAnimatedWEBP", "display_name": "SaveAnimatedWEBP", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/animation", "output_node": true}, "SaveAnimatedPNG": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "fps": ["FLOAT", {"default": 6.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "compress_level": ["INT", {"default": 4, "min": 0, "max": 9}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "fps", "compress_level"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAnimatedPNG", "display_name": "SaveAnimatedPNG", "description": "", "python_module": "comfy_extras.nodes_images", "category": "image/animation", "output_node": true}, "ImageOnlyCheckpointLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP_VISION", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP_VISION", "VAE"], "name": "ImageOnlyCheckpointLoader", "display_name": "Image Only Checkpoint Loader (img2vid model)", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "loaders/video_models", "output_node": false}, "SVD_img2vid_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 14, "min": 1, "max": 4096}], "motion_bucket_id": ["INT", {"default": 127, "min": 1, "max": 1023}], "fps": ["INT", {"default": 6, "min": 1, "max": 1024}], "augmentation_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "video_frames", "motion_bucket_id", "fps", "augmentation_level"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SVD_img2vid_Conditioning", "display_name": "SVD_img2vid_Conditioning", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "conditioning/video_models", "output_node": false}, "VideoLinearCFGGuidance": {"input": {"required": {"model": ["MODEL"], "min_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["model", "min_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "VideoLinearCFGGuidance", "display_name": "VideoLinearCFGGuidance", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "sampling/video_models", "output_node": false}, "VideoTriangleCFGGuidance": {"input": {"required": {"model": ["MODEL"], "min_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}]}}, "input_order": {"required": ["model", "min_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "VideoTriangleCFGGuidance", "display_name": "VideoTriangleCFGGuidance", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "sampling/video_models", "output_node": false}, "ImageOnlyCheckpointSave": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "vae": ["VAE"], "filename_prefix": ["STRING", {"default": "checkpoints/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "clip_vision", "vae", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ImageOnlyCheckpointSave", "display_name": "ImageOnlyCheckpointSave", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "advanced/model_merging", "output_node": true}, "ConditioningSetAreaPercentageVideo": {"input": {"required": {"conditioning": ["CONDITIONING"], "width": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "height": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "temporal": ["FLOAT", {"default": 1.0, "min": 0, "max": 1.0, "step": 0.01}], "x": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "y": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "z": ["FLOAT", {"default": 0, "min": 0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "width", "height", "temporal", "x", "y", "z", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetAreaPercentageVideo", "display_name": "ConditioningSetAreaPercentageVideo", "description": "", "python_module": "comfy_extras.nodes_video_model", "category": "conditioning", "output_node": false}, "SelfAttentionGuidance": {"input": {"required": {"model": ["MODEL"], "scale": ["FLOAT", {"default": 0.5, "min": -2.0, "max": 5.0, "step": 0.01}], "blur_sigma": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 10.0, "step": 0.1}]}}, "input_order": {"required": ["model", "scale", "blur_sigma"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SelfAttentionGuidance", "display_name": "Self-Attention Guidance", "description": "", "python_module": "comfy_extras.nodes_sag", "category": "_for_testing", "output_node": false}, "PerpNeg": {"input": {"required": {"model": ["MODEL"], "empty_conditioning": ["CONDITIONING"], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "empty_conditioning", "neg_scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PerpNeg", "display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)", "description": "", "python_module": "comfy_extras.nodes_perpneg", "category": "_for_testing", "output_node": false, "deprecated": true}, "PerpNegGuider": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "empty_conditioning": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "neg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "empty_conditioning", "cfg", "neg_scale"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "PerpNegGuider", "display_name": "PerpNegGuider", "description": "", "python_module": "comfy_extras.nodes_perpneg", "category": "_for_testing", "output_node": false}, "StableZero123_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "elevation", "azimuth"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_Conditioning", "display_name": "StableZero123_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "StableZero123_Conditioning_Batched": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "elevation_batch_increment": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}], "azimuth_batch_increment": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "elevation", "azimuth", "elevation_batch_increment", "azimuth_batch_increment"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_Conditioning_Batched", "display_name": "StableZero123_Conditioning_Batched", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "SV3D_Conditioning": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 21, "min": 1, "max": 4096}], "elevation": ["FLOAT", {"default": 0.0, "min": -90.0, "max": 90.0, "step": 0.1, "round": false}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "video_frames", "elevation"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SV3D_Conditioning", "display_name": "SV3D_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable3d", "category": "conditioning/3d_models", "output_node": false}, "SD_4XUpscale_Conditioning": {"input": {"required": {"images": ["IMAGE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "scale_ratio": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 10.0, "step": 0.01}], "noise_augmentation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["images", "positive", "negative", "scale_ratio", "noise_augmentation"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SD_4XUpscale_Conditioning", "display_name": "SD_4XUpscale_Conditioning", "description": "", "python_module": "comfy_extras.nodes_sdupscale", "category": "conditioning/upscale_diffusion", "output_node": false}, "PhotoMakerLoader": {"input": {"required": {"photomaker_model_name": [[]]}}, "input_order": {"required": ["photomaker_model_name"]}, "output": ["PHOTOMAKER"], "output_is_list": [false], "output_name": ["PHOTOMAKER"], "name": "PhotoMakerLoader", "display_name": "PhotoMakerLoader", "description": "", "python_module": "comfy_extras.nodes_photomaker", "category": "_for_testing/photomaker", "output_node": false}, "PhotoMakerEncode": {"input": {"required": {"photomaker": ["PHOTOMAKER"], "image": ["IMAGE"], "clip": ["CLIP"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "photograph of photomaker"}]}}, "input_order": {"required": ["photomaker", "image", "clip", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "PhotoMakerEncode", "display_name": "PhotoMakerEncode", "description": "", "python_module": "comfy_extras.nodes_photomaker", "category": "_for_testing/photomaker", "output_node": false}, "CLIPTextEncodePixArtAlpha": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodePixArtAlpha", "display_name": "CLIPTextEncodePixArtAlpha", "description": "Encodes text and sets the resolution conditioning for PixArt Alpha. Does not apply to PixArt Sigma.", "python_module": "comfy_extras.nodes_pixart", "category": "advanced/conditioning", "output_node": false}, "CLIPTextEncodeControlnet": {"input": {"required": {"clip": ["CLIP"], "conditioning": ["CONDITIONING"], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "conditioning", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeControlnet", "display_name": "CLIPTextEncodeControlnet", "description": "", "python_module": "comfy_extras.nodes_cond", "category": "_for_testing/conditioning", "output_node": false}, "Morphology": {"input": {"required": {"image": ["IMAGE"], "operation": [["erode", "dilate", "open", "close", "gradient", "bottom_hat", "top_hat"]], "kernel_size": ["INT", {"default": 3, "min": 3, "max": 999, "step": 1}]}}, "input_order": {"required": ["image", "operation", "kernel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Morphology", "display_name": "ImageMorphology", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/postprocessing", "output_node": false}, "ImageRGBToYUV": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["Y", "U", "V"], "name": "ImageRGBToYUV", "display_name": "ImageRGBToYUV", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/batch", "output_node": false}, "ImageYUVToRGB": {"input": {"required": {"Y": ["IMAGE"], "U": ["IMAGE"], "V": ["IMAGE"]}}, "input_order": {"required": ["Y", "U", "V"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageYUVToRGB", "display_name": "ImageYUVToRGB", "description": "", "python_module": "comfy_extras.nodes_morphology", "category": "image/batch", "output_node": false}, "StableCascade_EmptyLatentImage": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 256, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 256, "max": 16384, "step": 8}], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "compression", "batch_size"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["stage_c", "stage_b"], "name": "StableCascade_EmptyLatentImage", "display_name": "StableCascade_EmptyLatentImage", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "latent/stable_cascade", "output_node": false}, "StableCascade_StageB_Conditioning": {"input": {"required": {"conditioning": ["CONDITIONING"], "stage_c": ["LATENT"]}}, "input_order": {"required": ["conditioning", "stage_c"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StableCascade_StageB_Conditioning", "display_name": "StableCascade_StageB_Conditioning", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "conditioning/stable_cascade", "output_node": false}, "StableCascade_StageC_VAEEncode": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}]}}, "input_order": {"required": ["image", "vae", "compression"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["stage_c", "stage_b"], "name": "StableCascade_StageC_VAEEncode", "display_name": "StableCascade_StageC_VAEEncode", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "latent/stable_cascade", "output_node": false}, "StableCascade_SuperResolutionControlnet": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"]}}, "input_order": {"required": ["image", "vae"]}, "output": ["IMAGE", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["controlnet_input", "stage_c", "stage_b"], "name": "StableCascade_SuperResolutionControlnet", "display_name": "StableCascade_SuperResolutionControlnet", "description": "", "python_module": "comfy_extras.nodes_stable_cascade", "category": "_for_testing/stable_cascade", "output_node": false, "experimental": true}, "DifferentialDiffusion": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DifferentialDiffusion", "display_name": "Differential Diffusion", "description": "", "python_module": "comfy_extras.nodes_differential_diffusion", "category": "_for_testing", "output_node": false}, "InstructPixToPixConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InstructPixToPixConditioning", "display_name": "InstructPixToPixConditioning", "description": "", "python_module": "comfy_extras.nodes_ip2p", "category": "conditioning/instructpix2pix", "output_node": false}, "ModelMergeSD1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0.", "input_blocks.1.", "input_blocks.2.", "input_blocks.3.", "input_blocks.4.", "input_blocks.5.", "input_blocks.6.", "input_blocks.7.", "input_blocks.8.", "input_blocks.9.", "input_blocks.10.", "input_blocks.11.", "middle_block.0.", "middle_block.1.", "middle_block.2.", "output_blocks.0.", "output_blocks.1.", "output_blocks.2.", "output_blocks.3.", "output_blocks.4.", "output_blocks.5.", "output_blocks.6.", "output_blocks.7.", "output_blocks.8.", "output_blocks.9.", "output_blocks.10.", "output_blocks.11.", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD1", "display_name": "ModelMergeSD1", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD2": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0.", "input_blocks.1.", "input_blocks.2.", "input_blocks.3.", "input_blocks.4.", "input_blocks.5.", "input_blocks.6.", "input_blocks.7.", "input_blocks.8.", "input_blocks.9.", "input_blocks.10.", "input_blocks.11.", "middle_block.0.", "middle_block.1.", "middle_block.2.", "output_blocks.0.", "output_blocks.1.", "output_blocks.2.", "output_blocks.3.", "output_blocks.4.", "output_blocks.5.", "output_blocks.6.", "output_blocks.7.", "output_blocks.8.", "output_blocks.9.", "output_blocks.10.", "output_blocks.11.", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD2", "display_name": "ModelMergeSD2", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSDXL": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "time_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "label_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "input_blocks.8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "middle_block.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.0": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.4": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.5": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.6": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.7": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "output_blocks.8": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "time_embed.", "label_emb.", "input_blocks.0", "input_blocks.1", "input_blocks.2", "input_blocks.3", "input_blocks.4", "input_blocks.5", "input_blocks.6", "input_blocks.7", "input_blocks.8", "middle_block.0", "middle_block.1", "middle_block.2", "output_blocks.0", "output_blocks.1", "output_blocks.2", "output_blocks.3", "output_blocks.4", "output_blocks.5", "output_blocks.6", "output_blocks.7", "output_blocks.8", "out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSDXL", "display_name": "ModelMergeSDXL", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD3_2B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "context_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embed.", "x_embedder.", "context_embedder.", "y_embedder.", "t_embedder.", "joint_blocks.0.", "joint_blocks.1.", "joint_blocks.2.", "joint_blocks.3.", "joint_blocks.4.", "joint_blocks.5.", "joint_blocks.6.", "joint_blocks.7.", "joint_blocks.8.", "joint_blocks.9.", "joint_blocks.10.", "joint_blocks.11.", "joint_blocks.12.", "joint_blocks.13.", "joint_blocks.14.", "joint_blocks.15.", "joint_blocks.16.", "joint_blocks.17.", "joint_blocks.18.", "joint_blocks.19.", "joint_blocks.20.", "joint_blocks.21.", "joint_blocks.22.", "joint_blocks.23.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD3_2B", "display_name": "ModelMergeSD3_2B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeAuraflow": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "init_x_linear.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "positional_encoding": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cond_seq_linear.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "register_tokens": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_layers.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_layers.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "modF.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_linear.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "init_x_linear.", "positional_encoding", "cond_seq_linear.", "register_tokens", "t_embedder.", "double_layers.0.", "double_layers.1.", "double_layers.2.", "double_layers.3.", "single_layers.0.", "single_layers.1.", "single_layers.2.", "single_layers.3.", "single_layers.4.", "single_layers.5.", "single_layers.6.", "single_layers.7.", "single_layers.8.", "single_layers.9.", "single_layers.10.", "single_layers.11.", "single_layers.12.", "single_layers.13.", "single_layers.14.", "single_layers.15.", "single_layers.16.", "single_layers.17.", "single_layers.18.", "single_layers.19.", "single_layers.20.", "single_layers.21.", "single_layers.22.", "single_layers.23.", "single_layers.24.", "single_layers.25.", "single_layers.26.", "single_layers.27.", "single_layers.28.", "single_layers.29.", "single_layers.30.", "single_layers.31.", "modF.", "final_linear."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeAuraflow", "display_name": "ModelMergeAuraflow", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeFlux1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "img_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "guidance_in": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "vector_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "txt_in.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "img_in.", "time_in.", "guidance_in", "vector_in.", "txt_in.", "double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeFlux1", "display_name": "ModelMergeFlux1", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeSD35_Large": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embed.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "context_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "joint_blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embed.", "x_embedder.", "context_embedder.", "y_embedder.", "t_embedder.", "joint_blocks.0.", "joint_blocks.1.", "joint_blocks.2.", "joint_blocks.3.", "joint_blocks.4.", "joint_blocks.5.", "joint_blocks.6.", "joint_blocks.7.", "joint_blocks.8.", "joint_blocks.9.", "joint_blocks.10.", "joint_blocks.11.", "joint_blocks.12.", "joint_blocks.13.", "joint_blocks.14.", "joint_blocks.15.", "joint_blocks.16.", "joint_blocks.17.", "joint_blocks.18.", "joint_blocks.19.", "joint_blocks.20.", "joint_blocks.21.", "joint_blocks.22.", "joint_blocks.23.", "joint_blocks.24.", "joint_blocks.25.", "joint_blocks.26.", "joint_blocks.27.", "joint_blocks.28.", "joint_blocks.29.", "joint_blocks.30.", "joint_blocks.31.", "joint_blocks.32.", "joint_blocks.33.", "joint_blocks.34.", "joint_blocks.35.", "joint_blocks.36.", "joint_blocks.37.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeSD35_Large", "display_name": "ModelMergeSD35_Large", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeMochiPreview": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_frequencies.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t5_y_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t5_yproj.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.38.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.39.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.40.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.41.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.42.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.43.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.44.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.45.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.46.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.47.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_frequencies.", "t_embedder.", "t5_y_embedder.", "t5_yproj.", "blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "blocks.28.", "blocks.29.", "blocks.30.", "blocks.31.", "blocks.32.", "blocks.33.", "blocks.34.", "blocks.35.", "blocks.36.", "blocks.37.", "blocks.38.", "blocks.39.", "blocks.40.", "blocks.41.", "blocks.42.", "blocks.43.", "blocks.44.", "blocks.45.", "blocks.46.", "blocks.47.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeMochiPreview", "display_name": "ModelMergeMochiPreview", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeLTXV": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "patchify_proj.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "adaln_single.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "caption_projection.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "transformer_blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "scale_shift_table": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "proj_out.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "patchify_proj.", "adaln_single.", "caption_projection.", "transformer_blocks.0.", "transformer_blocks.1.", "transformer_blocks.2.", "transformer_blocks.3.", "transformer_blocks.4.", "transformer_blocks.5.", "transformer_blocks.6.", "transformer_blocks.7.", "transformer_blocks.8.", "transformer_blocks.9.", "transformer_blocks.10.", "transformer_blocks.11.", "transformer_blocks.12.", "transformer_blocks.13.", "transformer_blocks.14.", "transformer_blocks.15.", "transformer_blocks.16.", "transformer_blocks.17.", "transformer_blocks.18.", "transformer_blocks.19.", "transformer_blocks.20.", "transformer_blocks.21.", "transformer_blocks.22.", "transformer_blocks.23.", "transformer_blocks.24.", "transformer_blocks.25.", "transformer_blocks.26.", "transformer_blocks.27.", "scale_shift_table", "proj_out."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeLTXV", "display_name": "ModelMergeLTXV", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeCosmos7B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "extra_pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "affline_norm.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embedder.", "extra_pos_embedder.", "x_embedder.", "t_embedder.", "affline_norm.", "blocks.block0.", "blocks.block1.", "blocks.block2.", "blocks.block3.", "blocks.block4.", "blocks.block5.", "blocks.block6.", "blocks.block7.", "blocks.block8.", "blocks.block9.", "blocks.block10.", "blocks.block11.", "blocks.block12.", "blocks.block13.", "blocks.block14.", "blocks.block15.", "blocks.block16.", "blocks.block17.", "blocks.block18.", "blocks.block19.", "blocks.block20.", "blocks.block21.", "blocks.block22.", "blocks.block23.", "blocks.block24.", "blocks.block25.", "blocks.block26.", "blocks.block27.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeCosmos7B", "display_name": "ModelMergeCosmos7B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeCosmos14B": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "extra_pos_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "x_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "t_embedder.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "affline_norm.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.block35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "final_layer.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "pos_embedder.", "extra_pos_embedder.", "x_embedder.", "t_embedder.", "affline_norm.", "blocks.block0.", "blocks.block1.", "blocks.block2.", "blocks.block3.", "blocks.block4.", "blocks.block5.", "blocks.block6.", "blocks.block7.", "blocks.block8.", "blocks.block9.", "blocks.block10.", "blocks.block11.", "blocks.block12.", "blocks.block13.", "blocks.block14.", "blocks.block15.", "blocks.block16.", "blocks.block17.", "blocks.block18.", "blocks.block19.", "blocks.block20.", "blocks.block21.", "blocks.block22.", "blocks.block23.", "blocks.block24.", "blocks.block25.", "blocks.block26.", "blocks.block27.", "blocks.block28.", "blocks.block29.", "blocks.block30.", "blocks.block31.", "blocks.block32.", "blocks.block33.", "blocks.block34.", "blocks.block35.", "final_layer."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeCosmos14B", "display_name": "ModelMergeCosmos14B", "description": "", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "ModelMergeWAN2_1": {"input": {"required": {"model1": ["MODEL"], "model2": ["MODEL"], "patch_embedding.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_embedding.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "time_projection.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "text_embedding.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "img_emb.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.0.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.1.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.2.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.3.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.4.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.5.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.6.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.7.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.8.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.9.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.10.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.11.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.12.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.13.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.14.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.15.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.16.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.17.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.18.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.19.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.20.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.21.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.22.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.23.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.24.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.25.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.26.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.27.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.28.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.29.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.30.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.31.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.32.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.33.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.34.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.35.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.36.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.37.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.38.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "blocks.39.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "head.": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model1", "model2", "patch_embedding.", "time_embedding.", "time_projection.", "text_embedding.", "img_emb.", "blocks.0.", "blocks.1.", "blocks.2.", "blocks.3.", "blocks.4.", "blocks.5.", "blocks.6.", "blocks.7.", "blocks.8.", "blocks.9.", "blocks.10.", "blocks.11.", "blocks.12.", "blocks.13.", "blocks.14.", "blocks.15.", "blocks.16.", "blocks.17.", "blocks.18.", "blocks.19.", "blocks.20.", "blocks.21.", "blocks.22.", "blocks.23.", "blocks.24.", "blocks.25.", "blocks.26.", "blocks.27.", "blocks.28.", "blocks.29.", "blocks.30.", "blocks.31.", "blocks.32.", "blocks.33.", "blocks.34.", "blocks.35.", "blocks.36.", "blocks.37.", "blocks.38.", "blocks.39.", "head."]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelMergeWAN2_1", "display_name": "ModelMergeWAN2_1", "description": "1.3B model has 30 blocks, 14B model has 40 blocks. Image to video model has the extra img_emb.", "python_module": "comfy_extras.nodes_model_merging_model_specific", "category": "advanced/model_merging/model_specific", "output_node": false}, "PerturbedAttentionGuidance": {"input": {"required": {"model": ["MODEL"], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["model", "scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PerturbedAttentionGuidance", "display_name": "PerturbedAttentionGuidance", "description": "", "python_module": "comfy_extras.nodes_pag", "category": "model_patches/unet", "output_node": false}, "AlignYourStepsScheduler": {"input": {"required": {"model_type": [["SD1", "SDXL", "SVD"]], "steps": ["INT", {"default": 10, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_type", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "AlignYourStepsScheduler", "display_name": "AlignYourStepsScheduler", "description": "", "python_module": "comfy_extras.nodes_align_your_steps", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "UNetSelfAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "q", "k", "v", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetSelfAttentionMultiply", "display_name": "UNetSelfAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "UNetCrossAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "q", "k", "v", "out"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetCrossAttentionMultiply", "display_name": "UNetCrossAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "CLIPAttentionMultiply": {"input": {"required": {"clip": ["CLIP"], "q": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "v": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "out": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "q", "k", "v", "out"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPAttentionMultiply", "display_name": "CLIPAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "UNetTemporalAttentionMultiply": {"input": {"required": {"model": ["MODEL"], "self_structural": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "self_temporal": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cross_structural": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cross_temporal": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "self_structural", "self_temporal", "cross_structural", "cross_temporal"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UNetTemporalAttentionMultiply", "display_name": "UNetTemporalAttentionMultiply", "description": "", "python_module": "comfy_extras.nodes_attention_multiply", "category": "_for_testing/attention_experiments", "output_node": false}, "SamplerLCMUpscale": {"input": {"required": {"scale_ratio": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 20.0, "step": 0.01}], "scale_steps": ["INT", {"default": -1, "min": -1, "max": 1000, "step": 1}], "upscale_method": [["bislerp", "nearest-exact", "bilinear", "area", "bicubic"]]}}, "input_order": {"required": ["scale_ratio", "scale_steps", "upscale_method"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerLCMUpscale", "display_name": "SamplerLCMUpscale", "description": "", "python_module": "comfy_extras.nodes_advanced_samplers", "category": "sampling/custom_sampling/samplers", "output_node": false}, "SamplerEulerCFGpp": {"input": {"required": {"version": [["regular", "alternative"]]}}, "input_order": {"required": ["version"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "SamplerEulerCFGpp", "display_name": "SamplerEulerCFG++", "description": "", "python_module": "comfy_extras.nodes_advanced_samplers", "category": "_for_testing", "output_node": false}, "WebcamCapture": {"input": {"required": {"image": ["WEBCAM", {}], "width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "capture_on_queue": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "width", "height", "capture_on_queue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "WebcamCapture", "display_name": "Webcam Capture", "description": "", "python_module": "comfy_extras.nodes_webcam", "category": "image", "output_node": false}, "EmptyLatentAudio": {"input": {"required": {"seconds": ["FLOAT", {"default": 47.6, "min": 1.0, "max": 1000.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["seconds", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentAudio", "display_name": "EmptyLatentAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "VAEEncodeAudio": {"input": {"required": {"audio": ["AUDIO"], "vae": ["VAE"]}}, "input_order": {"required": ["audio", "vae"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "VAEEncodeAudio", "display_name": "VAEEncodeAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "VAEDecodeAudio": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"]}}, "input_order": {"required": ["samples", "vae"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "VAEDecodeAudio", "display_name": "VAEDecodeAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "latent/audio", "output_node": false}, "SaveAudio": {"input": {"required": {"audio": ["AUDIO"], "filename_prefix": ["STRING", {"default": "audio/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveAudio", "display_name": "SaveAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "LoadAudio": {"input": {"required": {"audio": [[], {"audio_upload": true}]}}, "input_order": {"required": ["audio"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "LoadAudio", "display_name": "LoadAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": false}, "PreviewAudio": {"input": {"required": {"audio": ["AUDIO"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["audio"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAudio", "display_name": "PreviewAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "audio", "output_node": true}, "ConditioningStableAudio": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "seconds_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.1}], "seconds_total": ["FLOAT", {"default": 47.0, "min": 0.0, "max": 1000.0, "step": 0.1}]}}, "input_order": {"required": ["positive", "negative", "seconds_start", "seconds_total"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ConditioningStableAudio", "display_name": "ConditioningStableAudio", "description": "", "python_module": "comfy_extras.nodes_audio", "category": "conditioning", "output_node": false}, "TripleCLIPLoader": {"input": {"required": {"clip_name1": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name2": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name3": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "TripleCLIPLoader", "display_name": "TripleCLIPLoader", "description": "[Recipes]\n\nsd3: clip-l, clip-g, t5", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/loaders", "output_node": false}, "EmptySD3LatentImage": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 16}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptySD3LatentImage", "display_name": "EmptySD3LatentImage", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "latent/sd3", "output_node": false}, "CLIPTextEncodeSD3": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "empty_padding": [["none", "empty_prompt"]]}}, "input_order": {"required": ["clip", "clip_l", "clip_g", "t5xxl", "empty_padding"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSD3", "display_name": "CLIPTextEncodeSD3", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/conditioning", "output_node": false}, "ControlNetApplySD3": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "vae": ["VAE"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["positive", "negative", "control_net", "vae", "image", "strength", "start_percent", "end_percent"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetApplySD3", "display_name": "Apply Controlnet with VAE", "description": "", "python_module": "comfy_extras.nodes_sd3", "category": "conditioning/controlnet", "output_node": false, "deprecated": true}, "SkipLayerGuidanceSD3": {"input": {"required": {"model": ["MODEL"], "layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 10.0, "step": 0.1}], "start_percent": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["model", "layers", "scale", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceSD3", "display_name": "SkipLayerGuidanceSD3", "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model.", "python_module": "comfy_extras.nodes_sd3", "category": "advanced/guidance", "output_node": false, "experimental": true}, "GITSScheduler": {"input": {"required": {"coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05}], "steps": ["INT", {"default": 10, "min": 2, "max": 1000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["coeff", "steps", "denoise"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "GITSScheduler", "display_name": "GITSScheduler", "description": "", "python_module": "comfy_extras.nodes_gits", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "SetUnionControlNetType": {"input": {"required": {"control_net": ["CONTROL_NET"], "type": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]]}}, "input_order": {"required": ["control_net", "type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "SetUnionControlNetType", "display_name": "SetUnionControlNetType", "description": "", "python_module": "comfy_extras.nodes_controlnet", "category": "conditioning/controlnet", "output_node": false}, "ControlNetInpaintingAliMamaApply": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "vae": ["VAE"], "image": ["IMAGE"], "mask": ["MASK"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["positive", "negative", "control_net", "vae", "image", "mask", "strength", "start_percent", "end_percent"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ControlNetInpaintingAliMamaApply", "display_name": "ControlNetInpaintingAliMamaApply", "description": "", "python_module": "comfy_extras.nodes_controlnet", "category": "conditioning/controlnet", "output_node": false}, "CLIPTextEncodeHunyuanDiT": {"input": {"required": {"clip": ["CLIP"], "bert": ["STRING", {"multiline": true, "dynamicPrompts": true}], "mt5xl": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "bert", "mt5xl"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeHunyuanDiT", "display_name": "CLIPTextEncodeHunyuanDiT", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "advanced/conditioning", "output_node": false}, "TextEncodeHunyuanVideo_ImageToVideo": {"input": {"required": {"clip": ["CLIP"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "prompt": ["STRING", {"multiline": true, "dynamicPrompts": true}], "image_interleave": ["INT", {"default": 2, "min": 1, "max": 512, "tooltip": "How much the image influences things vs the text prompt. Higher number means more influence from the text prompt."}]}}, "input_order": {"required": ["clip", "clip_vision_output", "prompt", "image_interleave"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "TextEncodeHunyuanVideo_ImageToVideo", "display_name": "TextEncodeHunyuanVideo_ImageToVideo", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "advanced/conditioning", "output_node": false}, "EmptyHunyuanLatentVideo": {"input": {"required": {"width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 25, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyHunyuanLatentVideo", "display_name": "EmptyHunyuanLatentVideo", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "latent/video", "output_node": false}, "HunyuanImageToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 53, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "guidance_type": [["v1 (concat)", "v2 (replace)"]]}, "optional": {"start_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "vae", "width", "height", "length", "batch_size", "guidance_type"], "optional": ["start_image"]}, "output": ["CONDITIONING", "LATENT"], "output_is_list": [false, false], "output_name": ["positive", "latent"], "name": "HunyuanImageToVideo", "display_name": "HunyuanImageToVideo", "description": "", "python_module": "comfy_extras.nodes_hunyuan", "category": "conditioning/video_models", "output_node": false}, "CLIPTextEncodeFlux": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["clip", "clip_l", "t5xxl", "guidance"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeFlux", "display_name": "CLIPTextEncodeFlux", "description": "", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "FluxGuidance": {"input": {"required": {"conditioning": ["CONDITIONING"], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["conditioning", "guidance"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "FluxGuidance", "display_name": "FluxGuidance", "description": "", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "FluxDisableGuidance": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "FluxDisableGuidance", "display_name": "FluxDisableGuidance", "description": "This node completely disables the guidance embed on Flux and Flux like models", "python_module": "comfy_extras.nodes_flux", "category": "advanced/conditioning/flux", "output_node": false}, "LoraSave": {"input": {"required": {"filename_prefix": ["STRING", {"default": "loras/ComfyUI_extracted_lora"}], "rank": ["INT", {"default": 8, "min": 1, "max": 4096, "step": 1}], "lora_type": [["standard", "full_diff"]], "bias_diff": ["BOOLEAN", {"default": true}]}, "optional": {"model_diff": ["MODEL", {"tooltip": "The ModelSubtract output to be converted to a lora."}], "text_encoder_diff": ["CLIP", {"tooltip": "The CLIPSubtract output to be converted to a lora."}]}}, "input_order": {"required": ["filename_prefix", "rank", "lora_type", "bias_diff"], "optional": ["model_diff", "text_encoder_diff"]}, "output": [], "output_is_list": [], "output_name": [], "name": "LoraSave", "display_name": "Extract and Save Lora", "description": "", "python_module": "comfy_extras.nodes_lora_extract", "category": "_for_testing", "output_node": true}, "TorchCompileModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]]}}, "input_order": {"required": ["model", "backend"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModel", "display_name": "TorchCompileModel", "description": "", "python_module": "comfy_extras.nodes_torch_compile", "category": "_for_testing", "output_node": false, "experimental": true}, "EmptyMochiLatentVideo": {"input": {"required": {"width": ["INT", {"default": 848, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 25, "min": 7, "max": 16384, "step": 6}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyMochiLatentVideo", "display_name": "EmptyMochiLatentVideo", "description": "", "python_module": "comfy_extras.nodes_mochi", "category": "latent/video", "output_node": false}, "SkipLayerGuidanceDiT": {"input": {"required": {"model": ["MODEL"], "double_layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "single_layers": ["STRING", {"default": "7, 8, 9", "multiline": false}], "scale": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 10.0, "step": 0.1}], "start_percent": ["FLOAT", {"default": 0.01, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1.0, "step": 0.001}], "rescaling_scale": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "double_layers", "single_layers", "scale", "start_percent", "end_percent", "rescaling_scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceDiT", "display_name": "SkipLayerGuidanceDiT", "description": "Generic version of SkipLayerGuidance node that can be used on every DiT model.", "python_module": "comfy_extras.nodes_slg", "category": "advanced/guidance", "output_node": false, "experimental": true}, "Mahiro": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["patched_model"], "name": "Mahiro", "display_name": "Mahiro is so cute that she deserves a better guidance function!! (\u3002\u30fb\u03c9\u30fb\u3002)", "description": "Modify the guidance to scale more on the 'direction' of the positive prompt rather than the difference between the negative prompt.", "python_module": "comfy_extras.nodes_mahiro", "category": "_for_testing", "output_node": false}, "EmptyLTXVLatentVideo": {"input": {"required": {"width": ["INT", {"default": 768, "min": 64, "max": 16384, "step": 32}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 32}], "length": ["INT", {"default": 97, "min": 1, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLTXVLatentVideo", "display_name": "EmptyLTXVLatentVideo", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "latent/video/ltxv", "output_node": false}, "LTXVImgToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "image": ["IMAGE"], "width": ["INT", {"default": 768, "min": 64, "max": 16384, "step": 32}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 32}], "length": ["INT", {"default": 97, "min": 9, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["positive", "negative", "vae", "image", "width", "height", "length", "batch_size"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "LTXVImgToVideo", "display_name": "LTXVImgToVideo", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "ModelSamplingLTXV": {"input": {"required": {"model": ["MODEL"], "max_shift": ["FLOAT", {"default": 2.05, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.95, "min": 0.0, "max": 100.0, "step": 0.01}]}, "optional": {"latent": ["LATENT"]}}, "input_order": {"required": ["model", "max_shift", "base_shift"], "optional": ["latent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelSamplingLTXV", "display_name": "ModelSamplingLTXV", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "advanced/model", "output_node": false}, "LTXVConditioning": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "frame_rate": ["FLOAT", {"default": 25.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["positive", "negative", "frame_rate"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "LTXVConditioning", "display_name": "LTXVConditioning", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "LTXVScheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "max_shift": ["FLOAT", {"default": 2.05, "min": 0.0, "max": 100.0, "step": 0.01}], "base_shift": ["FLOAT", {"default": 0.95, "min": 0.0, "max": 100.0, "step": 0.01}], "stretch": ["BOOLEAN", {"default": true, "tooltip": "Stretch the sigmas to be in the range [terminal, 1]."}], "terminal": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 0.99, "step": 0.01, "tooltip": "The terminal value of the sigmas after stretching."}]}, "optional": {"latent": ["LATENT"]}}, "input_order": {"required": ["steps", "max_shift", "base_shift", "stretch", "terminal"], "optional": ["latent"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "LTXVScheduler", "display_name": "LTXVScheduler", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "sampling/custom_sampling/schedulers", "output_node": false}, "LTXVAddGuide": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "latent": ["LATENT"], "image": ["IMAGE", {"tooltip": "Image or video to condition the latent video on. Must be 8*n + 1 frames.If the video is not 8*n + 1 frames, it will be cropped to the nearest 8*n + 1 frames."}], "frame_idx": ["INT", {"default": 0, "min": -9999, "max": 9999, "tooltip": "Frame index to start the conditioning at. For single-frame images or videos with 1-8 frames, any frame_idx value is acceptable. For videos with 9+ frames, frame_idx must be divisible by 8, otherwise it will be rounded down to the nearest multiple of 8. Negative values are counted from the end of the video."}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["positive", "negative", "vae", "latent", "image", "frame_idx", "strength"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "LTXVAddGuide", "display_name": "LTXVAddGuide", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "LTXVPreprocess": {"input": {"required": {"image": ["IMAGE"], "img_compression": ["INT", {"default": 35, "min": 0, "max": 100, "tooltip": "Amount of compression to apply on image."}]}}, "input_order": {"required": ["image", "img_compression"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["output_image"], "name": "LTXVPreprocess", "display_name": "LTXVPreprocess", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "image", "output_node": false}, "LTXVCropGuides": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"]}}, "input_order": {"required": ["positive", "negative", "latent"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "LTXVCropGuides", "display_name": "LTXVCropGuides", "description": "", "python_module": "comfy_extras.nodes_lt", "category": "conditioning/video_models", "output_node": false}, "CreateHookLora": {"input": {"required": {"lora_name": [["0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["lora_name", "strength_model", "strength_clip"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookLora", "display_name": "Create Hook LoRA", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "CreateHookLoraModelOnly": {"input": {"required": {"lora_name": [["0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["lora_name", "strength_model"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookLoraModelOnly", "display_name": "Create Hook LoRA (MO)", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "CreateHookModelAsLora": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["ckpt_name", "strength_model", "strength_clip"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookModelAsLora", "display_name": "Create Hook Model as LoRA", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "CreateHookModelAsLoraModelOnly": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}]}, "optional": {"prev_hooks": ["HOOKS"]}}, "input_order": {"required": ["ckpt_name", "strength_model"], "optional": ["prev_hooks"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CreateHookModelAsLoraModelOnly", "display_name": "Create Hook Model as LoRA (MO)", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/create", "output_node": false, "experimental": true}, "SetHookKeyframes": {"input": {"required": {"hooks": ["HOOKS"]}, "optional": {"hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["hooks"], "optional": ["hook_kf"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "SetHookKeyframes", "display_name": "Set Hook Keyframes", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CreateHookKeyframe": {"input": {"required": {"strength_mult": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"prev_hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["strength_mult", "start_percent"], "optional": ["prev_hook_kf"]}, "output": ["HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "CreateHookKeyframe", "display_name": "Create Hook Keyframe", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CreateHookKeyframesInterpolated": {"input": {"required": {"strength_start": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "strength_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "keyframes_count": ["INT", {"default": 5, "min": 2, "max": 100, "step": 1}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["strength_start", "strength_end", "interpolation", "start_percent", "end_percent", "keyframes_count", "print_keyframes"], "optional": ["prev_hook_kf"]}, "output": ["HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "CreateHookKeyframesInterpolated", "display_name": "Create Hook Keyframes Interp.", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CreateHookKeyframesFromFloats": {"input": {"required": {"floats_strength": ["FLOATS", {"default": -1, "min": -1, "step": 0.001, "forceInput": true}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "print_keyframes": ["BOOLEAN", {"default": false}]}, "optional": {"prev_hook_kf": ["HOOK_KEYFRAMES"]}}, "input_order": {"required": ["floats_strength", "start_percent", "end_percent", "print_keyframes"], "optional": ["prev_hook_kf"]}, "output": ["HOOK_KEYFRAMES"], "output_is_list": [false], "output_name": ["HOOK_KF"], "name": "CreateHookKeyframesFromFloats", "display_name": "Create Hook Keyframes From Floats", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/scheduling", "output_node": false, "experimental": true}, "CombineHooks2": {"input": {"required": {}, "optional": {"hooks_A": ["HOOKS"], "hooks_B": ["HOOKS"]}}, "input_order": {"required": [], "optional": ["hooks_A", "hooks_B"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CombineHooks2", "display_name": "Combine Hooks [2]", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/combine", "output_node": false, "experimental": true}, "CombineHooks4": {"input": {"required": {}, "optional": {"hooks_A": ["HOOKS"], "hooks_B": ["HOOKS"], "hooks_C": ["HOOKS"], "hooks_D": ["HOOKS"]}}, "input_order": {"required": [], "optional": ["hooks_A", "hooks_B", "hooks_C", "hooks_D"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CombineHooks4", "display_name": "Combine Hooks [4]", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/combine", "output_node": false, "experimental": true}, "CombineHooks8": {"input": {"required": {}, "optional": {"hooks_A": ["HOOKS"], "hooks_B": ["HOOKS"], "hooks_C": ["HOOKS"], "hooks_D": ["HOOKS"], "hooks_E": ["HOOKS"], "hooks_F": ["HOOKS"], "hooks_G": ["HOOKS"], "hooks_H": ["HOOKS"]}}, "input_order": {"required": [], "optional": ["hooks_A", "hooks_B", "hooks_C", "hooks_D", "hooks_E", "hooks_F", "hooks_G", "hooks_H"]}, "output": ["HOOKS"], "output_is_list": [false], "output_name": ["HOOKS"], "name": "CombineHooks8", "display_name": "Combine Hooks [8]", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/combine", "output_node": false, "experimental": true}, "ConditioningSetProperties": {"input": {"required": {"cond_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["cond_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetProperties", "display_name": "Cond Set Props", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond single", "output_node": false, "experimental": true}, "ConditioningSetPropertiesAndCombine": {"input": {"required": {"cond": ["CONDITIONING"], "cond_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["cond", "cond_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetPropertiesAndCombine", "display_name": "Cond Set Props Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond single", "output_node": false, "experimental": true}, "PairConditioningSetProperties": {"input": {"required": {"positive_NEW": ["CONDITIONING"], "negative_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["positive_NEW", "negative_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningSetProperties", "display_name": "Cond Pair Set Props", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "PairConditioningSetPropertiesAndCombine": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "positive_NEW": ["CONDITIONING"], "negative_NEW": ["CONDITIONING"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}, "optional": {"mask": ["MASK"], "hooks": ["HOOKS"], "timesteps": ["TIMESTEPS_RANGE"]}}, "input_order": {"required": ["positive", "negative", "positive_NEW", "negative_NEW", "strength", "set_cond_area"], "optional": ["mask", "hooks", "timesteps"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningSetPropertiesAndCombine", "display_name": "Cond Pair Set Props Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "ConditioningSetDefaultCombine": {"input": {"required": {"cond": ["CONDITIONING"], "cond_DEFAULT": ["CONDITIONING"]}, "optional": {"hooks": ["HOOKS"]}}, "input_order": {"required": ["cond", "cond_DEFAULT"], "optional": ["hooks"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningSetDefaultCombine", "display_name": "Cond Set Default Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond single", "output_node": false, "experimental": true}, "PairConditioningSetDefaultCombine": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "positive_DEFAULT": ["CONDITIONING"], "negative_DEFAULT": ["CONDITIONING"]}, "optional": {"hooks": ["HOOKS"]}}, "input_order": {"required": ["positive", "negative", "positive_DEFAULT", "negative_DEFAULT"], "optional": ["hooks"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningSetDefaultCombine", "display_name": "Cond Pair Set Default Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "PairConditioningCombine": {"input": {"required": {"positive_A": ["CONDITIONING"], "negative_A": ["CONDITIONING"], "positive_B": ["CONDITIONING"], "negative_B": ["CONDITIONING"]}}, "input_order": {"required": ["positive_A", "negative_A", "positive_B", "negative_B"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "PairConditioningCombine", "display_name": "Cond Pair Combine", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/cond pair", "output_node": false, "experimental": true}, "SetClipHooks": {"input": {"required": {"clip": ["CLIP"], "apply_to_conds": ["BOOLEAN", {"default": true}], "schedule_clip": ["BOOLEAN", {"default": false}]}, "optional": {"hooks": ["HOOKS"]}}, "input_order": {"required": ["clip", "apply_to_conds", "schedule_clip"], "optional": ["hooks"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "SetClipHooks", "display_name": "Set CLIP Hooks", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks/clip", "output_node": false, "experimental": true}, "ConditioningTimestepsRange": {"input": {"required": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["start_percent", "end_percent"]}, "output": ["TIMESTEPS_RANGE", "TIMESTEPS_RANGE", "TIMESTEPS_RANGE"], "output_is_list": [false, false, false], "output_name": ["TIMESTEPS_RANGE", "BEFORE_RANGE", "AFTER_RANGE"], "name": "ConditioningTimestepsRange", "display_name": "Timesteps Range", "description": "", "python_module": "comfy_extras.nodes_hooks", "category": "advanced/hooks", "output_node": false, "experimental": true}, "Load3D": {"input": {"required": {"model_file": [["3d/087d8c87-526d-4315-bd45-0873f8567e88_output.glb", "3d/0d4047f9-54dd-47cb-bde7-887d2aa458f6_output.glb", "3d/7894d091-ba83-4275-9667-c05a1039c876_output.glb", "3d/80fa8e79-16b7-44fc-9364-cc37a712cdb0_output.glb", "3d/b2061807-1572-45ce-97ca-48af96287b87_output.glb", "3d/b8d86b51-abac-4582-9f2d-1132ba6c6f96_output.glb", "3d/b8e19a27-ad1c-407a-9fbc-614906004ba9_output.glb", "3d/b9027ea6-c7a1-466a-b666-8833b21fe964_output.glb", "3d/d7fc0dcc-9158-4a86-9af5-cd91f4553892_output.glb", "3d/e4253707-2004-4a28-a6c9-b4b027de9bb6_output.glb", "3d/model_1744244793.glb", "3d/model_1744245659.glb", "3d/model_1744252870.glb"], {"file_upload": true}], "image": ["LOAD_3D", {}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["model_file", "image", "width", "height"]}, "output": ["IMAGE", "MASK", "STRING", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "mesh_path", "normal", "lineart"], "name": "Load3D", "display_name": "Load 3D", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": false, "experimental": true}, "Load3DAnimation": {"input": {"required": {"model_file": [["3d/087d8c87-526d-4315-bd45-0873f8567e88_output.glb", "3d/0d4047f9-54dd-47cb-bde7-887d2aa458f6_output.glb", "3d/7894d091-ba83-4275-9667-c05a1039c876_output.glb", "3d/80fa8e79-16b7-44fc-9364-cc37a712cdb0_output.glb", "3d/b2061807-1572-45ce-97ca-48af96287b87_output.glb", "3d/b8d86b51-abac-4582-9f2d-1132ba6c6f96_output.glb", "3d/b8e19a27-ad1c-407a-9fbc-614906004ba9_output.glb", "3d/b9027ea6-c7a1-466a-b666-8833b21fe964_output.glb", "3d/d7fc0dcc-9158-4a86-9af5-cd91f4553892_output.glb", "3d/e4253707-2004-4a28-a6c9-b4b027de9bb6_output.glb", "3d/model_1744244793.glb", "3d/model_1744245659.glb", "3d/model_1744252870.glb"], {"file_upload": true}], "image": ["LOAD_3D_ANIMATION", {}], "width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["model_file", "image", "width", "height"]}, "output": ["IMAGE", "MASK", "STRING", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "mesh_path", "normal"], "name": "Load3DAnimation", "display_name": "Load 3D - Animation", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": false, "experimental": true}, "Preview3D": {"input": {"required": {"model_file": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["model_file"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Preview3D", "display_name": "Preview 3D", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": true, "experimental": true}, "Preview3DAnimation": {"input": {"required": {"model_file": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["model_file"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Preview3DAnimation", "display_name": "Preview 3D - Animation", "description": "", "python_module": "comfy_extras.nodes_load_3d", "category": "3d", "output_node": true, "experimental": true}, "EmptyCosmosLatentVideo": {"input": {"required": {"width": ["INT", {"default": 1280, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 704, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 121, "min": 1, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "length", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyCosmosLatentVideo", "display_name": "EmptyCosmosLatentVideo", "description": "", "python_module": "comfy_extras.nodes_cosmos", "category": "latent/video", "output_node": false}, "CosmosImageToVideoLatent": {"input": {"required": {"vae": ["VAE"], "width": ["INT", {"default": 1280, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 704, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 121, "min": 1, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"start_image": ["IMAGE"], "end_image": ["IMAGE"]}}, "input_order": {"required": ["vae", "width", "height", "length", "batch_size"], "optional": ["start_image", "end_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "CosmosImageToVideoLatent", "display_name": "CosmosImageToVideoLatent", "description": "", "python_module": "comfy_extras.nodes_cosmos", "category": "conditioning/inpaint", "output_node": false}, "SaveWEBM": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "codec": [["vp9", "av1"]], "fps": ["FLOAT", {"default": 24.0, "min": 0.01, "max": 1000.0, "step": 0.01}], "crf": ["FLOAT", {"default": 32.0, "min": 0, "max": 63.0, "step": 1, "tooltip": "Higher crf means lower quality with a smaller file size, lower crf means higher quality higher filesize."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "codec", "fps", "crf"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveWEBM", "display_name": "SaveWEBM", "description": "", "python_module": "comfy_extras.nodes_video", "category": "image/video", "output_node": true, "experimental": true}, "CLIPTextEncodeLumina2": {"input": {"required": {"system_prompt": [["superior", "alignment"], {"tooltip": "Lumina2 provide two types of system prompts:Superior: You are an assistant designed to generate superior images with the superior degree of image-text alignment based on textual prompts or user prompts. Alignment: You are an assistant designed to generate high-quality images with the highest degree of image-text alignment based on textual prompts."}], "user_prompt": ["STRING", {"multiline": true, "dynamicPrompts": true, "tooltip": "The text to be encoded."}], "clip": ["CLIP", {"tooltip": "The CLIP model used for encoding the text."}]}}, "input_order": {"required": ["system_prompt", "user_prompt", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeLumina2", "display_name": "CLIP Text Encode for Lumina2", "description": "Encodes a system prompt and a user prompt using a CLIP model into an embedding that can be used to guide the diffusion model towards generating specific images.", "python_module": "comfy_extras.nodes_lumina2", "category": "conditioning", "output_node": false, "output_tooltips": ["A conditioning containing the embedded text used to guide the diffusion model."]}, "RenormCFG": {"input": {"required": {"model": ["MODEL"], "cfg_trunc": ["FLOAT", {"default": 100, "min": 0.0, "max": 100.0, "step": 0.01}], "renorm_cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "cfg_trunc", "renorm_cfg"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "RenormCFG", "display_name": "RenormCFG", "description": "", "python_module": "comfy_extras.nodes_lumina2", "category": "advanced/model", "output_node": false}, "WanImageToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanImageToVideo", "display_name": "WanImageToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanFunControlToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"], "control_video": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image", "control_video"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanFunControlToVideo", "display_name": "WanFunControlToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "WanFunInpaintToVideo": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "width": ["INT", {"default": 832, "min": 16, "max": 16384, "step": 16}], "height": ["INT", {"default": 480, "min": 16, "max": 16384, "step": 16}], "length": ["INT", {"default": 81, "min": 1, "max": 16384, "step": 4}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}, "optional": {"clip_vision_output": ["CLIP_VISION_OUTPUT"], "start_image": ["IMAGE"], "end_image": ["IMAGE"]}}, "input_order": {"required": ["positive", "negative", "vae", "width", "height", "length", "batch_size"], "optional": ["clip_vision_output", "start_image", "end_image"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "WanFunInpaintToVideo", "display_name": "WanFunInpaintToVideo", "description": "", "python_module": "comfy_extras.nodes_wan", "category": "conditioning/video_models", "output_node": false}, "LotusConditioning": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "LotusConditioning", "display_name": "LotusConditioning", "description": "", "python_module": "comfy_extras.nodes_lotus", "category": "conditioning/lotus", "output_node": false}, "EmptyLatentHunyuan3Dv2": {"input": {"required": {"resolution": ["INT", {"default": 3072, "min": 1, "max": 8192}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}}, "input_order": {"required": ["resolution", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentHunyuan3Dv2", "display_name": "EmptyLatentHunyuan3Dv2", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "latent/3d", "output_node": false}, "Hunyuan3Dv2Conditioning": {"input": {"required": {"clip_vision_output": ["CLIP_VISION_OUTPUT"]}}, "input_order": {"required": ["clip_vision_output"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Hunyuan3Dv2Conditioning", "display_name": "Hunyuan3Dv2Conditioning", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "conditioning/video_models", "output_node": false}, "Hunyuan3Dv2ConditioningMultiView": {"input": {"required": {}, "optional": {"front": ["CLIP_VISION_OUTPUT"], "left": ["CLIP_VISION_OUTPUT"], "back": ["CLIP_VISION_OUTPUT"], "right": ["CLIP_VISION_OUTPUT"]}}, "input_order": {"required": [], "optional": ["front", "left", "back", "right"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Hunyuan3Dv2ConditioningMultiView", "display_name": "Hunyuan3Dv2ConditioningMultiView", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "conditioning/video_models", "output_node": false}, "VAEDecodeHunyuan3D": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "num_chunks": ["INT", {"default": 8000, "min": 1000, "max": 500000}], "octree_resolution": ["INT", {"default": 256, "min": 16, "max": 512}]}}, "input_order": {"required": ["samples", "vae", "num_chunks", "octree_resolution"]}, "output": ["VOXEL"], "output_is_list": [false], "output_name": ["VOXEL"], "name": "VAEDecodeHunyuan3D", "display_name": "VAEDecodeHunyuan3D", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "latent/3d", "output_node": false}, "VoxelToMeshBasic": {"input": {"required": {"voxel": ["VOXEL"], "threshold": ["FLOAT", {"default": 0.6, "min": -1.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["voxel", "threshold"]}, "output": ["MESH"], "output_is_list": [false], "output_name": ["MESH"], "name": "VoxelToMeshBasic", "display_name": "VoxelToMeshBasic", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "3d", "output_node": false}, "SaveGLB": {"input": {"required": {"mesh": ["MESH"], "filename_prefix": ["STRING", {"default": "mesh/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mesh", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveGLB", "display_name": "SaveGLB", "description": "", "python_module": "comfy_extras.nodes_hunyuan3d", "category": "3d", "output_node": true}, "PrimitiveString": {"input": {"required": {"value": ["STRING", {}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "PrimitiveString", "display_name": "String", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveInt": {"input": {"required": {"value": ["INT", {"control_after_generate": true}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "PrimitiveInt", "display_name": "Int", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveFloat": {"input": {"required": {"value": ["FLOAT", {}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "PrimitiveFloat", "display_name": "Float", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "PrimitiveBoolean": {"input": {"required": {"value": ["BOOLEAN", {}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "PrimitiveBoolean", "display_name": "Boolean", "description": "", "python_module": "comfy_extras.nodes_primitive", "category": "utils/primitive", "output_node": false}, "CFGZeroStar": {"input": {"required": {"model": ["MODEL"]}}, "input_order": {"required": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["patched_model"], "name": "CFGZeroStar", "display_name": "CFGZeroStar", "description": "", "python_module": "comfy_extras.nodes_cfg", "category": "advanced/guidance", "output_node": false}, "MinimalButtonNode": {"input": {"required": {}, "optional": {"trigger": ["INT", {"default": 0}], "any_input": ["*", {"default": null}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["trigger", "any_input"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["button_state"], "name": "MinimalButtonNode", "display_name": "Minimal Button Node", "description": "", "python_module": "custom_nodes.minimal_button_node", "category": "interaction", "output_node": false}, "EnhancedButtonNode": {"input": {"required": {}, "optional": {"trigger": ["INT", {"default": 0}], "any_input": ["*", {"default": null}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["trigger", "any_input"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["button_state", "animation_info"], "name": "EnhancedButtonNode", "display_name": "Enhanced Button Node", "description": "", "python_module": "custom_nodes.minimal_button_node", "category": "interaction", "output_node": true}, "MultiImageLoaderNode": {"input": {"required": {}, "optional": {"trigger": ["INT", {"default": 0}], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["trigger", "index"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK", "STRING", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "image_path", "image_count"], "name": "MultiImageLoaderNode", "display_name": "Multi Image Loader", "description": "", "python_module": "custom_nodes.comfy-image-loader", "category": "image", "output_node": true}, "FileBrowserNode": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"filter": ["STRING", {"default": "*.png;*.jpg;*.jpeg;*.webp"}]}}, "input_order": {"required": ["directory"], "optional": ["filter"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["file_path", "preview"], "name": "FileBrowserNode", "display_name": "File Browser", "description": "", "python_module": "custom_nodes.comfy-image-loader", "category": "image", "output_node": false}, "Animation Builder (mtb)": {"input": {"required": {"total_frames": ["INT", {"default": 100, "min": 0}], "scale_float": ["FLOAT", {"default": 1.0, "min": 0.0}], "loop_count": ["INT", {"default": 1, "min": 0}], "raw_iteration": ["INT", {"default": 0, "min": 0}], "raw_loop": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["total_frames", "scale_float", "loop_count", "raw_iteration", "raw_loop"]}, "output": ["INT", "FLOAT", "INT", "BOOLEAN"], "output_is_list": [false, false, false, false], "output_name": ["frame", "0-1 (scaled)", "count", "loop_ended"], "name": "Animation Builder (mtb)", "display_name": "Animation Builder (mtb)", "description": "\n# Animation Builder\n\nCheck the\n[wiki page](https://github.com/melMass/comfy_mtb/wiki/nodes-animation-builder)\nfor more info.\n\n\n- This basic example should help to understand the meaning of\nits inputs and outputs thanks to the [debug](nodes-debug) node.\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/2b5c7e4f-372d-4494-9e73-abb2daa7cb36)\n\n- In this other example Animation Builder is used in combination with\n[Batch From History](https://github.com/melMass/comfy_mtb/wiki/nodes-batch-from-history)\nto create a zoom-in animation on a static image\n\n![](https://github.com/melMass/comfy_mtb/assets/7041726/77d37da1-0a8e-4519-a493-dfdef7f755ea)\n\n## Inputs\n\n| name | description |\n| ---- | :----------:|\n| total_frames | The number of frame to queue (this is multiplied by the `loop_count`)|\n| scale_float | Convenience input to scale the normalized `current value` (a float between 0 and 1 lerp over the current queue length) |\n| loop_count | The number of loops to queue |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/animation", "output_node": false}, "Audio Sequence (mtb)": {"input": {"required": {"silence_duration": ["FLOAT", {"default": 0.0, "min": -999.0, "max": 999, "step": 0.01}]}}, "input_order": {"required": ["silence_duration"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["sequenced_audio"], "name": "Audio Sequence (mtb)", "display_name": "Audio Sequence (mtb)", "description": "Sequence audio inputs (dynamic inputs).\n\n    - adding silence_duration between each segment\n      can now also be negative to overlap the clips, safely bound\n      to the the input length.\n    - resample audios to the highest sample rate in the inputs.\n    - convert them all to stereo if one of the inputs is.\n    ", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Stack (mtb)": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["stacked_audio"], "name": "Audio Stack (mtb)", "display_name": "Audio Stack (mtb)", "description": "Stack/Overlay audio inputs (dynamic inputs).\n\n    - pad audios to the longest inputs.\n    - resample audios to the highest sample rate in the inputs.\n    - convert them all to stereo if one of the inputs is.\n    ", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Audio Cut (mtb)": {"input": {"required": {"audio": ["AUDIO"], "length": ["FLOAT", {"default": 1000.0, "min": 0.0, "max": 999999.0, "step": 1}], "offset": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 999999.0, "step": 1}]}}, "input_order": {"required": ["audio", "length", "offset"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["cut_audio"], "name": "Audio Cut (mtb)", "display_name": "Audio Cut (mtb)", "description": "Basic audio cutter, values are in ms.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/audio", "output_node": false}, "Batch2d Transform (mtb)": {"input": {"required": {"image": ["IMAGE"], "border_handling": [["edge", "constant", "reflect", "symmetric"], {"default": "edge"}], "constant_color": ["COLOR", {"default": "#000000"}]}, "optional": {"x": ["FLOATS"], "y": ["FLOATS"], "zoom": ["FLOATS"], "angle": ["FLOATS"], "shear": ["FLOATS"]}}, "input_order": {"required": ["image", "border_handling", "constant_color"], "optional": ["x", "y", "zoom", "angle", "shear"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch2d Transform (mtb)", "display_name": "Batch2d Transform (mtb)", "description": "# Batch Transform\n\nTransform a batch of images using a batch of keyframes\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float (mtb)": {"input": {"required": {"mode": [["Single", "Steps"], {"default": "Steps"}], "count": ["INT", {"default": 2}], "min": ["FLOAT", {"default": 0.0, "step": 0.001}], "max": ["FLOAT", {"default": 1.0, "step": 0.001}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["mode", "count", "min", "max", "easing"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float (mtb)", "display_name": "Batch Float (mtb)", "description": "# Batch Float\n\nGenerates a batch of float values with interpolation\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Assemble (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["reverse"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Assemble (mtb)", "display_name": "Batch Float Assemble (mtb)", "description": "# Batch Float Assemble\n\nAssembles mutiple batches of floats into a single stream (batch)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Fill (mtb)": {"input": {"required": {"floats": ["FLOATS"], "direction": [["head", "tail"], {"default": "tail"}], "value": ["FLOAT", {"default": 0.0}], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["floats", "direction", "value", "count"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Fill (mtb)", "display_name": "Batch Float Fill (mtb)", "description": "# Batch Float Fill\n\nFills a batch float with a single value until it reaches the target length\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Fit (mtb)": {"input": {"required": {"values": ["FLOATS", {"forceInput": true}], "clamp": ["BOOLEAN", {"default": false}], "auto_compute_source": ["BOOLEAN", {"default": false}], "source_min": ["FLOAT", {"default": 0.0, "step": 0.01}], "source_max": ["FLOAT", {"default": 1.0, "step": 0.01}], "target_min": ["FLOAT", {"default": 0.0, "step": 0.01}], "target_max": ["FLOAT", {"default": 1.0, "step": 0.01}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["values", "clamp", "auto_compute_source", "source_min", "source_max", "target_min", "target_max", "easing"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Fit (mtb)", "display_name": "Batch Float Fit (mtb)", "description": "Fit a list of floats using a source and target range", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Float Math (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}], "operation": [["add", "sub", "mul", "div", "pow", "abs"], {"default": "add"}]}}, "input_order": {"required": ["reverse", "operation"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["FLOATS"], "name": "Batch Float Math (mtb)", "display_name": "Batch Float Math (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Batch Float Normalize (mtb)": {"input": {"required": {"floats": ["FLOATS"]}}, "input_order": {"required": ["floats"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["normalized_floats"], "name": "Batch Float Normalize (mtb)", "display_name": "Batch Float Normalize (mtb)", "description": "Normalize the values in the list of floats", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Make (mtb)": {"input": {"required": {"image": ["IMAGE"], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["image", "count"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Make (mtb)", "display_name": "Batch Make (mtb)", "description": "# Batch Make \n\nSimply duplicates the input frame as a batch", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Merge (mtb)": {"input": {"required": {"fusion_mode": [["add", "multiply", "average"], {"default": "average"}], "fill": [["head", "tail"], {"default": "tail"}]}}, "input_order": {"required": ["fusion_mode", "fill"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Merge (mtb)", "display_name": "Batch Merge (mtb)", "description": "# Batch Merge\n\nMerges multiple image batches with different frame counts\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Sequence (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["reverse"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Sequence (mtb)", "display_name": "Batch Sequence (mtb)", "description": "Sequences multiple image batches one after another", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Sequence Plus (mtb)": {"input": {"required": {"transition": [["none", "crossfade", "slide_left", "slide_right", "slide_up", "slide_down", "wipe_left", "wipe_right", "wipe_up", "wipe_down", "band_wipe_h", "band_wipe_v"], {"default": "none"}], "overlap_frames": ["INT", {"default": 0, "min": 0, "max": 120, "step": 1}], "reverse": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["transition", "overlap_frames", "reverse"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Sequence Plus (mtb)", "display_name": "Batch Sequence Plus (mtb)", "description": "Sequences multiple image batches with transition effects.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Shake (mtb)": {"input": {"required": {"images": ["IMAGE"], "position_amount_x": ["FLOAT", {"default": 1.0}], "position_amount_y": ["FLOAT", {"default": 1.0}], "rotation_amount": ["FLOAT", {"default": 10.0}], "frequency": ["FLOAT", {"default": 1.0, "min": 0.005}], "frequency_divider": ["FLOAT", {"default": 1.0, "min": 0.005}], "octaves": ["INT", {"default": 1, "min": 1}], "seed": ["INT", {"default": 0}]}}, "input_order": {"required": ["images", "position_amount_x", "position_amount_y", "rotation_amount", "frequency", "frequency_divider", "octaves", "seed"]}, "output": ["IMAGE", "FLOATS", "FLOATS", "FLOATS"], "output_is_list": [false, false, false, false], "output_name": ["image", "pos_x", "pos_y", "rot"], "name": "Batch Shake (mtb)", "display_name": "Batch Shake (mtb)", "description": "# Batch Shake\n\nApplies a shaking effect to batches of images.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Shape (mtb)": {"input": {"required": {"count": ["INT", {"default": 1}], "shape": [["Box", "Circle", "Diamond", "Tube"], {"default": "Circle"}], "image_width": ["INT", {"default": 512}], "image_height": ["INT", {"default": 512}], "shape_size": ["INT", {"default": 100}], "color": ["COLOR", {"default": "#ffffff"}], "bg_color": ["COLOR", {"default": "#000000"}], "shade_color": ["COLOR", {"default": "#000000"}], "thickness": ["INT", {"default": 5}], "shadex": ["FLOAT", {"default": 0.0}], "shadey": ["FLOAT", {"default": 0.0}]}}, "input_order": {"required": ["count", "shape", "image_width", "image_height", "shape_size", "color", "bg_color", "shade_color", "thickness", "shadex", "shadey"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Batch Shape (mtb)", "display_name": "Batch Shape (mtb)", "description": "# Batch Shape\n\nGenerates a batch of 2D shapes with optional shading (experimental)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Batch Time Wrap (mtb)": {"input": {"required": {"target_count": ["INT", {"default": 25, "min": 2}], "frames": ["IMAGE"], "curve": ["FLOATS"]}}, "input_order": {"required": ["target_count", "frames", "curve"]}, "output": ["IMAGE", "FLOATS"], "output_is_list": [false, false], "output_name": ["image", "interpolated_floats"], "name": "Batch Time Wrap (mtb)", "display_name": "Batch Time Wrap (mtb)", "description": "Remap a batch using a time curve (FLOATS)", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Plot Batch Float (mtb)": {"input": {"required": {"width": ["INT", {"default": 768}], "height": ["INT", {"default": 768}], "point_size": ["INT", {"default": 4}], "seed": ["INT", {"default": 1}], "start_at_zero": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["width", "height", "point_size", "seed", "start_at_zero"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["plot"], "name": "Plot Batch Float (mtb)", "display_name": "Plot Batch Float (mtb)", "description": "# Plot `FLOATS`\nPlot FLOATS using matplotlib, each of them are drawn in a different\ncolor.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/batch", "output_node": false}, "Smart Step (mtb)": {"input": {"required": {"step": ["INT", {"default": 20, "min": 1, "max": 10000, "step": 1}], "start_percent": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "end_percent": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}]}}, "input_order": {"required": ["step", "start_percent", "end_percent"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["step", "start", "end"], "name": "Smart Step (mtb)", "display_name": "Smart Step (mtb)", "description": "# Smart Step\n\nUtils to control the steps start/stop of the KAdvancedSampler in percentage\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Styles Loader (mtb)": {"input": {"required": {"style_name": [["name", "\u274cLow Token", "\u2705Line Art / Manga"]]}}, "input_order": {"required": ["style_name"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "Styles Loader (mtb)", "display_name": "Styles Loader (mtb)", "description": "# Styles Loader\n\nThis node uses the same logic as the A111 styles csv.  \nThe first column is the name, the second the positive, the third the negative.  \nA sample [styles.csv](https://github.com/melMass/comfy_mtb/blob/main/styles.csv) gets installed on first run.\n\n> **Note**\n> Some styles can have empty columns, for instance I personally use distinct ones for positive and negatives, so be sure to wire the right output.\n\n## Extract Styles\nIt's sometime useful to be able to directly act on the content of a given style, for that an option was added to the context menu of that node to.. extract the styles to plain text inputs:  \n![extract](https://github.com/melMass/comfy_mtb/assets/7041726/c068d770-d5a8-4078-bc3c-20bb6533e42d)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Interpolate Clip Sequential (mtb)": {"input": {"required": {"base_text": ["STRING", {"multiline": true}], "text_to_replace": ["STRING", {"default": ""}], "clip": ["CLIP"], "interpolation_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["base_text", "text_to_replace", "clip", "interpolation_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Interpolate Clip Sequential (mtb)", "display_name": "Interpolate Clip Sequential (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Interpolate Condition (mtb)": {"input": {"required": {"blend": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["blend"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Interpolate Condition (mtb)", "display_name": "Interpolate Condition (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/conditioning", "output_node": false}, "Bbox From Mask (mtb)": {"input": {"required": {"mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["mask", "invert"], "optional": ["image"]}, "output": ["BBOX", "IMAGE"], "output_is_list": [false, false], "output_name": ["bbox", "image (optional)"], "name": "Bbox From Mask (mtb)", "display_name": "Bbox From Mask (mtb)", "description": "# BBox from Mask\n\nFrom a mask extract the bounding box\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Bbox (mtb)": {"input": {"required": {"x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}]}}, "input_order": {"required": ["x", "y", "width", "height"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "Bbox (mtb)", "display_name": "Bbox (mtb)", "description": "# BBox\n\nThe bounding box (BBOX) custom type used by other nodes\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Crop (mtb)": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"mask": ["MASK"], "x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bbox": ["BBOX"]}}, "input_order": {"required": ["image"], "optional": ["mask", "x", "y", "width", "height", "bbox"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "BBOX"], "name": "Crop (mtb)", "display_name": "Crop (mtb)", "description": "# Crop\n\nCrops an image and an optional mask to a given bounding box\n\nThe bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\nThe BBOX input takes precedence over the tuple input\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Uncrop (mtb)": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "bbox": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "crop_image", "bbox", "border_blending"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Uncrop (mtb)", "display_name": "Uncrop (mtb)", "description": "# Uncrop\nUncrops an image to a given bounding box\nThe bounding box can be given as a tuple of (x, y, width, height) or as a BBOX type\nThe BBOX input takes precedence over the tuple input\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Split Bbox (mtb)": {"input": {"required": {"bbox": ["BBOX"]}}, "input_order": {"required": ["bbox"]}, "output": ["INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["x", "y", "width", "height"], "name": "Split Bbox (mtb)", "display_name": "Split Bbox (mtb)", "description": "Split the components of a bbox", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Upscale Bbox By (mtb)": {"input": {"required": {"bbox": ["BBOX"], "scale": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["bbox", "scale"]}, "output": ["BBOX"], "output_is_list": [false], "output_name": ["BBOX"], "name": "Upscale Bbox By (mtb)", "display_name": "Upscale Bbox By (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/crop", "output_node": false}, "Curve (mtb)": {"input": {"required": {"curve": ["FLOAT_CURVE"]}}, "input_order": {"required": ["curve"]}, "output": ["FLOAT_CURVE"], "output_is_list": [false], "output_name": ["FLOAT_CURVE"], "name": "Curve (mtb)", "display_name": "Curve (mtb)", "description": "# Curve\n\n*WIP*\nA basic FLOAT_CURVE input node.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/curve", "output_node": false}, "Curve To Float (mtb)": {"input": {"required": {"curve": ["FLOAT_CURVE", {"forceInput": true}], "steps": ["INT", {"default": 10, "min": 2}]}}, "input_order": {"required": ["curve", "steps"]}, "output": ["FLOATS", "FLOAT"], "output_is_list": [false, false], "output_name": ["FLOATS", "FLOAT"], "name": "Curve To Float (mtb)", "display_name": "Curve To Float (mtb)", "description": "Convert a FLOAT_CURVE to a FLOAT or FLOATS", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/curve", "output_node": false}, "Debug (mtb)": {"input": {"required": {"output_to_console": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["output_to_console"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Debug (mtb)", "display_name": "Debug (mtb)", "description": "# Debug\n\nThis node is basically trying to provide informations about any input types supported by Comfy.\nIt uses the [dynamic inputs](web-dynamic-inputs) concept used across a few of the mtb nodes.\nIt specifically handles a few types and fallback to string representation for the others.\n\n![debug](https://github.com/melMass/comfy_mtb/assets/7041726/e20b5379-b5bf-4e2f-8d4c-c79f217d7f8d)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/debug", "output_node": true}, "Save Tensors (mtb)": {"input": {"required": {"filename_prefix": ["STRING", {"default": "ComfyPickle"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"], "latent": ["LATENT"]}}, "input_order": {"required": ["filename_prefix"], "optional": ["image", "mask", "latent"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Tensors (mtb)", "display_name": "Save Tensors (mtb)", "description": "# Save Tensors\nSave torch tensors (image, mask or latent) to disk.\nuseful to debug things outside comfy like in notebooks.\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/debug", "output_node": true}, "Deep Bump (mtb)": {"input": {"required": {"image": ["IMAGE"], "mode": [["Color to Normals", "Normals to Curvature", "Normals to Height"]], "color_to_normals_overlap": [["SMALL", "MEDIUM", "LARGE"]], "normals_to_curvature_blur_radius": [["SMALLEST", "SMALLER", "SMALL", "MEDIUM", "LARGE", "LARGER", "LARGEST"]], "normals_to_height_seamless": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "mode", "color_to_normals_overlap", "normals_to_curvature_blur_radius", "normals_to_height_seamless"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Deep Bump (mtb)", "display_name": "Deep Bump (mtb)", "description": "# Deep Bump\n\nThis node uses the [deep bump](https://github.com/HugoTini/DeepBump) model (GPLv3).\nThe 3 inference modes (color -> normals, normals -> curvature, normals -> depth) are all baked into a single node with a dropdown to select the operation.\nSome inputs are only used in some context, UX could be better.\nThe inputs are self explanatory, but you should probably experiment a bit with it since inference is quite fast. One thing to be sure is to tick `normals_to_height_seamless` when the input is seamless, see below for more infos.\n\nThis example is available in the [base examples list](https://github.com/melMass/comfy_mtb/wiki/Examples). In the example we also use the [Model Patch Seamless](nodes-model-patch-seamless) node in order to have non repeating, tileable textures\n| workflow | This is the output textures from the workflow applied to a tessellated mesh in blender | \n| - | - |\n|![](https://user-images.githubusercontent.com/7041726/272970715-7e4477f6-8e18-4839-9864-83d07d6690a1.png)| ![](https://user-images.githubusercontent.com/7041726/272970506-9db516b5-45d2-4389-b904-b3a94660f24c.png) |", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/textures", "output_node": false}, "Restore Face (mtb)": {"input": {"required": {"image": ["IMAGE"], "model": ["FACEENHANCE_MODEL"], "aligned": ["BOOLEAN", {"default": false}], "only_center_face": ["BOOLEAN", {"default": false}], "weight": ["FLOAT", {"default": 0.5}], "save_tmp_steps": ["BOOLEAN", {"default": true}]}, "optional": {"preserve_alpha": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "model", "aligned", "only_center_face", "weight", "save_tmp_steps"], "optional": ["preserve_alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Restore Face (mtb)", "display_name": "Restore Face (mtb)", "description": "# Restore Face\nUses GFPGan to restore faces\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Load Face Enhance Model (mtb)": {"input": {"required": {"model_name": [[], {"default": "None"}], "upscale": ["INT", {"default": 1}]}, "optional": {"bg_upsampler": ["UPSCALE_MODEL", {"default": null}]}}, "input_order": {"required": ["model_name", "upscale"], "optional": ["bg_upsampler"]}, "output": ["FACEENHANCE_MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "Load Face Enhance Model (mtb)", "display_name": "Load Face Enhance Model (mtb)", "description": "# Load Face Enhance Model\n\nLoads a GFPGan or RestoreFormer model for face enhancement.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/facetools", "output_node": false, "deprecated": true}, "Filter Z (mtb)": {"input": {"required": {"image": ["IMAGE"], "depth": ["IMAGE"], "to_black": ["BOOLEAN", {"default": true}], "threshold": ["FLOAT", {"default": 0.5, "step": 0.01, "min": 0.0, "max": 1.0}], "invert": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "depth", "to_black", "threshold", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Filter Z (mtb)", "display_name": "Filter Z (mtb)", "description": "# Filter Z\nFilters an image based on a depth map\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/filters", "output_node": false}, "Unsplash Image (mtb)": {"input": {"required": {"width": ["INT", {"default": 512, "max": 8096, "min": 0, "step": 1}], "height": ["INT", {"default": 512, "max": 8096, "min": 0, "step": 1}], "random_seed": ["INT", {"default": 0, "max": 100000.0, "min": 0, "step": 1}]}, "optional": {"keyword": ["STRING", {"default": "nature"}]}}, "input_order": {"required": ["width", "height", "random_seed"], "optional": ["keyword"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Unsplash Image (mtb)", "display_name": "Unsplash Image (mtb)", "description": "# Unsplash Image\n\nUnsplash Image given a keyword and a size\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Text To Image (mtb)": {"input": {"required": {"text": ["STRING", {"default": "Hello world!"}], "font": [["font"]], "wrap": ["BOOLEAN", {"default": true}], "trim": ["BOOLEAN", {"default": true}], "line_height": ["FLOAT", {"default": 1.0, "min": 0, "step": 0.1}], "font_size": ["INT", {"default": 32, "min": 1, "max": 2500, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 8096, "step": 1}], "color": ["COLOR", {"default": "black"}], "background": ["COLOR", {"default": "white"}], "h_align": [["left", "center", "right"], {"default": "left"}], "v_align": [["top", "center", "bottom"], {"default": "top"}], "h_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "v_offset": ["INT", {"default": 0, "min": 0, "max": 8096, "step": 1}], "h_coverage": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}]}}, "input_order": {"required": ["text", "font", "wrap", "trim", "line_height", "font_size", "width", "height", "color", "background", "h_align", "v_align", "h_offset", "v_offset", "h_coverage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Text To Image (mtb)", "display_name": "Text To Image (mtb)", "description": "# Text to Image\n\nThis node look for any font files in comfy_dir/fonts.\nby default it fallsback to a default font.\n\n![img](https://i.imgur.com/3GT92hy.gif)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "String Replace (mtb)": {"input": {"required": {"string": ["STRING", {"forceInput": true}], "old": ["STRING", {"default": ""}], "new": ["STRING", {"default": ""}]}}, "input_order": {"required": ["string", "old", "new"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String Replace (mtb)", "display_name": "String Replace (mtb)", "description": "# String Replace\nBasic string replacement.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/string", "output_node": false}, "Fit Number (mtb)": {"input": {"required": {"value": ["FLOAT", {"default": 0, "forceInput": true}], "clamp": ["BOOLEAN", {"default": false}], "source_min": ["FLOAT", {"default": 0.0, "step": 0.01, "min": -100000.0}], "source_max": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -100000.0}], "target_min": ["FLOAT", {"default": 0.0, "step": 0.01, "min": -100000.0}], "target_max": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -100000.0}], "easing": [["Linear", "Sine In", "Sine Out", "Sine In/Out", "Quart In", "Quart Out", "Quart In/Out", "Cubic In", "Cubic Out", "Cubic In/Out", "Circ In", "Circ Out", "Circ In/Out", "Back In", "Back Out", "Back In/Out", "Elastic In", "Elastic Out", "Elastic In/Out", "Bounce In", "Bounce Out", "Bounce In/Out"], {"default": "Linear"}]}}, "input_order": {"required": ["value", "clamp", "source_min", "source_max", "target_min", "target_max", "easing"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Fit Number (mtb)", "display_name": "Fit Number (mtb)", "description": "Fit the input float using a source and target range", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/math", "output_node": false}, "Get Batch From History (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "count": ["INT", {"default": 1, "min": 0}], "offset": ["INT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0}], "internal_count": ["INT", {"default": 0}]}, "optional": {"passthrough_image": ["IMAGE"]}}, "input_order": {"required": ["enable", "count", "offset", "internal_count"], "optional": ["passthrough_image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Get Batch From History (mtb)", "display_name": "Get Batch From History (mtb)", "description": "# Get Batch from History\n\nThis experimental node does something really simple, it reads the outputs from the history endpoint of Comfy.\nOutputs gets populated by... output nodes. There are various ones but  for instance in core comfy, `Save Image` and `Preview Image` are output nodes.\nI advice to start simple and have workflows that only generates one output per queue run. Of course once you master it you can use multiple outputs as output order is kept (as long as all outputs are ran).\n\nAnother basic use case of batch from history that you can see in the 4th [example](Examples), the fake deforum effect, basically this flow allows you to **feedback** an image using the history.\n\nA classic example when showing the feedback concept is the poor man's [grey scott diffusion model](https://groups.csail.mit.edu/mac/projects/amorphous/GrayScott/) i.e the \"creative\" derivative using only a gaussian blur and a sharp at each fed steps. \n\n \nHere is an example workflow of just that.\n\nthis is the output:  \n<p align=center>\n<img width=250 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/162fb62e-96d4-4843-8902-19d59c536469\"/>\n</p>\n\nand the workflow:\n<p align=center>  \n<img width=1000 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/11257918-86ff-4ddd-8d08-f2a59f7f45a2\"/>\n</p>\n\n<details><summary>expand here to copy paste this workflow</summary>\n\n```json\n{\"last_node_id\":17,\"last_link_id\":27,\"nodes\":[{\"id\":9,\"type\":\"Get Batch From History (mtb)\",\"pos\":[181,706],\"size\":[315,130],\"flags\":{},\"order\":5,\"mode\":0,\"inputs\":[{\"name\":\"passthrough_image\",\"type\":\"IMAGE\",\"link\":null,\"slot_index\":0,\"shape\":7},{\"name\":\"enable\",\"type\":\"BOOLEAN\",\"link\":6,\"widget\":{\"name\":\"enable\"}}],\"outputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"links\":[23],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Get Batch From History (mtb)\"},\"widgets_values\":[true,44,0,969]},{\"id\":13,\"type\":\"Sharpen (mtb)\",\"pos\":[996,276],\"size\":[315,130],\"flags\":{},\"order\":9,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":14}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[22],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Sharpen (mtb)\"},\"widgets_values\":[31,2,1,1]},{\"id\":15,\"type\":\"VHS_VideoCombine\",\"pos\":[528,708],\"size\":[276,580],\"flags\":{},\"order\":7,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":23},{\"name\":\"audio\",\"type\":\"AUDIO\",\"link\":null,\"shape\":7},{\"name\":\"meta_batch\",\"type\":\"VHS_BatchManager\",\"link\":null,\"shape\":7},{\"name\":\"vae\",\"type\":\"VAE\",\"link\":null,\"shape\":7}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":20,\"loop_count\":0,\"filename_prefix\":\"MTB_BatchFromHistory\",\"format\":\"video/h264-mp4\",\"pix_fmt\":\"yuv420p\",\"crf\":19,\"save_metadata\":true,\"pingpong\":false,\"save_output\":true,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_01089.mp4\",\"subfolder\":\"\",\"type\":\"output\",\"format\":\"video/h264-mp4\",\"frame_rate\":20},\"muted\":false}}},{\"id\":16,\"type\":\"LoadImage\",\"pos\":[-168,-216],\"size\":[315,314],\"flags\":{},\"order\":0,\"mode\":4,\"inputs\":[],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[25],\"slot_index\":0},{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":null}],\"properties\":{\"Node name for S&R\":\"LoadImage\"},\"widgets_values\":[\"example.png\",\"image\"]},{\"id\":17,\"type\":\"ImageScale\",\"pos\":[192,-36],\"size\":[315,130],\"flags\":{},\"order\":3,\"mode\":4,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":25}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[],\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageScale\"},\"widgets_values\":[\"nearest-exact\",512,512,\"disabled\"]},{\"id\":10,\"type\":\"Blur (mtb)\",\"pos\":[672,276],\"size\":[315,122],\"flags\":{},\"order\":8,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":24},{\"name\":\"sigmasX\",\"type\":\"FLOATS\",\"link\":null,\"shape\":7},{\"name\":\"sigmasY\",\"type\":\"FLOATS\",\"link\":null,\"shape\":7}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[14],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Blur (mtb)\"},\"widgets_values\":[6,6]},{\"id\":3,\"type\":\"Get Batch From History (mtb)\",\"pos\":[336,276],\"size\":[315,130],\"flags\":{},\"order\":6,\"mode\":0,\"inputs\":[{\"name\":\"passthrough_image\",\"type\":\"IMAGE\",\"link\":27,\"slot_index\":0,\"shape\":7},{\"name\":\"enable\",\"type\":\"BOOLEAN\",\"link\":16,\"widget\":{\"name\":\"enable\"}}],\"outputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"links\":[24],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Get Batch From History (mtb)\"},\"widgets_values\":[false,1,0,969]},{\"id\":6,\"type\":\"Int To Bool (mtb)\",\"pos\":[324,444],\"size\":[210,42.27488708496094],\"flags\":{},\"order\":4,\"mode\":0,\"inputs\":[{\"name\":\"int\",\"type\":\"INT\",\"link\":4,\"widget\":{\"name\":\"int\"}}],\"outputs\":[{\"name\":\"BOOLEAN\",\"type\":\"BOOLEAN\",\"links\":[16],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Int To Bool (mtb)\"},\"widgets_values\":[0]},{\"id\":2,\"type\":\"PreviewImage\",\"pos\":[972,456],\"size\":[360,348],\"flags\":{},\"order\":10,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":22}],\"outputs\":[],\"properties\":{\"Node name for S&R\":\"PreviewImage\"},\"widgets_values\":[]},{\"id\":1,\"type\":\"Batch Shape (mtb)\",\"pos\":[-120,192],\"size\":[210,334],\"flags\":{},\"order\":1,\"mode\":0,\"inputs\":[],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[27],\"slot_index\":0,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Batch Shape (mtb)\"},\"widgets_values\":[1,\"Diamond\",512,512,229,\"#ffffff\",\"#000000\",\"#000000\",0,0,0]},{\"id\":4,\"type\":\"Animation Builder (mtb)\",\"pos\":[-110,596],\"size\":[210,318],\"flags\":{},\"order\":2,\"mode\":0,\"inputs\":[],\"outputs\":[{\"name\":\"frame\",\"type\":\"INT\",\"links\":[4],\"slot_index\":0,\"shape\":3},{\"name\":\"0-1 (scaled)\",\"type\":\"FLOAT\",\"links\":null,\"shape\":3},{\"name\":\"count\",\"type\":\"INT\",\"links\":null,\"shape\":3},{\"name\":\"loop_ended\",\"type\":\"BOOLEAN\",\"links\":[6],\"slot_index\":3,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"Animation Builder (mtb)\"},\"widgets_values\":[45,1,1,0,0,null,null,\"reset\",\"queue\"]}],\"links\":[[4,4,0,6,0,\"INT\"],[6,4,3,9,1,\"BOOLEAN\"],[14,10,0,13,0,\"IMAGE\"],[16,6,0,3,1,\"BOOLEAN\"],[22,13,0,2,0,\"IMAGE\"],[23,9,0,15,0,\"IMAGE\"],[24,3,0,10,0,\"IMAGE\"],[25,16,0,17,0,\"IMAGE\"],[27,1,0,3,0,\"IMAGE\"]],\"groups\":[],\"config\":{},\"extra\":{\"ds\":{\"scale\":0.6727499949325705,\"offset\":[682.4627866508608,403.88645096355583]},\"ue_links\":[]},\"version\":0.4}\n```\n\n</details>\n\nThe blue bordered node is the one doing the feedback, on first frame (frame == 0 converted to bool is false) the passthrough image will be used, this example uses the [Batch Shape](nodes-batch-shape) node, only on the first queue item, then the previous queue item is fed to each subsequent queue item.\nThe orange bordered one is fetching all the frames we queued once done to assemble the GIF. All this happens in \"one click\" thanks to [Animation Builder](nodes-animation-builder)\n\n\n## Inputs\n|name|description|\n|-|-|\n|passthrough_image | This is the image that gets sent out when `enable` is set to false, useful for the init first image in the fake deforum [example](Examples) for instance ([04-animation_builder-deforum.json](https://github.com/melMass/comfy_mtb/blob/main/examples/04-animation_builder-deforum.json)) |\n|enable | This makes the node not fetch the history. For instance when you just initiated the server the history is empty, see [Animation Builder](nodes-animation-builder) for practical examples |\n|count | the number of frames to fetch from the history |\n| **Reset Button** | resets the internal counters, although the node is though around using its queue button it should still work fine when using the regular queue button of comfy |\n| **Queue Button** | Convenience button to run the queues (`total_frames` * `loop_count`) |", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/animation", "output_node": false}, "Any To String (mtb)": {"input": {"required": {"input": ["*"]}}, "input_order": {"required": ["input"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Any To String (mtb)", "display_name": "Any To String (mtb)", "description": "# Any to String\n\nTries to take any input and convert it to a string.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/converters", "output_node": false}, "Concat Images (mtb)": {"input": {"required": {"reverse": ["BOOLEAN", {"default": false}]}, "optional": {"on_mismatch": [["Error", "Smallest", "Largest"], {"default": "Smallest"}]}}, "input_order": {"required": ["reverse"], "optional": ["on_mismatch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Concat Images (mtb)", "display_name": "Concat Images (mtb)", "description": "# Concat Images\n\nAdd images to batch.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Math Expression (mtb)": {"input": {"required": {"expression": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["expression"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["result (float)", "result (int)"], "name": "Math Expression (mtb)", "display_name": "Math Expression (mtb)", "description": "evaluate a simple math expression string, only supports literal_eval", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/math", "output_node": false}, "To Device (mtb)": {"input": {"required": {"ignore_errors": ["BOOLEAN", {"default": false}], "device": [["cpu", "cuda", "cuda0"], {"default": "cpu"}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["ignore_errors", "device"], "optional": ["image", "mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "To Device (mtb)", "display_name": "To Device (mtb)", "description": "# To Device\nSend a image or mask tensor to the given device.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Apply Text Template (mtb)": {"input": {"required": {"template": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["template"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "Apply Text Template (mtb)", "display_name": "Apply Text Template (mtb)", "description": "# Apply Text Template\n\nVery basic string interpolation using [dynamic inputs](web-dynamic-inputs).\n\nThe var names are `var_1`, `var_2` etc... They are interpolated like this: `{var_1}`, see the following example for a more concrete idea:\n\n![template_string](https://github.com/melMass/comfy_mtb/assets/7041726/abf8d63e-87f6-426a-adcc-514b85daeb5c)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Match Dimensions (mtb)": {"input": {"required": {"source": ["IMAGE"], "reference": ["IMAGE"], "match": [["height", "width"], {"default": "height"}]}}, "input_order": {"required": ["source", "reference", "match"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["image", "new_width", "new_height"], "name": "Match Dimensions (mtb)", "display_name": "Match Dimensions (mtb)", "description": "# Match Dimensions\n\nMatch images dimensions along the given axis, preserving aspect ratio.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Auto Pan Equilateral (mtb)": {"input": {"required": {"equilateral_image": ["IMAGE"], "fovX": ["FLOAT", {"default": 45.0}], "fovY": ["FLOAT", {"default": 45.0}], "elevation": ["FLOAT", {"default": 0.5}], "frame_count": ["INT", {"default": 100}], "width": ["INT", {"default": 768}], "height": ["INT", {"default": 512}]}, "optional": {"floats_fovX": ["FLOATS"], "floats_fovY": ["FLOATS"], "floats_elevation": ["FLOATS"]}}, "input_order": {"required": ["equilateral_image", "fovX", "fovY", "elevation", "frame_count", "width", "height"], "optional": ["floats_fovX", "floats_fovY", "floats_elevation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Auto Pan Equilateral (mtb)", "display_name": "Auto Pan Equilateral (mtb)", "description": "# Autopan Equilateral\n\nGenerate a 360 panning video from an equilateral image.\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Floats To Float (mtb)": {"input": {"required": {"floats": ["FLOATS"]}}, "input_order": {"required": ["floats"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "Floats To Float (mtb)", "display_name": "Floats To Float (mtb)", "description": "# `FLOATS` to `FLOAT`\n\nAD, IPA, Fitz etc have commonly choose to mistype float lists as FLOAT.\n\nThis is just a hack to be compatible with these\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Float To Floats (mtb)": {"input": {"required": {"float": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["float"]}, "output": ["FLOATS"], "output_is_list": [false], "output_name": ["floats"], "name": "Float To Floats (mtb)", "display_name": "Float To Floats (mtb)", "description": "Conversion utility for compatibility with other extensions (AD, IPA, Fitz are using FLOAT to represent list of floats.)", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Floats To Ints (mtb)": {"input": {"required": {"floats": ["FLOATS", {"forceInput": true}]}}, "input_order": {"required": ["floats"]}, "output": ["INTS", "INT"], "output_is_list": [false, false], "output_name": ["INTS", "INT"], "name": "Floats To Ints (mtb)", "display_name": "Floats To Ints (mtb)", "description": "Conversion utility for compatibility with frame interpolation.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "Color Correct (mtb)": {"input": {"required": {"image": ["IMAGE"], "clamp": [[true, false], {"default": true}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "exposure": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "offset": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.0, "min": -0.5, "max": 0.5, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "clamp", "gamma", "contrast", "exposure", "offset", "hue", "saturation", "value"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Correct (mtb)", "display_name": "Color Correct (mtb)", "description": "# Color Correct\n\nVarious color correction methods\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Color Correct GPU (mtb)": {"input": {"required": {"image": ["IMAGE"], "force_gpu": ["BOOLEAN", {"default": true}], "clamp": [[true, false], {"default": true}], "gamma": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "exposure": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "offset": ["FLOAT", {"default": 0.0, "min": -5.0, "max": 5.0, "step": 0.01}], "hue": ["FLOAT", {"default": 0.0, "min": -0.5, "max": 0.5, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "force_gpu", "clamp", "gamma", "contrast", "exposure", "offset", "hue", "saturation", "value"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Color Correct GPU (mtb)", "display_name": "Color Correct GPU (mtb)", "description": "Various color correction methods using only Torch.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Image Compare (mtb)": {"input": {"required": {"imageA": ["IMAGE"], "imageB": ["IMAGE"], "mode": [["checkerboard", "diff", "blend"], {"default": "checkerboard"}]}}, "input_order": {"required": ["imageA", "imageB", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Compare (mtb)", "display_name": "Image Compare (mtb)", "description": "# Image Compare\nCompare two images and return a difference image\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Image Tile Offset (mtb)": {"input": {"required": {"image": ["IMAGE"], "tilesX": ["INT", {"default": 2, "min": 1}], "tilesY": ["INT", {"default": 2, "min": 1}]}}, "input_order": {"required": ["image", "tilesX", "tilesY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Tile Offset (mtb)", "display_name": "Image Tile Offset (mtb)", "description": "# Image Tile Offset\n\nMimics an old photoshop technique to check for seamless textures\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Blur (mtb)": {"input": {"required": {"image": ["IMAGE"], "sigmaX": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 200.0, "step": 0.01}], "sigmaY": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 200.0, "step": 0.01}]}, "optional": {"sigmasX": ["FLOATS"], "sigmasY": ["FLOATS"]}}, "input_order": {"required": ["image", "sigmaX", "sigmaY"], "optional": ["sigmasX", "sigmasY"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Blur (mtb)", "display_name": "Blur (mtb)", "description": "# Blur\n\nApplies a Gaussian blur to the given image / batch.  \nIt allows a few more things than the core blur node, namely:\n- **Higher values** (core is limited to 30)  \n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/c0cd8426-7b44-4067-bb98-9a178e715169\"/>\n\n- **Individual X & Y blur**  \n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/f5511f9a-d659-4935-abb5-3242894a0a82\"/>\n\n- [`FLOATS`](nodes-batch#batch-floats) support for individual batch frame blur\n  <img width=650 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/8aab18d2-b140-4e04-a4bd-fd294f2e187b\"/>\n\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Mask To Image (mtb)": {"input": {"required": {"mask": ["MASK"], "color": ["COLOR"], "background": ["COLOR", {"default": "#000000"}]}, "optional": {"invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "color", "background"], "optional": ["invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Mask To Image (mtb)", "display_name": "Mask To Image (mtb)", "description": "# Mask to Image\n\nConverts a mask (alpha) to an RGB image with a color and background\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Colored Image (mtb)": {"input": {"required": {"color": ["COLOR"], "width": ["INT", {"default": 512, "min": 16, "max": 8160}], "height": ["INT", {"default": 512, "min": 16, "max": 8160}]}, "optional": {"foreground_image": ["IMAGE"], "foreground_mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}], "mask_opacity": ["FLOAT", {"default": 1.0, "step": 0.1, "min": 0}]}}, "input_order": {"required": ["color", "width", "height"], "optional": ["foreground_image", "foreground_mask", "invert", "mask_opacity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Colored Image (mtb)", "display_name": "Colored Image (mtb)", "description": "# Colored Image\n\nConstant color images of a given size can also be used to mask images.\n\nThis example uses [VHS Nodes](https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite) for animation preview\n![batch_shapes](https://github.com/melMass/comfy_mtb/assets/7041726/a1aa62c5-f8cb-4f90-a14a-f7260a982e5a)\n\n**Workflow**: \n```json\n{\"last_node_id\":41,\"last_link_id\":65,\"nodes\":[{\"id\":13,\"type\":\"Batch Float (mtb)\",\"pos\":[-1213,622],\"size\":[315,154],\"flags\":{},\"order\":0,\"mode\":0,\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[30],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float (mtb)\"},\"widgets_values\":[\"Steps\",12,0.001,5,\"Quart In/Out\"]},{\"id\":31,\"type\":\"VHS_VideoCombine\",\"pos\":[1080,280],\"size\":[315,314],\"flags\":{},\"order\":16,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":50},{\"name\":\"audio\",\"type\":\"VHS_AUDIO\",\"link\":null},{\"name\":\"batch_manager\",\"type\":\"VHS_BatchManager\",\"link\":null}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":12,\"loop_count\":0,\"filename_prefix\":\"AnimateDiff\",\"format\":\"video/nvenc_hevc-mp4\",\"pix_fmt\":\"yuv420p\",\"bitrate\":10,\"megabit\":true,\"save_metadata\":true,\"pingpong\":false,\"save_output\":false,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_00004.mp4\",\"subfolder\":\"\",\"type\":\"temp\",\"format\":\"video/nvenc_hevc-mp4\"}}}},{\"id\":22,\"type\":\"Batch Float Fill (mtb)\",\"pos\":[-884,621],\"size\":[315,106],\"flags\":{},\"order\":4,\"mode\":0,\"inputs\":[{\"name\":\"floats\",\"type\":\"FLOATS\",\"link\":30}],\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[31],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float Fill (mtb)\"},\"widgets_values\":[\"tail\",0,20]},{\"id\":30,\"type\":\"ImageBlend\",\"pos\":[680,280],\"size\":[315,102],\"flags\":{},\"order\":14,\"mode\":0,\"inputs\":[{\"name\":\"image1\",\"type\":\"IMAGE\",\"link\":65},{\"name\":\"image2\",\"type\":\"IMAGE\",\"link\":48}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[50],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageBlend\"},\"widgets_values\":[1,\"screen\"]},{\"id\":15,\"type\":\"Batch Transform (mtb)\",\"pos\":[484,561],\"size\":[210,194],\"flags\":{},\"order\":10,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":29,\"slot_index\":0},{\"name\":\"x\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"y\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"zoom\",\"type\":\"FLOATS\",\"link\":33},{\"name\":\"angle\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"shear\",\"type\":\"FLOATS\",\"link\":null}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[48],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Transform (mtb)\"},\"widgets_values\":[\"edge\",\"#fa96c0\"]},{\"id\":23,\"type\":\"Batch Float Fill (mtb)\",\"pos\":[110,623],\"size\":[315,106],\"flags\":{},\"order\":5,\"mode\":0,\"inputs\":[{\"name\":\"floats\",\"type\":\"FLOATS\",\"link\":32}],\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[33],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float Fill (mtb)\"},\"widgets_values\":[\"head\",0,20]},{\"id\":21,\"type\":\"Batch Float (mtb)\",\"pos\":[-246,623],\"size\":[315,154],\"flags\":{},\"order\":1,\"mode\":0,\"outputs\":[{\"name\":\"FLOATS\",\"type\":\"FLOATS\",\"links\":[32],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Float (mtb)\"},\"widgets_values\":[\"Steps\",20,0.001,4.5,\"Quart In/Out\"]},{\"id\":41,\"type\":\"Reroute\",\"pos\":[-91,283],\"size\":[75,26],\"flags\":{},\"order\":12,\"mode\":0,\"inputs\":[{\"name\":\"\",\"type\":\"*\",\"link\":64}],\"outputs\":[{\"name\":\"\",\"type\":\"IMAGE\",\"links\":[65]}],\"properties\":{\"showOutputText\":false,\"horizontal\":false}},{\"id\":14,\"type\":\"Batch Transform (mtb)\",\"pos\":[-517,562],\"size\":[210,194],\"flags\":{},\"order\":9,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":27,\"slot_index\":0},{\"name\":\"x\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"y\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"zoom\",\"type\":\"FLOATS\",\"link\":31},{\"name\":\"angle\",\"type\":\"FLOATS\",\"link\":null},{\"name\":\"shear\",\"type\":\"FLOATS\",\"link\":null}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[37,62,64],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Transform (mtb)\"},\"widgets_values\":[\"edge\",\"#fa96c0\"]},{\"id\":35,\"type\":\"LoadImage\",\"pos\":[-560,920],\"size\":[315,314],\"flags\":{},\"order\":2,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[56],\"shape\":3,\"slot_index\":0},{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"LoadImage\"},\"widgets_values\":[\"189.png\",\"image\"]},{\"id\":40,\"type\":\"Blur (mtb)\",\"pos\":[-217,1000],\"size\":[315,82],\"flags\":{},\"order\":11,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":62,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[63],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Blur (mtb)\"},\"widgets_values\":[50,50]},{\"id\":33,\"type\":\"ImageToMask\",\"pos\":[120,997],\"size\":[210,58],\"flags\":{},\"order\":13,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":63,\"slot_index\":0}],\"outputs\":[{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":[57],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageToMask\"},\"widgets_values\":[\"red\"]},{\"id\":37,\"type\":\"Colored Image (mtb)\",\"pos\":[350,920],\"size\":[210,138],\"flags\":{},\"order\":15,\"mode\":0,\"inputs\":[{\"name\":\"foreground_image\",\"type\":\"IMAGE\",\"link\":56,\"slot_index\":0},{\"name\":\"foreground_mask\",\"type\":\"MASK\",\"link\":57,\"slot_index\":1}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[55],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Colored Image (mtb)\"},\"widgets_values\":[\"#1603fc\",512,512]},{\"id\":36,\"type\":\"VHS_VideoCombine\",\"pos\":[584,918],\"size\":[315,314],\"flags\":{},\"order\":17,\"mode\":0,\"inputs\":[{\"name\":\"images\",\"type\":\"IMAGE\",\"link\":55,\"slot_index\":0},{\"name\":\"audio\",\"type\":\"VHS_AUDIO\",\"link\":null},{\"name\":\"batch_manager\",\"type\":\"VHS_BatchManager\",\"link\":null}],\"outputs\":[{\"name\":\"Filenames\",\"type\":\"VHS_FILENAMES\",\"links\":null,\"shape\":3}],\"properties\":{\"Node name for S&R\":\"VHS_VideoCombine\"},\"widgets_values\":{\"frame_rate\":12,\"loop_count\":0,\"filename_prefix\":\"AnimateDiff\",\"format\":\"video/nvenc_hevc-mp4\",\"pix_fmt\":\"yuv420p\",\"bitrate\":10,\"megabit\":true,\"save_metadata\":true,\"pingpong\":false,\"save_output\":false,\"videopreview\":{\"hidden\":false,\"paused\":false,\"params\":{\"filename\":\"AnimateDiff_00009.mp4\",\"subfolder\":\"\",\"type\":\"temp\",\"format\":\"video/nvenc_hevc-mp4\"}}}},{\"id\":20,\"type\":\"Mask To Image (mtb)\",\"pos\":[231,459],\"size\":[210,106],\"flags\":{},\"order\":8,\"mode\":0,\"inputs\":[{\"name\":\"mask\",\"type\":\"MASK\",\"link\":28,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[29],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Mask To Image (mtb)\"},\"widgets_values\":[\"#00ff00\",\"#000000\"]},{\"id\":16,\"type\":\"ImageToMask\",\"pos\":[-750,191],\"size\":[210,58],\"flags\":{},\"order\":6,\"mode\":0,\"inputs\":[{\"name\":\"image\",\"type\":\"IMAGE\",\"link\":25}],\"outputs\":[{\"name\":\"MASK\",\"type\":\"MASK\",\"links\":[26,28],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"ImageToMask\"},\"widgets_values\":[\"red\"]},{\"id\":19,\"type\":\"Mask To Image (mtb)\",\"pos\":[-750,446],\"size\":[210,106],\"flags\":{},\"order\":7,\"mode\":0,\"inputs\":[{\"name\":\"mask\",\"type\":\"MASK\",\"link\":26,\"slot_index\":0}],\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[27],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Mask To Image (mtb)\"},\"widgets_values\":[\"#ff0000\",\"#000000\"]},{\"id\":11,\"type\":\"Batch Shape (mtb)\",\"pos\":[-1039,192],\"size\":[210,334],\"flags\":{},\"order\":3,\"mode\":0,\"outputs\":[{\"name\":\"IMAGE\",\"type\":\"IMAGE\",\"links\":[25],\"shape\":3,\"slot_index\":0}],\"properties\":{\"Node name for S&R\":\"Batch Shape (mtb)\"},\"widgets_values\":[20,\"Tube\",1024,1024,512,\"#ffffff\",\"#000000\",\"#000000\",250,0,0]}],\"links\":[[25,11,0,16,0,\"IMAGE\"],[26,16,0,19,0,\"MASK\"],[27,19,0,14,0,\"IMAGE\"],[28,16,0,20,0,\"MASK\"],[29,20,0,15,0,\"IMAGE\"],[30,13,0,22,0,\"FLOATS\"],[31,22,0,14,3,\"FLOATS\"],[32,21,0,23,0,\"FLOATS\"],[33,23,0,15,3,\"FLOATS\"],[37,14,0,27,0,\"IMAGE\"],[48,15,0,30,1,\"IMAGE\"],[50,30,0,31,0,\"IMAGE\"],[55,37,0,36,0,\"IMAGE\"],[56,35,0,37,0,\"IMAGE\"],[57,33,0,37,1,\"MASK\"],[62,14,0,40,0,\"IMAGE\"],[63,40,0,33,0,\"IMAGE\"],[64,14,0,41,0,\"*\"],[65,41,0,30,0,\"IMAGE\"]],\"groups\":[],\"config\":{},\"extra\":{\"workspace_info\":{\"id\":\"lHUoc3eCvYMplIxkGM68o\"}},\"version\":0.4}\n```", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Image Premultiply (mtb)": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["RGBA"], "name": "Image Premultiply (mtb)", "display_name": "Image Premultiply (mtb)", "description": "# Image Premultiply\n\nPremultiply image with mask\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Image Resize Factor (mtb)": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "supersample": ["BOOLEAN", {"default": true}], "resampling": [["nearest", "linear", "bilinear", "bicubic", "trilinear", "area", "nearest-exact"], {"default": "nearest"}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "factor", "supersample", "resampling"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Resize Factor (mtb)", "display_name": "Image Resize Factor (mtb)", "description": "# Image Resize Factor\n\nExtracted mostly from WAS Node Suite, with a few edits (most notably multiple image support) and less features.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Save Image Grid (mtb)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "save_intermediate": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "save_intermediate"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image Grid (mtb)", "display_name": "Save Image Grid (mtb)", "description": "# Save Image Grid\n\nSave all the images in the input batch as a grid of images.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true}, "Load Image From Url (mtb)": {"input": {"required": {"url": ["STRING", {"default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Example.jpg/800px-Example.jpg"}]}}, "input_order": {"required": ["url"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Load Image From Url (mtb)", "display_name": "Load Image From Url (mtb)", "description": "# Load image from URL\n\nLoad an image from the given URL\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": false}, "Sharpen (mtb)": {"input": {"required": {"image": ["IMAGE"], "sharpen_radius": ["INT", {"default": 1, "min": 1, "max": 31, "step": 1}], "sigma_x": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "sigma_y": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 10.0, "step": 0.1}], "alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.1}]}}, "input_order": {"required": ["image", "sharpen_radius", "sigma_x", "sigma_y", "alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Sharpen (mtb)", "display_name": "Sharpen (mtb)", "description": "# Sharpen\nSharpens an image using a Gaussian kernel.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image processing", "output_node": false}, "Extract Coordinates From Image (mtb)": {"input": {"required": {"threshold": ["FLOAT"], "max_points": ["INT", {"default": 50, "min": 0}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["threshold", "max_points"], "optional": ["image", "mask"]}, "output": ["BATCH_COORDINATES", "IMAGE"], "output_is_list": [false, false], "output_name": ["BATCH_COORDINATES", "IMAGE"], "name": "Extract Coordinates From Image (mtb)", "display_name": "Extract Coordinates From Image (mtb)", "description": "Extract 2D points from a batch of images based on a threshold.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/coordinates", "output_node": false}, "Coordinates To String (mtb)": {"input": {"required": {"coordinates": ["BATCH_COORDINATES"], "frame": ["INT"]}}, "input_order": {"required": ["coordinates", "frame"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Coordinates To String (mtb)", "display_name": "Coordinates To String (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/coordinates", "output_node": false}, "Stack Images (mtb)": {"input": {"required": {"vertical": ["BOOLEAN", {"default": false}]}, "optional": {"match_method": [["error", "smallest", "largest"], {"default": "error"}]}}, "input_order": {"required": ["vertical"], "optional": ["match_method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Stack Images (mtb)", "display_name": "Stack Images (mtb)", "description": "# Stack Images\n\nA simple way to stack images either horizontally or vertically. Stack image uses [dynamic inputs](web-dynamic-inputs).\n\nIt outputs RGBA tensors and supports RGB or RGBA as input (normalized to RGBA internally). If the image dimensions don't match they must at least match:\n- in `width` when stacking vertically.\n- in `height` when stacking horizontally.\n\nHere is an example workflow using [Text To Image](nodes-text-to-image) (the text was generated using [Nous Hermes 2 Vision](https://huggingface.co/billborkowski/llava-NousResearch_Nous-Hermes-2-Vision-GGUF) thanks to the great [ComfyUI_VLM_nodes](https://github.com/gokayfem/ComfyUI_VLM_nodes) extension. For simplicity's sake, the workflow doesn't contain external nodes:\n\n![stack_images](https://github.com/melMass/comfy_mtb/assets/7041726/a0c03621-3377-46cf-a6b4-f47e70c7d11f)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image utils", "output_node": false}, "Pick From Batch (mtb)": {"input": {"required": {"image": ["IMAGE"], "from_direction": [["end", "start"], {"default": "start"}], "count": ["INT", {"default": 1}]}}, "input_order": {"required": ["image", "from_direction", "count"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Pick From Batch (mtb)", "display_name": "Pick From Batch (mtb)", "description": "# Pick From Batch\nPick a specific number of images from a batch either from the head or the tail.\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image utils", "output_node": false}, "Save Image (mtb)": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Save Image (mtb)", "display_name": "Save Image (mtb)", "description": "Saves the input images to your ComfyUI output directory.\n    This behaves exactly like the native SaveImage node but isn't an output node.\n    The reason I made this is to allow 'inlining' image save in loops for instance,\n    using the native node there wouldn't run for each iteration of the loop.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image utils", "output_node": false}, "Save Gif (mtb)": {"input": {"required": {"image": ["IMAGE"], "fps": ["INT", {"default": 12, "min": 1, "max": 120}], "resize_by": ["FLOAT", {"default": 1.0, "min": 0.1}], "optimize": ["BOOLEAN", {"default": false}], "pingpong": ["BOOLEAN", {"default": false}], "resample_filter": [["nearest", "box", "bilinear", "hamming", "bicubic", "lanczos"]], "use_ffmpeg": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "fps", "resize_by", "optimize", "pingpong", "resample_filter", "use_ffmpeg"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Gif (mtb)", "display_name": "Save Gif (mtb)", "description": "# Save GIF\nSave the images from the batch as a GIF\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true, "deprecated": true}, "Export With Ffmpeg (mtb)": {"input": {"optional": {"images": ["IMAGE"], "playlist": ["PLAYLIST"]}, "required": {"fps": ["FLOAT", {"default": 24, "min": 1}], "prefix": ["STRING", {"default": "export"}], "format": [["mov", "mp4", "mkv", "gif", "avi"], {"default": "mov"}], "codec": [["prores_ks", "libx264", "libx265", "gif"], {"default": "prores_ks"}]}}, "input_order": {"optional": ["images", "playlist"], "required": ["fps", "prefix", "format", "codec"]}, "output": ["VIDEO"], "output_is_list": [false], "output_name": ["VIDEO"], "name": "Export With Ffmpeg (mtb)", "display_name": "Export With Ffmpeg (mtb)", "description": "# Export with FFmpeg\n\nQuite crude node, [VHS](https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite) is recommended now\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true, "deprecated": true}, "Add To Playlist (mtb)": {"input": {"required": {"relative_paths": ["BOOLEAN", {"default": false}], "persistant_playlist": ["BOOLEAN", {"default": false}], "playlist_name": ["STRING", {"default": "playlist_{index:04d}"}], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["relative_paths", "persistant_playlist", "playlist_name", "index"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Add To Playlist (mtb)", "display_name": "Add To Playlist (mtb)", "description": "Add a video to the playlist", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true, "experimental": true}, "Read Playlist (mtb)": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "persistant_playlist": ["BOOLEAN", {"default": false}], "playlist_name": ["STRING", {"default": "playlist_{index:04d}"}], "index": ["INT", {"default": 0, "min": 0}]}}, "input_order": {"required": ["enable", "persistant_playlist", "playlist_name", "index"]}, "output": ["PLAYLIST"], "output_is_list": [false], "output_name": ["PLAYLIST"], "name": "Read Playlist (mtb)", "display_name": "Read Playlist (mtb)", "description": "# Read a playlist\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": false, "experimental": true}, "Latent Lerp (mtb)": {"input": {"required": {"A": ["LATENT"], "B": ["LATENT"], "t": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["A", "B", "t"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Lerp (mtb)", "display_name": "Latent Lerp (mtb)", "description": "# Latent Lerp\nLinear interpolation (blend) between two latent vectors\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/latent", "output_node": false}, "Image H264 Compression (mtb)": {"input": {"required": {"image": ["IMAGE", {"tooltip": "The input image tensor to be compressed and decompressed."}], "crf": ["INT", {"default": 23, "min": 0, "max": 51, "step": 1, "tooltip": "Constant Rate Factor for h264 encoding (lower values mean higher quality)."}]}}, "input_order": {"required": ["image", "crf"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image H264 Compression (mtb)", "display_name": "Image H264 Compression (mtb)", "description": "\n**Encodes the input with h264 compression using a configurable CRF**.\n\n> [!IMPORTANT]\n> This node is not really needed with the latest version of LTXVideo.\n\n> [!NOTE]\n> This was recommended by the creators of LTX over banodoco's discord.\n\n*Orginal code from [mix](https://github.com/XmYx)*", "python_module": "custom_nodes.comfy-mtb", "category": "image", "output_node": false}, "Image Remove Background Rembg (mtb)": {"input": {"required": {"image": ["IMAGE"], "alpha_matting": ["BOOLEAN", {"default": false}], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "min": 0, "max": 255}], "alpha_matting_background_threshold": ["INT", {"default": 10, "min": 0, "max": 255}], "alpha_matting_erode_size": ["INT", {"default": 10, "min": 0, "max": 255}], "post_process_mask": ["BOOLEAN", {"default": false}], "bgcolor": ["COLOR", {"default": "#000000"}]}}, "input_order": {"required": ["image", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "post_process_mask", "bgcolor"]}, "output": ["IMAGE", "MASK", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["Image (rgba)", "Mask", "Image"], "name": "Image Remove Background Rembg (mtb)", "display_name": "Image Remove Background Rembg (mtb)", "description": "# Image Remove Background\n\nRemoves the background from the input using Rembg.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/image", "output_node": false}, "Model Patch Seamless (mtb)": {"input": {"required": {"model": ["MODEL"], "startStep": ["INT", {"default": 0}], "stopStep": ["INT", {"default": 999}], "tilingX": ["BOOLEAN", {"default": true}], "tilingY": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "startStep", "stopStep", "tilingX", "tilingY"]}, "output": ["MODEL", "MODEL"], "output_is_list": [false, false], "output_name": ["Original Model (passthrough)", "Patched Model"], "name": "Model Patch Seamless (mtb)", "display_name": "Model Patch Seamless (mtb)", "description": "# Model Patch Seamless\n\nThis uses this [hack](https://gitlab.com/-/snippets/2395088) to generate seamless image right at the inference stage.\nResults might vary depending on the model and prompt.\n\nHere is a few output from an extended version of the available [example](https://github.com/melMass/comfy_mtb/wiki/Examples). The main difference is that I use an upscale step before running [deep bump](nodes-deep-bump).\n\n|albedo|\n|-|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/3984907b-617e-49ff-8100-92c91af4459e\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/1194b2b8-eca4-4f75-8a1c-4d8074c08ea6\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/11026b5d-500b-4cfe-8cdc-682cc995dfb1\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/1f5d1671-5208-47ca-b625-478b09eed969\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/cdf3463f-c66c-472c-8ac3-e80af1901852\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/151b44ca-26e2-49d0-91be-cda938c0577a\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/b4280a65-644f-45d8-9fe8-b6148bf66b3c\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/cbfacbbc-2ae2-4cd2-84bc-8849c2115b51\"/>|\n|<img width=400 src=\"https://github.com/melMass/comfy_mtb/assets/7041726/8c6eea98-ae90-48d3-9051-de542102166e\"/>|", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/textures", "output_node": false}, "Vae Decode (mtb)": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "seamless_model": ["BOOLEAN", {"default": false}], "use_tiling_decoder": ["BOOLEAN", {"default": true}], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}]}}, "input_order": {"required": ["samples", "vae", "seamless_model", "use_tiling_decoder", "tile_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Vae Decode (mtb)", "display_name": "Vae Decode (mtb)", "description": "# VAE Decode\nThis works exactly as the builtin one but also supports the sd seamless hack, taken from: FlyingFireCo/tiled_ksampler\nthat is use in the `Model Patch Seamless` node.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/decode", "output_node": false}, "Float To Number (mtb)": {"input": {"required": {"float": ["FLOAT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["float"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Float To Number (mtb)", "display_name": "Float To Number (mtb)", "description": "Node addon for the WAS Suite. Converts a \"comfy\" FLOAT to a NUMBER.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/number", "output_node": false}, "Int To Bool (mtb)": {"input": {"required": {"int": ["INT", {"default": 0}]}}, "input_order": {"required": ["int"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Int To Bool (mtb)", "display_name": "Int To Bool (mtb)", "description": "# Int to Bool\n\nBasic int to bool conversion, >= 1 is true\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/number", "output_node": false}, "Int To Number (mtb)": {"input": {"required": {"int": ["INT", {"default": 0, "min": -1000000000.0, "max": 1000000000.0, "step": 1, "forceInput": true}]}}, "input_order": {"required": ["int"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Int To Number (mtb)", "display_name": "Int To Number (mtb)", "description": "Node addon for the WAS Suite. Converts a \"comfy\" INT to a NUMBER.", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/number", "output_node": false}, "Postshot Export (mtb)": {"input": {"required": {"project_file": ["STRING", {"default": "", "forceInput": true}], "export_splat_ply": ["STRING", {"default": "output.ply"}], "postshot_cli": ["STRING", {"default": "C:/Program Files/Jawset Postshot/bin/postshot-cli.exe"}]}}, "input_order": {"required": ["project_file", "export_splat_ply", "postshot_cli"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["exported_ply_path"], "name": "Postshot Export (mtb)", "display_name": "Postshot Export (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/postshot", "output_node": true}, "Postshot Train (mtb)": {"input": {"required": {"images": ["IMAGE", {"tooltip": "These image will get save to disk first"}], "profile": [["NeRF L", "NeRF M", "NeRF S", "NeRF XL", "NeRF XXL", "Splat ADC", "Splat MCMC"], {"default": "Splat MCMC", "tooltip": "The radiance field model profile to train"}], "image_select": [["all", "best"], {"default": "best", "tooltip": "How to select training images from the source image sets"}], "train_steps_limit": ["INT", {"default": 30, "min": 1, "max": 1000, "tooltip": "Number of kSteps to train the model for"}], "output_path": ["STRING", {"default": "output", "tooltip": "path to save the project to\nAbsolute paths are kept as is, relatives are from the output directory.\n"}], "postshot_cli": ["STRING", {"default": "C:/Program Files/Jawset Postshot/bin/postshot-cli.exe"}]}, "optional": {"gpu": ["INT", {"default": 0, "min": 0, "max": 255, "tooltip": "Specify the index of the GPU to use"}], "num_train_images": ["INT", {"default": 0, "min": 0, "tooltip": "If image-select best is used, specifies the number of training images to select"}], "max_image_size": ["INT", {"default": 1600, "min": 0, "tooltip": "Downscale training images such that their longer edge is at most this value in pixels. Disabled if zero."}], "max_num_features": ["INT", {"default": 8, "min": 1, "tooltip": "Maximum number of 2D kFeatures extracted from each image."}], "splat_density": ["FLOAT", {"default": 1.0, "min": 0.125, "max": 8.0, "tooltip": "Controls how much additional splats are generated during training.Applies only in 'Splat ADC' profile."}], "max_num_splats": ["INT", {"default": 3000, "min": 1, "tooltip": "Sets the maximum number of splats (in kSplats) created during training. Applies only in 'Splat MCMC' profile."}], "export_splat_ply": ["STRING", {"default": "", "tooltip": "If not empty will also save a ply file.\nAbsolute paths are kept as is, relatives are from the output directory.\n"}]}}, "input_order": {"required": ["images", "profile", "image_select", "train_steps_limit", "output_path", "postshot_cli"], "optional": ["gpu", "num_train_images", "max_image_size", "max_num_features", "splat_density", "max_num_splats", "export_splat_ply"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["project_file_path"], "name": "Postshot Train (mtb)", "display_name": "Postshot Train (mtb)", "description": "# Postshot Train\n\nhttps://github.com/user-attachments/assets/fcaf4163-28c7-4768-a785-bc794fca3ec0\n\n\nWrapper around the [Potshot](https://www.jawset.com/) CLI. \nYou must first run the GUI at least once and login.\nIf you use a custom install location you can specify it in **Settings > MTB**\n\n\n\n## Radiance Field Profile\n\nPostshot supports two different models to create radiance fields:\n- Gaussian Splatting (Splat)\n- Neural Radiance Fields (NeRF).\n\n### Splat MCMC\n\nBoth Splat profiles allow for very fast rendering and quickly reconstruct fine detail in well-covered regions of the scene.\n\nThe Splat MCMC profile is currently the recommended profile for most scenes. It allows limiting the number of Splat primitives and thereby the amount of memory and disk space the resulting model requires.\n\n### Splat ADC\n\nThe Splat ADC profile is very similar to the Splat MCMC profile, but differs in the way it produces detail in the scene during training. You can control the amount of detail it creates during training through the Splat Density parameter.\n\n### NeRF models\n\nWhen using the NeRF model, the maximum accuracy has to be specified before the training can begin. Postshot currently provides five sizes (S, M, L, XL, XXL) for NeRF models. NeRFs are much slower to render than Splats.\n\nHere is an intuition for how 'large' the NeRF profile options are:\n- **S** is for toy-like testing.\n- **M** is a significant step up, such that real scenes can be reasonably captured with low memory requirements.\n- **L** is the recommended default if you want to produce good image quality.\n- **XL** and **XXL** are for pushing toward fine detail in the scene center or for large scenes.\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/postshot", "output_node": true}, "Model Pruner (mtb)": {"input": {"optional": {"unet": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"]}, "required": {"save_separately": ["BOOLEAN", {"default": false}], "save_folder": ["STRING", {"default": "checkpoints/ComfyUI"}], "fix_clip": ["BOOLEAN", {"default": true}], "remove_junk": ["BOOLEAN", {"default": true}], "ema_mode": [["disabled", "remove_ema", "ema_only"], {"default": "remove_ema"}], "precision_unet": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_unet": [["copy", "convert", "delete"], {"default": "convert"}], "precision_clip": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_clip": [["copy", "convert", "delete"], {"default": "convert"}], "precision_vae": [["full", "fp32", "fp16", "bf16", "fp8"], {"default": "full"}], "operation_vae": [["copy", "convert", "delete"], {"default": "convert"}]}}, "input_order": {"optional": ["unet", "clip", "vae"], "required": ["save_separately", "save_folder", "fix_clip", "remove_junk", "ema_mode", "precision_unet", "operation_unet", "precision_clip", "operation_clip", "precision_vae", "operation_vae"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Model Pruner (mtb)", "display_name": "Model Pruner (mtb)", "description": "# Model Pruner\n\nBasic output node to prune/downsample a model.\n\nIf `save_folder` is a relative path, it will be relative to comfy's output directory?\n\n**This is a bit experimental for now**\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/prune", "output_node": true}, "Qr Code (mtb)": {"input": {"required": {"url": ["STRING", {"default": "https://www.github.com"}], "width": ["INT", {"default": 256, "max": 8096, "min": 0, "step": 1}], "height": ["INT", {"default": 256, "max": 8096, "min": 0, "step": 1}], "error_correct": [["L", "M", "Q", "H"], {"default": "L"}], "box_size": ["INT", {"default": 10, "max": 8096, "min": 0, "step": 1}], "border": ["INT", {"default": 4, "max": 8096, "min": 0, "step": 1}], "invert": [["BOOLEAN"], {"default": false}]}}, "input_order": {"required": ["url", "width", "height", "error_correct", "box_size", "border", "invert"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Qr Code (mtb)", "display_name": "Qr Code (mtb)", "description": "# QR Code\nBasic QR Code generator\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/generate", "output_node": false}, "Transform Image (mtb)": {"input": {"required": {"image": ["IMAGE"], "x": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "y": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.001, "step": 0.01}], "angle": ["FLOAT", {"default": 0, "step": 1, "min": -360, "max": 360}], "shear": ["FLOAT", {"default": 0, "step": 1, "min": -4096, "max": 4096}], "border_handling": [["edge", "constant", "reflect", "symmetric"], {"default": "edge"}], "constant_color": ["COLOR", {"default": "#000000"}]}, "optional": {"filter_type": [["nearest", "box", "bilinear", "hamming", "bicubic", "lanczos"], {"default": "bilinear"}]}}, "input_order": {"required": ["image", "x", "y", "zoom", "angle", "shear", "border_handling", "constant_color"], "optional": ["filter_type"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Transform Image (mtb)", "display_name": "Transform Image (mtb)", "description": "# Transform Image\n\nTransform images while maintaining the input tensor shape\n\n## Filter Types\n1. `NEAREST`: Nearest neighbor - fastest but lowest quality\n2. `BOX`: Box filtering - similar to nearest neighbor but with some averaging\n3. `BILINEAR`: Bilinear filtering - good balance between quality and speed\n4. `HAMMING`: Hamming filtering - improved version of bilinear (doesn't allow rotations)\n5. `BICUBIC`: Bicubic filtering - better quality than bilinear but slower\n6. `LANCZOS`: Lanczos filtering - highest quality but slowest (doesn't allow rotations)\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/transform", "output_node": false}, "Load Image Sequence (mtb)": {"input": {"required": {"path": ["STRING", {"default": "videos/####.png"}], "current_frame": ["INT", {"default": 0, "min": -1, "max": 9999999}]}, "optional": {"range": ["STRING", {"default": ""}]}}, "input_order": {"required": ["path", "current_frame"], "optional": ["range"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "current_frame", "total_frames"], "name": "Load Image Sequence (mtb)", "display_name": "Load Image Sequence (mtb)", "description": "# Load Image Sequence\n\nLoad an image sequence from a folder. The current frame is used to determine which image to load.  \nThe UX need improvements but you can use it as follow:  \n\n- If current_frame is -1, it will load all the frames matching the pattern.\n- If the path contains a `*` it will glob the paths using it.\n- If range is provided (for instance `0-10` to load frame 0 to 10) current_frame is ignored.\n\n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": false}, "Save Image Sequence (mtb)": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "Sequence"}], "current_frame": ["INT", {"default": 0, "min": 0, "max": 9999999}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "current_frame"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Image Sequence (mtb)", "display_name": "Save Image Sequence (mtb)", "description": "# Save Image Sequence\n\nSave an image sequence to a folder. The current frame is used to determine which image to save.\nThis is merely a wrapper around the `save_images` function with formatting for the output folder and filename.\n    \n", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/IO", "output_node": true}, "Load Vit Matte Model (mtb)": {"input": {"required": {"kind": [["Composition-1K", "Distinctions-646"]], "autodownload": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["kind", "autodownload"]}, "output": ["VITMATTE_MODEL"], "output_is_list": [false], "output_name": ["torch_script"], "name": "Load Vit Matte Model (mtb)", "display_name": "Load Vit Matte Model (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/vitmatte", "output_node": false}, "Generate Trimap (mtb)": {"input": {"required": {"mask": ["MASK"], "erode": ["INT", {"default": 10}], "dilate": ["INT", {"default": 10}]}}, "input_order": {"required": ["mask", "erode", "dilate"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["trimap"], "name": "Generate Trimap (mtb)", "display_name": "Generate Trimap (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/vitmatte", "output_node": false}, "Apply Vit Matte (mtb)": {"input": {"required": {"model": ["VITMATTE_MODEL"], "image": ["IMAGE"], "trimap": ["IMAGE"], "returns": [["RGB", "RGBA"]]}}, "input_order": {"required": ["model", "image", "trimap", "returns"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image (rgba)", "mask"], "name": "Apply Vit Matte (mtb)", "display_name": "Apply Vit Matte (mtb)", "description": "", "python_module": "custom_nodes.comfy-mtb", "category": "mtb/utils", "output_node": false}, "BasicLoad3DModel": {"input": {"required": {"model_path": ["STRING", {"default": ""}]}, "optional": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}]}}, "input_order": {"required": ["model_path"], "optional": ["width", "height"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "BasicLoad3DModel", "display_name": "Basic 3D Model Loader", "description": "", "python_module": "custom_nodes.comfyui-3dloader", "category": "3D", "output_node": false}, "LoadImageFromBase64": {"input": {"required": {"data": ["STRING", {"default": ""}]}}, "input_order": {"required": ["data"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImageFromBase64", "display_name": "Load Image From Base64", "description": "", "python_module": "custom_nodes.comfyui-base64-to-image", "category": "image", "output_node": false}, "BlehBlockCFG": {"input": {"required": {"model": ["MODEL", {"tooltip": "Model to patch"}], "commasep_block_numbers": ["STRING", {"default": "i4,m0,o4", "tooltip": "Comma separated list of block numbers, each should start with one of i(input), m(iddle), o(utput). You may also use * instead of a block number to select all blocks in the category."}], "scale": ["FLOAT", {"default": 0.25, "min": -100.0, "max": 100.0, "step": 0.001, "round": false, "tooltip": "Effect strength"}], "start_percent": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "Start time as sampling percentage (not percentage of steps). Percentages are inclusive."}], "end_percent": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "End time as sampling percentage (not percentage of steps). Percentages are inclusive."}], "skip_mode": ["BOOLEAN", {"default": false, "tooltip": "For output blocks, this causes the effect to apply to the skip connection. For input blocks it patches after the skip connection. No effect for middle blocks."}], "apply_to": [["cond", "uncond"], {"default": "uncond", "tooltip": "Guides the specified target away from its opposite. cond=positive prompt, uncond=negative prompt."}]}}, "input_order": {"required": ["model", "commasep_block_numbers", "scale", "start_percent", "end_percent", "skip_mode", "apply_to"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehBlockCFG", "display_name": "BlehBlockCFG", "description": "Applies a CFG type effect to the model blocks themselves during evaluation.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "bleh/model_patches", "output_node": false}, "BlehBlockOps": {"input": {"required": {"model": ["MODEL"], "rules": ["STRING", {"multiline": true, "dynamicPrompts": false}]}, "optional": {"sigmas_opt": ["SIGMAS"]}}, "input_order": {"required": ["model", "rules"], "optional": ["sigmas_opt"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehBlockOps", "display_name": "BlehBlockOps", "description": "", "python_module": "custom_nodes.ComfyUI-bleh", "category": "bleh/model_patches", "output_node": false}, "BlehDeepShrink": {"input": {"required": {"model": ["MODEL", {"tooltip": "Model to patch"}], "commasep_block_numbers": ["STRING", {"default": "3", "tooltip": "A comma separated list of input block numbers, the default should work for SD 1.5 and SDXL."}], "downscale_factor": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 32.0, "step": 0.1, "tooltip": "Controls how much the block will get downscaled while the effect is active."}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "Start time as sampling percentage (not percentage of steps). Percentages are inclusive."}], "start_fadeout_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "When enabled, the downscale_factor will fade out such that at end_percent it will be around 1.0 (no downscaling). May reduce artifacts... or cause them!"}], "end_percent": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "End time as sampling percentage (not percentage of steps). Percentages are inclusive."}], "downscale_after_skip": ["BOOLEAN", {"default": true, "tooltip": "Controls whether the downscale effect occurs after the skip conection. Generally should be left enabled."}], "downscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "colorize", "cosinterp", "cuberp", "inject", "lerp", "lineardodge", "linearlight", "pinlight", "normcolorize", "normcosinterp", "normcuberp", "norminject", "normlerp", "normlineardodge", "normlinearlight", "normpinlight", "revcolorize", "revcosinterp", "revcuberp", "revinject", "revlerp", "revlineardodge", "revlinearlight", "revpinlight", "revnormcolorize", "revnormcosinterp", "revnormcuberp", "revnorminject", "revnormlerp", "revnormlineardodge", "revnormlinearlight", "revnormpinlight", "hslerp", "bislerp", "altbislerp", "revaltbislerp", "bibislerp", "revhslerp", "revbislerp", "revbibislerp", "bicubic+lowpass", "bicubic+multilowpass", "bicubic+highpass", "bicubic+multihighpass", "bicubic+bandpass", "bicubic+randhilowpass", "bicubic+randmultihilowpass", "bicubic+randhibandpass", "bicubic+randlowbandpass", "bicubic+gaussianblur", "bicubic+multigaussianblur", "bicubic+edge", "bicubic+multiedge", "bicubic+sharpen", "bicubic+multisharpen", "bicubic+korniabilateralblur", "bicubic+korniagaussianblur", "bicubic+korniasharpen", "bicubic+korniaedge", "bicubic+korniarevedge", "bicubic+korniarandblursharp", "bicubic+renoise1", "bicubic+renoise2", "bislerp+lowpass", "bislerp+multilowpass", "bislerp+highpass", "bislerp+multihighpass", "bislerp+bandpass", "bislerp+randhilowpass", "bislerp+randmultihilowpass", "bislerp+randhibandpass", "bislerp+randlowbandpass", "bislerp+gaussianblur", "bislerp+multigaussianblur", "bislerp+edge", "bislerp+multiedge", "bislerp+sharpen", "bislerp+multisharpen", "bislerp+korniabilateralblur", "bislerp+korniagaussianblur", "bislerp+korniasharpen", "bislerp+korniaedge", "bislerp+korniarevedge", "bislerp+korniarandblursharp", "bislerp+renoise1", "bislerp+renoise2", "hslerp+lowpass", "hslerp+multilowpass", "hslerp+highpass", "hslerp+multihighpass", "hslerp+bandpass", "hslerp+randhilowpass", "hslerp+randmultihilowpass", "hslerp+randhibandpass", "hslerp+randlowbandpass", "hslerp+gaussianblur", "hslerp+multigaussianblur", "hslerp+edge", "hslerp+multiedge", "hslerp+sharpen", "hslerp+multisharpen", "hslerp+korniabilateralblur", "hslerp+korniagaussianblur", "hslerp+korniasharpen", "hslerp+korniaedge", "hslerp+korniarevedge", "hslerp+korniarandblursharp", "hslerp+renoise1", "hslerp+renoise2", "random+lowpass", "random+multilowpass", "random+highpass", "random+multihighpass", "random+bandpass", "random+randhilowpass", "random+randmultihilowpass", "random+randhibandpass", "random+randlowbandpass", "random+gaussianblur", "random+multigaussianblur", "random+edge", "random+multiedge", "random+sharpen", "random+multisharpen", "random+korniabilateralblur", "random+korniagaussianblur", "random+korniasharpen", "random+korniaedge", "random+korniarevedge", "random+korniarandblursharp", "random+renoise1", "random+renoise2", "random", "randomaa"], {"default": "bicubic", "tooltip": "Mode used for downscaling. Bicubic is generally a safe choice."}], "upscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "colorize", "cosinterp", "cuberp", "inject", "lerp", "lineardodge", "linearlight", "pinlight", "normcolorize", "normcosinterp", "normcuberp", "norminject", "normlerp", "normlineardodge", "normlinearlight", "normpinlight", "revcolorize", "revcosinterp", "revcuberp", "revinject", "revlerp", "revlineardodge", "revlinearlight", "revpinlight", "revnormcolorize", "revnormcosinterp", "revnormcuberp", "revnorminject", "revnormlerp", "revnormlineardodge", "revnormlinearlight", "revnormpinlight", "hslerp", "bislerp", "altbislerp", "revaltbislerp", "bibislerp", "revhslerp", "revbislerp", "revbibislerp", "bicubic+lowpass", "bicubic+multilowpass", "bicubic+highpass", "bicubic+multihighpass", "bicubic+bandpass", "bicubic+randhilowpass", "bicubic+randmultihilowpass", "bicubic+randhibandpass", "bicubic+randlowbandpass", "bicubic+gaussianblur", "bicubic+multigaussianblur", "bicubic+edge", "bicubic+multiedge", "bicubic+sharpen", "bicubic+multisharpen", "bicubic+korniabilateralblur", "bicubic+korniagaussianblur", "bicubic+korniasharpen", "bicubic+korniaedge", "bicubic+korniarevedge", "bicubic+korniarandblursharp", "bicubic+renoise1", "bicubic+renoise2", "bislerp+lowpass", "bislerp+multilowpass", "bislerp+highpass", "bislerp+multihighpass", "bislerp+bandpass", "bislerp+randhilowpass", "bislerp+randmultihilowpass", "bislerp+randhibandpass", "bislerp+randlowbandpass", "bislerp+gaussianblur", "bislerp+multigaussianblur", "bislerp+edge", "bislerp+multiedge", "bislerp+sharpen", "bislerp+multisharpen", "bislerp+korniabilateralblur", "bislerp+korniagaussianblur", "bislerp+korniasharpen", "bislerp+korniaedge", "bislerp+korniarevedge", "bislerp+korniarandblursharp", "bislerp+renoise1", "bislerp+renoise2", "hslerp+lowpass", "hslerp+multilowpass", "hslerp+highpass", "hslerp+multihighpass", "hslerp+bandpass", "hslerp+randhilowpass", "hslerp+randmultihilowpass", "hslerp+randhibandpass", "hslerp+randlowbandpass", "hslerp+gaussianblur", "hslerp+multigaussianblur", "hslerp+edge", "hslerp+multiedge", "hslerp+sharpen", "hslerp+multisharpen", "hslerp+korniabilateralblur", "hslerp+korniagaussianblur", "hslerp+korniasharpen", "hslerp+korniaedge", "hslerp+korniarevedge", "hslerp+korniarandblursharp", "hslerp+renoise1", "hslerp+renoise2", "random+lowpass", "random+multilowpass", "random+highpass", "random+multihighpass", "random+bandpass", "random+randhilowpass", "random+randmultihilowpass", "random+randhibandpass", "random+randlowbandpass", "random+gaussianblur", "random+multigaussianblur", "random+edge", "random+multiedge", "random+sharpen", "random+multisharpen", "random+korniabilateralblur", "random+korniagaussianblur", "random+korniasharpen", "random+korniaedge", "random+korniarevedge", "random+korniarandblursharp", "random+renoise1", "random+renoise2", "random", "randomaa"], {"default": "bicubic", "tooltip": "Mode used for upscaling. Bicubic is generally a safe choice."}], "antialias_downscale": ["BOOLEAN", {"default": false, "tooltip": "Experimental option to anti-alias (smooth) the latent after downscaling."}], "antialias_upscale": ["BOOLEAN", {"default": false, "tooltip": "Experimental option to anti-alias (smooth) the latent after upscaling."}]}}, "input_order": {"required": ["model", "commasep_block_numbers", "downscale_factor", "start_percent", "start_fadeout_percent", "end_percent", "downscale_after_skip", "downscale_method", "upscale_method", "antialias_downscale", "antialias_upscale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehDeepShrink", "display_name": "Kohya Deep Shrink (bleh)", "description": "Model patch that enables generating at higher resolution than the model was trained for by downscaling the image near the start of generation.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "bleh/model_patches", "output_node": false}, "BlehDisableNoise": {"input": {"required": {"noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"seed_offset": ["INT", {"default": 1, "min": 0, "max": 200, "tooltip": "Advances the RNG this many times to avoid the mistake of using the same noise for sampling as the initial noise. I recommend leaving this at 1 (or higher) but you can set it to 0. to disable"}]}}, "input_order": {"required": ["noise_seed"], "optional": ["seed_offset"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "BlehDisableNoise", "display_name": "BlehDisableNoise", "description": "Allows setting a seed even when disabling noise. Used for SamplerCustomAdvanced or other nodes that take a NOISE input.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "sampling/custom_sampling/noise", "output_node": false}, "BlehDiscardPenultimateSigma": {"input": {"required": {"enabled": ["BOOLEAN", {"default": true}], "sigmas": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["enabled", "sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BlehDiscardPenultimateSigma", "display_name": "BlehDiscardPenultimateSigma", "description": "Discards the next to last sigma in the list.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "BlehForceSeedSampler": {"input": {"required": {"sampler": ["SAMPLER"]}, "optional": {"seed_offset": ["INT", {"default": 1, "min": 0, "max": 200, "tooltip": "Advances the RNG this many times to avoid the mistake of using the same noise for sampling as the initial noise. I recommend leaving this at 1 (or higher) but you can set it to 0. to disable"}]}}, "input_order": {"required": ["sampler"], "optional": ["seed_offset"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "BlehForceSeedSampler", "display_name": "BlehForceSeedSampler", "description": "ComfyUI has a bug where it will not set any seed if you have add_noise disabled in the sampler. This node is a workaround for that which ensures a seed alway gets set.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "sampling/custom_sampling/samplers", "output_node": false}, "BlehGlobalSageAttention": {"input": {"required": {"model": ["MODEL"], "enabled": ["BOOLEAN", {"default": true}]}, "optional": {"yaml_parameters": ["STRING", {"tooltip": "Allows specifying custom parameters via YAML. These are mostly passed directly to the SageAttention function with no error checking. Must be empty or a YAML object.", "dynamicPrompts": false, "multiline": true, "defaultInput": true}]}}, "input_order": {"required": ["model", "enabled"], "optional": ["yaml_parameters"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehGlobalSageAttention", "display_name": "BlehGlobalSageAttention", "description": "Deprecated: Prefer using BlehSageAttentionSampler if possible. This node allows globally replacing ComfyUI's attention with SageAtteniton (performance enhancement). Requires SageAttention to be installed into the ComfyUI Python environment. IMPORTANT: This is not a normal model patch. For settings to apply (including toggling on or off) the node must actually be run. If you toggle it on, run your workflow and then bypass or mute the node this will not actually disable SageAttention.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "hacks", "output_node": false}, "BlehHyperTile": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "tile_size": ["INT", {"default": 256, "min": 1, "max": 2048}], "swap_size": ["INT", {"default": 2, "min": 1, "max": 128}], "max_depth": ["INT", {"default": 0, "min": 0, "max": 10}], "scale_depth": ["BOOLEAN", {"default": false}], "interval": ["INT", {"default": 1, "min": -999, "max": 999}], "start_step": ["INT", {"default": 1000, "min": 0, "max": 1000, "step": 1, "display": "number"}], "end_step": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}]}}, "input_order": {"required": ["model", "seed", "tile_size", "swap_size", "max_depth", "scale_depth", "interval", "start_step", "end_step"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehHyperTile", "display_name": "HyperTile (bleh)", "description": "Model patch that speeds up generation at some cost of quality.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "bleh/model_patches", "output_node": false}, "BlehInsaneChainSampler": {"input": {"required": {"sampler": ["SAMPLER"], "steps": ["INT", {"default": 0, "min": 0, "max": 9999}]}, "optional": {"sampler_chain_opt": ["BLEH_SAMPLER_CHAIN"]}}, "input_order": {"required": ["sampler", "steps"], "optional": ["sampler_chain_opt"]}, "output": ["SAMPLER", "BLEH_SAMPLER_CHAIN"], "output_is_list": [false, false], "output_name": ["SAMPLER", "BLEH_SAMPLER_CHAIN"], "name": "BlehInsaneChainSampler", "display_name": "BlehInsaneChainSampler", "description": "", "python_module": "custom_nodes.ComfyUI-bleh", "category": "sampling/custom_sampling/samplers", "output_node": false}, "BlehLatentOps": {"input": {"required": {"samples": ["LATENT"], "rules": ["STRING", {"multiline": true, "dynamicPrompts": false}]}, "optional": {"samples_hsp": ["LATENT"]}}, "input_order": {"required": ["samples", "rules"], "optional": ["samples_hsp"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "BlehLatentOps", "display_name": "BlehLatentOps", "description": "", "python_module": "custom_nodes.ComfyUI-bleh", "category": "latent", "output_node": false}, "BlehLatentScaleBy": {"input": {"required": {"samples": ["LATENT"], "method_horizontal": [["bicubic", "nearest-exact", "bilinear", "area", "colorize", "cosinterp", "cuberp", "inject", "lerp", "lineardodge", "linearlight", "pinlight", "normcolorize", "normcosinterp", "normcuberp", "norminject", "normlerp", "normlineardodge", "normlinearlight", "normpinlight", "revcolorize", "revcosinterp", "revcuberp", "revinject", "revlerp", "revlineardodge", "revlinearlight", "revpinlight", "revnormcolorize", "revnormcosinterp", "revnormcuberp", "revnorminject", "revnormlerp", "revnormlineardodge", "revnormlinearlight", "revnormpinlight", "hslerp", "bislerp", "altbislerp", "revaltbislerp", "bibislerp", "revhslerp", "revbislerp", "revbibislerp", "bicubic+lowpass", "bicubic+multilowpass", "bicubic+highpass", "bicubic+multihighpass", "bicubic+bandpass", "bicubic+randhilowpass", "bicubic+randmultihilowpass", "bicubic+randhibandpass", "bicubic+randlowbandpass", "bicubic+gaussianblur", "bicubic+multigaussianblur", "bicubic+edge", "bicubic+multiedge", "bicubic+sharpen", "bicubic+multisharpen", "bicubic+korniabilateralblur", "bicubic+korniagaussianblur", "bicubic+korniasharpen", "bicubic+korniaedge", "bicubic+korniarevedge", "bicubic+korniarandblursharp", "bicubic+renoise1", "bicubic+renoise2", "bislerp+lowpass", "bislerp+multilowpass", "bislerp+highpass", "bislerp+multihighpass", "bislerp+bandpass", "bislerp+randhilowpass", "bislerp+randmultihilowpass", "bislerp+randhibandpass", "bislerp+randlowbandpass", "bislerp+gaussianblur", "bislerp+multigaussianblur", "bislerp+edge", "bislerp+multiedge", "bislerp+sharpen", "bislerp+multisharpen", "bislerp+korniabilateralblur", "bislerp+korniagaussianblur", "bislerp+korniasharpen", "bislerp+korniaedge", "bislerp+korniarevedge", "bislerp+korniarandblursharp", "bislerp+renoise1", "bislerp+renoise2", "hslerp+lowpass", "hslerp+multilowpass", "hslerp+highpass", "hslerp+multihighpass", "hslerp+bandpass", "hslerp+randhilowpass", "hslerp+randmultihilowpass", "hslerp+randhibandpass", "hslerp+randlowbandpass", "hslerp+gaussianblur", "hslerp+multigaussianblur", "hslerp+edge", "hslerp+multiedge", "hslerp+sharpen", "hslerp+multisharpen", "hslerp+korniabilateralblur", "hslerp+korniagaussianblur", "hslerp+korniasharpen", "hslerp+korniaedge", "hslerp+korniarevedge", "hslerp+korniarandblursharp", "hslerp+renoise1", "hslerp+renoise2", "random+lowpass", "random+multilowpass", "random+highpass", "random+multihighpass", "random+bandpass", "random+randhilowpass", "random+randmultihilowpass", "random+randhibandpass", "random+randlowbandpass", "random+gaussianblur", "random+multigaussianblur", "random+edge", "random+multiedge", "random+sharpen", "random+multisharpen", "random+korniabilateralblur", "random+korniagaussianblur", "random+korniasharpen", "random+korniaedge", "random+korniarevedge", "random+korniarandblursharp", "random+renoise1", "random+renoise2", "random", "randomaa"]], "method_vertical": [["same", "bicubic", "nearest-exact", "bilinear", "area", "colorize", "cosinterp", "cuberp", "inject", "lerp", "lineardodge", "linearlight", "pinlight", "normcolorize", "normcosinterp", "normcuberp", "norminject", "normlerp", "normlineardodge", "normlinearlight", "normpinlight", "revcolorize", "revcosinterp", "revcuberp", "revinject", "revlerp", "revlineardodge", "revlinearlight", "revpinlight", "revnormcolorize", "revnormcosinterp", "revnormcuberp", "revnorminject", "revnormlerp", "revnormlineardodge", "revnormlinearlight", "revnormpinlight", "hslerp", "bislerp", "altbislerp", "revaltbislerp", "bibislerp", "revhslerp", "revbislerp", "revbibislerp", "bicubic+lowpass", "bicubic+multilowpass", "bicubic+highpass", "bicubic+multihighpass", "bicubic+bandpass", "bicubic+randhilowpass", "bicubic+randmultihilowpass", "bicubic+randhibandpass", "bicubic+randlowbandpass", "bicubic+gaussianblur", "bicubic+multigaussianblur", "bicubic+edge", "bicubic+multiedge", "bicubic+sharpen", "bicubic+multisharpen", "bicubic+korniabilateralblur", "bicubic+korniagaussianblur", "bicubic+korniasharpen", "bicubic+korniaedge", "bicubic+korniarevedge", "bicubic+korniarandblursharp", "bicubic+renoise1", "bicubic+renoise2", "bislerp+lowpass", "bislerp+multilowpass", "bislerp+highpass", "bislerp+multihighpass", "bislerp+bandpass", "bislerp+randhilowpass", "bislerp+randmultihilowpass", "bislerp+randhibandpass", "bislerp+randlowbandpass", "bislerp+gaussianblur", "bislerp+multigaussianblur", "bislerp+edge", "bislerp+multiedge", "bislerp+sharpen", "bislerp+multisharpen", "bislerp+korniabilateralblur", "bislerp+korniagaussianblur", "bislerp+korniasharpen", "bislerp+korniaedge", "bislerp+korniarevedge", "bislerp+korniarandblursharp", "bislerp+renoise1", "bislerp+renoise2", "hslerp+lowpass", "hslerp+multilowpass", "hslerp+highpass", "hslerp+multihighpass", "hslerp+bandpass", "hslerp+randhilowpass", "hslerp+randmultihilowpass", "hslerp+randhibandpass", "hslerp+randlowbandpass", "hslerp+gaussianblur", "hslerp+multigaussianblur", "hslerp+edge", "hslerp+multiedge", "hslerp+sharpen", "hslerp+multisharpen", "hslerp+korniabilateralblur", "hslerp+korniagaussianblur", "hslerp+korniasharpen", "hslerp+korniaedge", "hslerp+korniarevedge", "hslerp+korniarandblursharp", "hslerp+renoise1", "hslerp+renoise2", "random+lowpass", "random+multilowpass", "random+highpass", "random+multihighpass", "random+bandpass", "random+randhilowpass", "random+randmultihilowpass", "random+randhibandpass", "random+randlowbandpass", "random+gaussianblur", "random+multigaussianblur", "random+edge", "random+multiedge", "random+sharpen", "random+multisharpen", "random+korniabilateralblur", "random+korniagaussianblur", "random+korniasharpen", "random+korniaedge", "random+korniarevedge", "random+korniarandblursharp", "random+renoise1", "random+renoise2", "random", "randomaa"]], "scale_width": ["FLOAT", {"default": 1.5, "min": 0.01, "max": 8.0, "step": 0.01}], "scale_height": ["FLOAT", {"default": 1.5, "min": 0.01, "max": 8.0, "step": 0.01}], "antialias_size": ["INT", {"default": 0}]}}, "input_order": {"required": ["samples", "method_horizontal", "method_vertical", "scale_width", "scale_height", "antialias_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "BlehLatentScaleBy", "display_name": "BlehLatentScaleBy", "description": "", "python_module": "custom_nodes.ComfyUI-bleh", "category": "latent", "output_node": false}, "BlehLatentBlend": {"input": {"required": {"samples1": ["LATENT"], "samples2": ["LATENT"], "samples2_percent": ["FLOAT", {"default": 0.5}], "blend_mode": [["bislerp", "slerp", "colorize", "cosinterp", "cuberp", "hslerp", "inject", "lerp", "lineardodge", "colordodge", "difference", "exclusion", "glow", "hardlight", "linearlight", "multiply", "overlay", "pinlight", "reflect", "screen", "subtract", "vividlight", "normbislerp", "normslerp", "normcolorize", "normcosinterp", "normcuberp", "norminject", "normlerp", "normlineardodge", "normcolordodge", "normglow", "normhardlight", "normlinearlight", "normoverlay", "normpinlight", "normreflect", "normscreen", "normsubtract", "normvividlight", "revbislerp", "revslerp", "revcolorize", "revcosinterp", "revcuberp", "revhslerp", "revinject", "revlerp", "revlineardodge", "revcolordodge", "revdifference", "revexclusion", "revglow", "revhardlight", "revlinearlight", "revmultiply", "revoverlay", "revpinlight", "revreflect", "revscreen", "revsubtract", "revvividlight", "revnormbislerp", "revnormslerp", "revnormcolorize", "revnormcosinterp", "revnormcuberp", "revnorminject", "revnormlerp", "revnormlineardodge", "revnormcolordodge", "revnormglow", "revnormhardlight", "revnormlinearlight", "revnormoverlay", "revnormpinlight", "revnormreflect", "revnormscreen", "revnormsubtract", "revnormvividlight"]]}}, "input_order": {"required": ["samples1", "samples2", "samples2_percent", "blend_mode"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "BlehLatentBlend", "display_name": "BlehLatentBlend", "description": "", "python_module": "custom_nodes.ComfyUI-bleh", "category": "latent", "output_node": false}, "BlehModelPatchConditional": {"input": {"required": {"model_default": ["MODEL", {"tooltip": "Fallback model patches, used when start/end/interval do not match."}], "model_matched": ["MODEL", {"tooltip": "Model patches used when start/end/interval match."}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "Start time as sampling percentage (not percentage of steps). Percentages are inclusive."}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "End time as sampling percentage (not percentage of steps). Percentages are inclusive."}], "interval": ["INT", {"default": 1, "min": -999, "max": 999, "tooltip": "Step interval to use model_matched. If positive 3 would mean activate every third step, if negative -3 would mean skip every third step."}], "base_on_default": ["BOOLEAN", {"default": true, "tooltip": "When true, the active set of patches will be applied to model_default, otherwise they will be applied to model_matched."}]}}, "input_order": {"required": ["model_default", "model_matched", "start_percent", "end_percent", "interval", "base_on_default"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehModelPatchConditional", "display_name": "BlehModelPatchConditional", "description": "Experimental model patch that lets you control when other model patches are active.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "bleh/model_patches", "output_node": false}, "BlehPlug": {"input": {}, "input_order": {}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "BlehPlug", "display_name": "BlehPlug", "description": "This node can be used to plug up an input but act like the input was not actually connected. Can be used to prevent something like Use Everywhere nodes from supplying an input without having to set up blacklists or other configuration.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "hacks", "output_node": false}, "BlehRefinerAfter": {"input": {"required": {"time_mode": [["timestep", "percent", "sigma"], {"tooltip": "Controls how start_time is interpreted. Timestep will be 999 at the start of sampling and 0 at the end - it is basically the inverse of the sampling percentage with a multiplier. Percent is the percent of sampling (not steps) and will be 0.0 at the start of sampling and 1.0 at the end. Sigma is an advanced option - if you don't know what it is, you don't need to use it."}], "start_time": ["FLOAT", {"default": 199.0, "min": 0.0, "max": 999.0, "tooltip": "Time the refiner_model will become active. The type of value you enter here will depend on what time_mode is set to."}], "model": ["MODEL", {"tooltip": "Model to patch. This will also be the active model until the start_time condition is met."}], "refiner_model": ["MODEL", {"tooltip": "Model to switch to after the start_time condition is met."}]}}, "input_order": {"required": ["time_mode", "start_time", "model", "refiner_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "BlehRefinerAfter", "display_name": "BlehRefinerAfter", "description": "Allows switching to another model at a certain point in sampling. Only works with models that are closely related as the sampling type and conditioning must match. Can be used to switch to a refiner model near the end of sampling.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "bleh/model_patches", "output_node": false}, "BlehSageAttentionSampler": {"input": {"required": {"sampler": ["SAMPLER"]}, "optional": {"start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "Time the effect becomes active as a percentage of sampling, not steps."}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001, "tooltip": "Time the effect ends (inclusive) as a percentage of sampling, not steps."}], "yaml_parameters": ["STRING", {"tooltip": "Allows specifying custom parameters via YAML. These are mostly passed directly to the SageAttention function with no error checking. Must be empty or a YAML object.", "dynamicPrompts": false, "multiline": true, "defaultInput": true}]}}, "input_order": {"required": ["sampler"], "optional": ["start_percent", "end_percent", "yaml_parameters"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "BlehSageAttentionSampler", "display_name": "BlehSageAttentionSampler", "description": "Sampler wrapper that enables using SageAttention (performance enhancement) while sampling is in progress. Requires SageAttention to be installed into the ComfyUI Python environment.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "sampling/custom_sampling/samplers", "output_node": false}, "BlehSetSamplerPreset": {"input": {"required": {"sampler": ["SAMPLER", {"tooltip": "Sampler to use for this preset."}], "any_input": ["*", {"tooltip": "This input is simply returned as the output. Note: Make sure you connect this node's output to something that supports input connected here."}], "preset": ["INT", {"min": -1, "max": 0, "default": 0, "tooltip": "Preset index to set. If set to -1, no preset assignment will be done. The number of presets can be adjusted, see the README."}], "discard_penultimate_sigma": ["BOOLEAN", {"default": false, "tooltip": "Advanced option to allow discarding the penultimate sigma. May be needed for some samplers like dpmpp_3m_sde - if it seems like the generation has a bunch of noise added at the very last step then you can try enabling this. Note: Cannot be used when override sigmas are attached."}]}, "optional": {"override_sigmas_opt": ["SIGMAS", {"tooltip": "Advanced option that allows overriding the sigmas used for sampling. Note: Cannot be used with discard_penultimate_sigma. Also this cannot control the noise added by the sampler, so if the schedule used by the sampler starts on a different sigma than the override you will likely run into issues."}], "dummy_opt": ["*", {"tooltip": "This input can optionally be connected to any value as a way to force the node to run again on demand. See the README."}]}}, "input_order": {"required": ["sampler", "any_input", "preset", "discard_penultimate_sigma"], "optional": ["override_sigmas_opt", "dummy_opt"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "BlehSetSamplerPreset", "display_name": "BlehSetSamplerPreset", "description": "This node allows setting a custom sampler as a preset that can be selected in nodes that don't support custom sampling (FaceDetailer for example). This node needs to run at least once with any preset changes before actual sampling begins. The any_input input acts as a passthrough so you can do something like pass your model or latent through before you start sampling to ensure the node runs. You can also connect something like an integer or string to the dummy_opt input and change it to force the node to run again. The number of presets can be adjusted (and the whole feature disabled if desired) by setting the environment variable COMFYUI_BLEH_SAMPLER_PRESET_COUNT. WARNING: Since the input and output are wildcards, this bypasses ComfyUI's normal type checking. Make sure you connect the output to something that actually accepts the input type.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "hacks", "output_node": false, "output_tooltips": ["This just returns the value of any_input unchanged. WARNING: ComfyUI's normal typechecking is disabled here, make sure you connect this output to something that allows the input type."]}, "BlehCast": {"input": {"required": {"any_input": ["*", {"forceInput": true, "description": "You can connect any type of input here, but take to ensure that you connect the output from this node to an input that is compatible."}]}}, "input_order": {"required": ["any_input"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "BlehCast", "display_name": "BlehCast", "description": "UNSAFE: This node allows casting its input to any type. NOTE: This does not actually change the data in any way, it just allows you to connect its output to any input. Only use if you know for sure the data is compatible.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "hacks", "output_node": false}, "BlehSetSigmas": {"input": {"required": {"start_index": ["INT", {"default": 0, "tooltip": "Start index for modifying sigmas, zero-based. May be set to a negative value to index from the end, i.e. -1 is the last item, -2 is the penultimate item."}], "mode": [["replace", "insert", "multiply", "add", "subtract", "divide"], {"default": "replace", "tooltip": ""}], "order": [["AB", "BA"], {"default": "AB", "tooltip": "Only applies to add, subtract, multiply and divide operations. Controls the order of operations. For example if order AB then add means A*B, if order BA then add means B*A."}], "commasep_sigmas_b": ["STRING", {"default": "", "tooltip": "Exclusive with sigmas_b. Enter a comma-separated list of sigma values here. For non-insert mode, the input sigmas will be padded with zeros if necessary. Example: start_index=2 (3rd item), mode=replace, input sigmas 4,3,2,1 and you used replace mode with 0.3,0.2,0.1 the output would be 4,3,0.3,0.2,0.1"}]}, "optional": {"sigmas_a": ["SIGMAS", {"forceInput": true, "tooltip": "Optional input as long as commasep_sigmas is not also empty. If not supplied, an initial sigmas list of the appropriate size will be generated filled with zeros."}], "sigmas_b": ["SIGMAS", {"forceInput": true, "tooltip": "Optionally populate this or commasep_sigmas_b but not both."}]}}, "input_order": {"required": ["start_index", "mode", "order", "commasep_sigmas_b"], "optional": ["sigmas_a", "sigmas_b"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "BlehSetSigmas", "display_name": "BlehSetSigmas", "description": "Advanced node that allows manipulating SIGMAS. For example, you can manually enter a list of sigmas, insert some new sigmas into existing SIGMAS, etc.", "python_module": "custom_nodes.ComfyUI-bleh", "category": "sampling/custom_sampling/sigmas", "output_node": false}, "PaletteTransfer": {"input": {"required": {"image": ["IMAGE"], "target_colors": ["COLOR_LIST"], "color_space": [["RGB", "HSV", "LAB"], {"default": "RGB"}], "cluster_method": [["Kmeans", "Mini batch Kmeans"], {"default": "Kmeans"}], "distance_method": [["Euclidean", "Manhattan", "Cosine Similarity", "HSV Distance", "RGB Weighted Distance", "RGB Weighted Similarity"], {"default": "Euclidean"}], "gaussian_blur": ["INT", {"default": 3, "min": 0, "max": 27, "step": 1}]}}, "input_order": {"required": ["image", "target_colors", "color_space", "cluster_method", "distance_method", "gaussian_blur"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PaletteTransfer", "display_name": "Palette Transfer", "description": "", "python_module": "custom_nodes.ComfyUI-Color_Transfer", "category": "Palette Transfer", "output_node": false}, "ColorPalette": {"input": {"required": {"color_palette": ["STRING", {"default": "[(30, 32, 30), (60, 61, 55), (105, 117, 101), (236, 223, 204)]", "multiline": true}]}}, "input_order": {"required": ["color_palette"]}, "output": ["COLOR_LIST"], "output_is_list": [false], "output_name": ["Color palette"], "name": "ColorPalette", "display_name": "Color Palette", "description": "", "python_module": "custom_nodes.ComfyUI-Color_Transfer", "category": "Color Transfer", "output_node": false}, "DepthAnything_V2": {"input": {"required": {"da_model": ["DAMODEL"], "images": ["IMAGE"]}}, "input_order": {"required": ["da_model", "images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "DepthAnything_V2", "display_name": "Depth Anything V2", "description": "\nhttps://depth-anything-v2.github.io\n", "python_module": "custom_nodes.comfyui-depthanythingv2", "category": "DepthAnythingV2", "output_node": false}, "DownloadAndLoadDepthAnythingV2Model": {"input": {"required": {"model": [["depth_anything_v2_vits_fp16.safetensors", "depth_anything_v2_vits_fp32.safetensors", "depth_anything_v2_vitb_fp16.safetensors", "depth_anything_v2_vitb_fp32.safetensors", "depth_anything_v2_vitl_fp16.safetensors", "depth_anything_v2_vitl_fp32.safetensors", "depth_anything_v2_metric_hypersim_vitl_fp32.safetensors", "depth_anything_v2_metric_vkitti_vitl_fp32.safetensors"], {"default": "depth_anything_v2_vitl_fp32.safetensors"}]}}, "input_order": {"required": ["model"]}, "output": ["DAMODEL"], "output_is_list": [false], "output_name": ["da_v2_model"], "name": "DownloadAndLoadDepthAnythingV2Model", "display_name": "DownloadAndLoadDepthAnythingV2Model", "description": "\nModels autodownload to `ComfyUI\\models\\depthanything` from   \nhttps://huggingface.co/Kijai/DepthAnythingV2-safetensors/tree/main   \n   \nfp16 reduces quality by a LOT, not recommended.\n", "python_module": "custom_nodes.comfyui-depthanythingv2", "category": "DepthAnythingV2", "output_node": false}, "easy showLoaderSettingsNames": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["pipe"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["ckpt_name", "vae_name", "lora_name"], "name": "easy showLoaderSettingsNames", "display_name": "Show Loader Settings Names", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Util", "output_node": true}, "easy sliderControl": {"input": {"required": {"mode": [["ipadapter layer weights"]], "model_type": [["sdxl", "sd1"]]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mode", "model_type"], "hidden": ["prompt", "my_unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["layer_weights"], "name": "easy sliderControl", "display_name": "Easy Slider Control", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Util", "output_node": false}, "easy ckptNames": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["*"], "output_is_list": [false], "output_name": ["ckpt_name"], "name": "easy ckptNames", "display_name": "Ckpt Names", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Util", "output_node": false}, "easy controlnetNames": {"input": {"required": {"controlnet_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}}, "input_order": {"required": ["controlnet_name"]}, "output": ["*"], "output_is_list": [false], "output_name": ["controlnet_name"], "name": "easy controlnetNames", "display_name": "ControlNet Names", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Util", "output_node": false}, "easy seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["seed"], "name": "easy seed", "display_name": "EasySeed", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Seed", "output_node": false}, "easy globalSeed": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "mode": ["BOOLEAN", {"default": true, "label_on": "control_before_generate", "label_off": "control_after_generate"}], "action": [["fixed", "increment", "decrement", "randomize", "increment for each node", "decrement for each node", "randomize for each node"]], "last_seed": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value", "mode", "action", "last_seed"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy globalSeed", "display_name": "EasyGlobalSeed", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Seed", "output_node": true}, "easy positive": {"input": {"required": {"positive": ["STRING", {"default": "", "multiline": true, "placeholder": "Positive"}]}}, "input_order": {"required": ["positive"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["positive"], "name": "easy positive", "display_name": "Positive", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy negative": {"input": {"required": {"negative": ["STRING", {"default": "", "multiline": true, "placeholder": "Negative"}]}}, "input_order": {"required": ["negative"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["negative"], "name": "easy negative", "display_name": "Negative", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy wildcards": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false, "placeholder": "(Support Lora Block Weight and wildcard)"}], "Select to add LoRA": [["Select the LoRA to add to the text", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "Select to add Wildcard": [["Select the Wildcard to add to the text", "__example__"]], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "multiline_mode": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["text", "Select to add LoRA", "Select to add Wildcard", "seed", "multiline_mode"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING", "STRING"], "output_is_list": [true, true], "output_name": ["text", "populated_text"], "name": "easy wildcards", "display_name": "Wildcards", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy prompt": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "placeholder": "Prompt"}], "prefix": [["Select the prefix add to the text", "Detailed photo of", "Amateur photo of", "Flicker 2008 photo of", "Fantastic artwork of", "Vintage photograph of", "Unreal 5 render of", "Surrealist painting of", "Professional advertising design of"], {"default": "Select the prefix add to the text"}], "subject": [["\ud83d\udc64Select the subject add to the text", "a man", "a woman", "a young man", "a young woman", "a handsome man", "a beautiful woman", "a monster", "a toy", "a product", "a buddha", "a dog", "a cat"], {"default": "\ud83d\udc64Select the subject add to the text"}], "action": [["\ud83c\udfacSelect the action add to the text", "looking at viewer", "looking away", "looking up", "looking down", "looking back", "open mouth", "half-closed mouth", "closed mouth", "open eyes", "half-closed eyes", "closed eyes", "wink", "standing", "sitting", "lying", "walking", "running", "adjusting hair", "waving", "hand on hip", "crossed arms", "smile", "sad", "angry", "sleepy", "tired", "expressionless"], {"default": "\ud83c\udfacSelect the action add to the text"}], "clothes": [["\ud83d\udc5aSelect the clothes add to the text", "underwear", "clothed", "casual", "dress", "swimsuit", "uniform", "bikini", "one-piece swimsuit", "shirt", "blouse", "sweater", "hoodie", "jeans", "pants", "shorts", "skirt", "vest", "coat", "trenchoat", "jacket", "short dress", "long dress", "off-shoulder", "backless", "hairbow", "hair ribbon", "hair tie", "hairband", "cap", "beanie", "bucket hat", "sun hat", "straw hat", "rice hat", "witch hat", "crown", "chain necklace", "tooth necklace", "choker", "pendant", "bracelet", "watch", "ring", "earring", "anklet", "belt", "scarf", "gloves", "mittens", "socks", "stockings", "tights", "leggings", "boots", "sneakers", "heels", "sandals", "flip-flops", "slippers", "loafers", "mules", "oxfords", "brogues", "derbies", "monk shoes", "chelsea boots", "combat boots", "riding boots", "rain boots", "wedge heels", "platform heels", "stilettos", "block heels", "kitten heels", "moccasins", "espadrilles", "pumps", "flats", "ballet flats", "mary janes", "slingbacks", "peep-toe", "mule sandals", "gladiator sandals", "thong sandals", "slide sandals", "espadrille sandals", "wedge sandals", "platform sandals", "ankle boots", "knee-high boots", "over-the-knee boots", "thigh-high boots", "wellington boots", "chukka boots", "desert boots", "chelsea boots", "hiking boots", "work boots", "snow boots", "rain boots", "riding boots", "cowboy boots", "combat boots", "biker boots", "duck boots", "military boots", "western boots", "ankle strap heels", "block heels", "chunky heels", "cone heels", "kitten heels", "platform heels", "pumps", "slingback heels", "stiletto heels", "wedge heels", "mules", "slingbacks", "slides", "thong sandals", "gladiator sandals", "espadrilles", "wedge sandals", "platform sandals", "ankle boots", "knee-high boots", "over-the-knee boots", "thigh-high boots", "wellington boots", "chukka boots", "desert boots", "chelsea boots", "hiking boots", "work boots", "snow boots", "rain boots", "riding boots", "cowboy boots", "combat boots", "biker boots", "duck boots", "military boots", "western boots", "ankle strap heels", "block heels"], {"default": "\ud83d\udc5aSelect the clothes add to the text"}], "environment": [["\u2600\ufe0fSelect the illumination environment add to the text", "sunshine from window", "neon night, city", "sunset over sea", "golden time", "sci-fi RGB glowing, cyberpunk", "natural lighting", "warm atmosphere, at home, bedroom", "magic lit", "evil, gothic, in a cave", "light and shadow", "shadow from window", "soft studio lighting", "home atmosphere, cozy bedroom illumination", "neon, Wong Kar-wai, warm", "moonlight through curtains", "stormy sky lighting", "underwater glow, deep sea", "foggy forest at dawn", "golden hour in a meadow", "rainbow reflections, neon", "cozy candlelight", "apocalyptic, smoky atmosphere", "red glow, emergency lights", "mystical glow, enchanted forest", "campfire light", "harsh, industrial lighting", "sunrise in the mountains", "evening glow in the desert", "moonlight in a dark alley", "golden glow at a fairground", "midnight in the forest", "purple and pink hues at twilight", "foggy morning, muted light", "candle-lit room, rustic vibe", "fluorescent office lighting", "lightning flash in storm", "night, cozy warm light from fireplace", "ethereal glow, magical forest", "dusky evening on a beach", "afternoon light filtering through trees", "blue neon light, urban street", "red and blue police lights in rain", "aurora borealis glow, arctic landscape", "sunrise through foggy mountains", "golden hour on a city skyline", "mysterious twilight, heavy mist", "early morning rays, forest clearing", "colorful lantern light at festival", "soft glow through stained glass", "harsh spotlight in dark room", "mellow evening glow on a lake", "crystal reflections in a cave", "vibrant autumn lighting in a forest", "gentle snowfall at dusk", "hazy light of a winter morning", "soft, diffused foggy glow", "underwater luminescence", "rain-soaked reflections in city lights", "golden sunlight streaming through trees", "fireflies lighting up a summer night", "glowing embers from a forge", "dim candlelight in a gothic castle", "midnight sky with bright starlight", "warm sunset in a rural village", "flickering light in a haunted house", "desert sunset with mirage-like glow", "golden beams piercing through storm clouds"], {"default": "\u2600\ufe0fSelect the illumination environment add to the text"}], "background": [["\ud83c\udf9e\ufe0fSelect the background add to the text", "cars and people", "a cozy bed and a lamp", "a forest clearing with mist", "a bustling marketplace", "a quiet beach at dusk", "an old, cobblestone street", "a futuristic cityscape", "a tranquil lake with mountains", "a mysterious cave entrance", "bookshelves and plants in the background", "an ancient temple in ruins", "tall skyscrapers and neon signs", "a starry sky over a desert", "a bustling caf\u00e9", "rolling hills and farmland", "a modern living room with a fireplace", "an abandoned warehouse", "a picturesque mountain range", "a starry night sky", "the interior of a futuristic spaceship", "the cluttered workshop of an inventor", "the glowing embers of a bonfire", "a misty lake surrounded by trees", "an ornate palace hall", "a busy street market", "a vast desert landscape", "a peaceful library corner", "bustling train station", "a mystical, enchanted forest", "an underwater reef with colorful fish", "a quiet rural village", "a sandy beach with palm trees", "a vibrant coral reef, teeming with life", "snow-capped mountains in distance", "a stormy ocean, waves crashing", "a rustic barn in open fields", "a futuristic lab with glowing screens", "a dark, abandoned castle", "the ruins of an ancient civilization", "a bustling urban street in rain", "an elegant grand ballroom", "a sprawling field of wildflowers", "a dense jungle with sunlight filtering through", "a dimly lit, vintage bar", "an ice cave with sparkling crystals", "a serene riverbank at sunset", "a narrow alley with graffiti walls", "a peaceful zen garden with koi pond", "a high-tech control room", "a quiet mountain village at dawn", "a lighthouse on a rocky coast", "a rainy street with flickering lights", "a frozen lake with ice formations", "an abandoned theme park", "a small fishing village on a pier", "rolling sand dunes in a desert", "a dense forest with towering redwoods", "a snowy cabin in the mountains", "a mystical cave with bioluminescent plants", "a castle courtyard under moonlight", "a bustling open-air night market", "an old train station with steam", "a tranquil waterfall surrounded by trees", "a vineyard in the countryside", "a quaint medieval village", "a bustling harbor with boats", "a high-tech futuristic mall", "a lush tropical rainforest"], {"default": "\ud83c\udf9e\ufe0fSelect the background add to the text"}], "nsfw": [["\ud83d\udd1eSelect the nsfw add to the text", "nude", "breast", "small breast", "middle breast", "large breast", "nipples", "clothes lift", "pussy juice trail", "pussy juice puddle", "small testicles", "medium testicles", "large testicles", "disembodied penis", "cum on body", "cum inside", "cum outside", "fingering", "handjob", "fellatio", "licking penis", "paizuri", "doggystyle", "cowgirl", "reversed cowgirl", "piledriver", "suspended congress", "full nelson"], {"default": "\ud83d\udd1e\ufe0fSelect the nsfw add to the text"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["text", "prefix", "subject", "action", "clothes", "environment", "background", "nsfw"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy prompt", "display_name": "Prompt", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptList": {"input": {"required": {"prompt_1": ["STRING", {"multiline": true, "default": ""}], "prompt_2": ["STRING", {"multiline": true, "default": ""}], "prompt_3": ["STRING", {"multiline": true, "default": ""}], "prompt_4": ["STRING", {"multiline": true, "default": ""}], "prompt_5": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"optional_prompt_list": ["LIST"]}}, "input_order": {"required": ["prompt_1", "prompt_2", "prompt_3", "prompt_4", "prompt_5"], "optional": ["optional_prompt_list"]}, "output": ["LIST", "STRING"], "output_is_list": [false, true], "output_name": ["prompt_list", "prompt_strings"], "name": "easy promptList", "display_name": "PromptList", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptLine": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "text"}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}, "hidden": {"workflow_prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["prompt", "start_index", "max_rows"], "hidden": ["workflow_prompt", "my_unique_id"]}, "output": ["STRING", "*"], "output_is_list": [true, true], "output_name": ["STRING", "COMBO"], "name": "easy promptLine", "display_name": "PromptLine", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptConcat": {"input": {"required": {}, "optional": {"prompt1": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "prompt2": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": [], "optional": ["prompt1", "prompt2", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy promptConcat", "display_name": "PromptConcat", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy promptReplace": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}, "optional": {"find1": ["STRING", {"multiline": false, "default": ""}], "replace1": ["STRING", {"multiline": false, "default": ""}], "find2": ["STRING", {"multiline": false, "default": ""}], "replace2": ["STRING", {"multiline": false, "default": ""}], "find3": ["STRING", {"multiline": false, "default": ""}], "replace3": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["prompt"], "optional": ["find1", "replace1", "find2", "replace2", "find3", "replace3"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy promptReplace", "display_name": "PromptReplace", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy stylesSelector": {"input": {"required": {"styles": [["fooocus_styles"], {"default": "fooocus_styles"}]}, "optional": {"positive": ["STRING", {"forceInput": true}], "negative": ["STRING", {"forceInput": true}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["styles"], "optional": ["positive", "negative"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "easy stylesSelector", "display_name": "Styles Selector", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy portraitMaster": {"input": {"required": {"shot": [["-", "Head portrait", "Head and shoulders portrait", "Half-length portrait", "Full-length portrait", "Face", "Portrait", "Full body", "Close-up"], {"key": "shot_list"}], "shot_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "gender": [["-", "Man", "Woman"], {"default": "Woman", "key": "gender_list"}], "age": ["INT", {"default": 30, "min": 18, "max": 90, "step": 1, "display": "slider"}], "nationality_1": [["-", "Afghan", "Albanian", "Algerian", "Andorran", "Angolan", "Antiguans Barbudans", "Argentine", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian Herzegovinian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdian", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kiribati", "North Korean", "South Korean", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourgish", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivan", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monegasque", "Mongolian", "Montenegrin", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Ni-Vanuatu", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Palestinian", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "South Sudanese", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Tajikistani", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian Tobagonian", "Tunisian", "Turkish", "Turkmen", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemeni", "Zambian", "Zimbabwean"], {"default": "Chinese", "key": "nationality_list"}], "nationality_2": [["-", "Afghan", "Albanian", "Algerian", "Andorran", "Angolan", "Antiguans Barbudans", "Argentine", "Armenian", "Australian", "Austrian", "Azerbaijani", "Bahamian", "Bahraini", "Bangladeshi", "Barbadian", "Belarusian", "Belgian", "Belizean", "Beninese", "Bhutanese", "Bolivian", "Bosnian Herzegovinian", "Brazilian", "British", "Bruneian", "Bulgarian", "Burkinabe", "Burundian", "Cambodian", "Cameroonian", "Canadian", "Cape Verdian", "Central African", "Chadian", "Chilean", "Chinese", "Colombian", "Comoran", "Congolese", "Costa Rican", "Croatian", "Cuban", "Cypriot", "Czech", "Danish", "Djibouti", "Dominican", "Dutch", "East Timorese", "Ecuadorean", "Egyptian", "Emirian", "Equatorial Guinean", "Eritrean", "Estonian", "Ethiopian", "Fijian", "Filipino", "Finnish", "French", "Gabonese", "Gambian", "Georgian", "German", "Ghanaian", "Greek", "Grenadian", "Guatemalan", "Guinean", "Guyanese", "Haitian", "Herzegovinian", "Honduran", "Hungarian", "Icelander", "Indian", "Indonesian", "Iranian", "Iraqi", "Irish", "Israeli", "Italian", "Ivorian", "Jamaican", "Japanese", "Jordanian", "Kazakhstani", "Kenyan", "Kiribati", "North Korean", "South Korean", "Kuwaiti", "Kyrgyz", "Laotian", "Latvian", "Lebanese", "Liberian", "Libyan", "Liechtensteiner", "Lithuanian", "Luxembourgish", "Macedonian", "Malagasy", "Malawian", "Malaysian", "Maldivan", "Malian", "Maltese", "Marshallese", "Mauritanian", "Mauritian", "Mexican", "Micronesian", "Moldovan", "Monegasque", "Mongolian", "Montenegrin", "Moroccan", "Mosotho", "Motswana", "Mozambican", "Namibian", "Nauruan", "Nepalese", "New Zealander", "Ni-Vanuatu", "Nicaraguan", "Nigerian", "Nigerien", "North Korean", "Northern Irish", "Norwegian", "Omani", "Pakistani", "Palauan", "Palestinian", "Panamanian", "Papua New Guinean", "Paraguayan", "Peruvian", "Polish", "Portuguese", "Qatari", "Romanian", "Russian", "Rwandan", "Saint Lucian", "Salvadoran", "Samoan", "San Marinese", "Sao Tomean", "Saudi", "Scottish", "Senegalese", "Serbian", "Seychellois", "Sierra Leonean", "Singaporean", "Slovakian", "Slovenian", "Solomon Islander", "Somali", "South African", "South Korean", "South Sudanese", "Spanish", "Sri Lankan", "Sudanese", "Surinamer", "Swazi", "Swedish", "Swiss", "Syrian", "Tajikistani", "Tanzanian", "Thai", "Togolese", "Tongan", "Trinidadian Tobagonian", "Tunisian", "Turkish", "Turkmen", "Tuvaluan", "Ugandan", "Ukrainian", "Uruguayan", "Uzbekistani", "Venezuelan", "Vietnamese", "Welsh", "Yemeni", "Zambian", "Zimbabwean"], {"key": "nationality_list"}], "nationality_mix": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "body_type": [["-", "Underweight", "Normal weight", "Overweight", "Obese"], {"key": "body_type_list"}], "body_type_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "model_pose": [["-", "Power Pose", "Walking Pose", "The Over-the-Shoulder Look", "S-curve Pose", "Sitting Pose", "Close-Up Beauty Shot Pose", "Leaning Pose", "Arms Up Pose", "Casual Stroll Pose", "Headshot Pose", "Sitting Cross-Legged Pose", "Back Arch Pose", "Hand-on-Hip Pose", "Gazing into the Distance Pose", "Candid Laugh Pose", "Dynamic Action Pose", "Contrapposto Pose", "High Fashion Pose"], {"key": "model_pose_list"}], "eyes_color": [["-", "Brown", "Blue", "Green", "Hazel", "Gray", "Amber", "Red", "Violet"], {"key": "eyes_color_list"}], "facial_expression": [["-", "Happy", "Sad", "Angry", "Surprised", "Fearful", "Disgusted", "Contemptuous", "Excited", "Nervous", "Confused", "Amused", "Content", "Disappointed", "Bored", "Relieved", "In love", "Shy", "Envious", "Proud", "Cautious", "Serious", "Serene", "Peaceful", "Calm"], {"key": "face_expression_list"}], "facial_expression_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "face_shape": [["-", "Oval", "Round", "Square", "Heart-shaped", "Long", "Rectangle", "Triangle", "Inverted Triangle", "Pear-shaped", "Oblong", "Square Round", "Square Oval"], {"key": "face_shape_list"}], "face_shape_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "facial_asymmetry": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "hair_style": [["-", "Asymmetrical cut", "Blunt cut", "Bob cut", "Braided bob", "Buzz cut", "Choppy cut", "Curly bob", "Curtain bangs", "Faux hawk", "Feathered cut", "French bob", "Layered cut", "Long bob", "Mohawk", "Pixie cut", "Shag cut", "Side-swept bangs", "Textured cut", "Undercut", "Wavy bob", "Faux hawk short pixie", "Brave short haircut with shaved sides", "Tapered haricut wuth shaved side", "Stacked bob", "Lemonade braids", "Middle part ponytails", "Stitch braids", "Deep side part", "French braids", "Box braids", "Two dutch braids", "Wavy cut with curtains bangs", "Right side shaved", "Sweeping pixie", "Smooth lob", "Long pixie", "Sideswept pixie", "Italian bob", "Shullet"], {"key": "hair_style_list"}], "hair_color": [["-", "Black", "Brown", "Blonde", "Red", "Auburn", "Chestnut", "Gray", "White", "Salt and pepper"], {"key": "hair_color_list"}], "disheveled": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "beard": [["-", "Stubble Beard", "Goatee", "Full Beard", "Van Dyke Beard", "Soul Patch", "Garibaldi Beard", "Mutton Chops", "Circle Beard", "Corporate Beard", "Balbo Beard", "Ducktail Beard", "Chinstrap Beard", "Anchor Beard", "Chevron Mustache", "Horseshoe Mustache", "Handlebar Mustache", "Imperial Mustache", "Pencil Mustache", "Friendly Mutton Chops", "Zappa Mustache"], {"key": "beard_list"}], "skin_details": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "skin_pores": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "dimples": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "freckles": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "moles": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "skin_imperfections": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "skin_acne": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "tanned_skin": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "eyes_details": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "iris_details": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "circular_iris": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "circular_pupil": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "light_type": [["-", "Natural sunlight", "Soft ambient light", "Harsh sunlight", "Overcast sky", "Sunset glow", "Sunrise warmth", "Twilight hues", "Candlelight", "Incandescent lighting", "Fluorescent lighting", "Moonlight", "Dappled sunlight", "Backlit silhouette", "Spotlight", "Rim lighting", "Firelight", "City streetlights", "Studio lighting", "Lantern light", "Tungsten lighting", "Cloudy day diffused light", "Skylight", "Golden hour light", "Blue hour light", "Flash photography", "Stage lighting", "Neon lights", "Torchlight", "Softbox lighting", "Rim light", "Lightning", "Abstract light patterns"], {"key": "light_type_list"}], "light_direction": [["-", "top", "bottom", "right", "left", "front", "rear", "top-right", "top-left", "bottom-right", "bottom-left"], {"key": "light_direction_list"}], "light_weight": ["FLOAT", {"default": 0, "step": 0.05, "min": 0, "max": 1.95, "display": "slider"}], "photorealism_improvement": [["enable", "disable"]], "prompt_start": ["STRING", {"multiline": true, "default": "raw photo, (realistic:1.5)"}], "prompt_additional": ["STRING", {"multiline": true, "default": ""}], "prompt_end": ["STRING", {"multiline": true, "default": ""}], "negative_prompt": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["shot", "shot_weight", "gender", "age", "nationality_1", "nationality_2", "nationality_mix", "body_type", "body_type_weight", "model_pose", "eyes_color", "facial_expression", "facial_expression_weight", "face_shape", "face_shape_weight", "facial_asymmetry", "hair_style", "hair_color", "disheveled", "beard", "skin_details", "skin_pores", "dimples", "freckles", "moles", "skin_imperfections", "skin_acne", "tanned_skin", "eyes_details", "iris_details", "circular_iris", "circular_pupil", "light_type", "light_direction", "light_weight", "photorealism_improvement", "prompt_start", "prompt_additional", "prompt_end", "negative_prompt"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "easy portraitMaster", "display_name": "Portrait Master", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Prompt", "output_node": false}, "easy fullLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt", "None"]], "config_name": [["Default", "anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"], {"default": "Default"}], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "512 x 512"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "vae_override": ["VAE"], "optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"], "a1111_prompt_style": ["BOOLEAN", {"default": false}]}, "hidden": {"video_length": "INT", "prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "config_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "positive_token_normalization", "positive_weight_interpretation", "negative", "negative_token_normalization", "negative_weight_interpretation", "batch_size"], "optional": ["model_override", "clip_override", "vae_override", "optional_lora_stack", "optional_controlnet_stack", "a1111_prompt_style"], "hidden": ["video_length", "prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE", "CLIP", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["pipe", "model", "vae", "clip", "positive", "negative", "latent"], "name": "easy fullLoader", "display_name": "EasyLoader (Full)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy a1111Loader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "512 x 512"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"], "a1111_prompt_style": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack", "optional_controlnet_stack", "a1111_prompt_style"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy a1111Loader", "display_name": "EasyLoader (A1111)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy comfyLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "clip_skip": ["INT", {"default": -2, "min": -24, "max": 0, "step": 1}], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "512 x 512"}], "empty_latent_width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_skip", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack", "optional_controlnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy comfyLoader", "display_name": "EasyLoader (Comfy)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy svdLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "clip_name": [["None", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "init_image": ["IMAGE"], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 576"}], "empty_latent_width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "video_frames": ["INT", {"default": 14, "min": 1, "max": 4096}], "motion_bucket_id": ["INT", {"default": 127, "min": 1, "max": 1023}], "fps": ["INT", {"default": 6, "min": 1, "max": 1024}], "augmentation_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"optional_positive": ["STRING", {"default": "", "multiline": true}], "optional_negative": ["STRING", {"default": "", "multiline": true}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "clip_name", "init_image", "resolution", "empty_latent_width", "empty_latent_height", "video_frames", "motion_bucket_id", "fps", "augmentation_level"], "optional": ["optional_positive", "optional_negative"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy svdLoader", "display_name": "EasyLoader (SVD)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy sv3dLoader": {"input": {"required": {"ckpt_name": [[]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "init_image": ["IMAGE"], "empty_latent_width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 21, "min": 1, "max": 4096}], "interp_easing": [["linear", "ease_in", "ease_out", "ease_in_out"], {"default": "linear"}], "easing_mode": [["azimuth", "elevation", "custom"], {"default": "azimuth"}]}, "optional": {"scheduler": ["STRING", {"default": "", "multiline": true}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "init_image", "empty_latent_width", "empty_latent_height", "batch_size", "interp_easing", "easing_mode"], "optional": ["scheduler"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "STRING"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "interp_log"], "name": "easy sv3dLoader", "display_name": "EasyLoader (SV3D)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy zero123Loader": {"input": {"required": {"ckpt_name": [["Zero/stable_zero123.ckpt", "stable_zero123.ckpt"]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "init_image": ["IMAGE"], "empty_latent_width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}], "elevation": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0}], "azimuth": ["FLOAT", {"default": 0.0, "min": -180.0, "max": 180.0}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "init_image", "empty_latent_width", "empty_latent_height", "batch_size", "elevation", "azimuth"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy zero123Loader", "display_name": "EasyLoader (Zero123)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy cascadeLoader": {"input": {"required": {"stage_c": [["IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "stage_b": [["IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "stage_a": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "clip_name": [["None", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 1024"}], "empty_latent_width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "compression": ["INT", {"default": 42, "min": 32, "max": 64, "step": 1}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"optional_lora_stack": ["LORA_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["stage_c", "stage_b", "stage_a", "clip_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "compression", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "LATENT", "VAE"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "model_c", "latent_c", "vae"], "name": "easy cascadeLoader", "display_name": "EasyCascadeLoader", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy kolorsLoader": {"input": {"required": {"unet_name": [["IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors"]], "vae_name": [["ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "chatglm3_name": [[]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 576"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"model_override": ["MODEL"], "vae_override": ["VAE"], "optional_lora_stack": ["LORA_STACK"], "auto_clean_gpu": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["unet_name", "vae_name", "chatglm3_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["model_override", "vae_override", "optional_lora_stack", "auto_clean_gpu"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy kolorsLoader", "display_name": "EasyLoader (Kolors)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy fluxLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt", "None"]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 1024"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "vae_override": ["VAE"], "optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "batch_size"], "optional": ["model_override", "clip_override", "vae_override", "optional_lora_stack", "optional_controlnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy fluxLoader", "display_name": "EasyLoader (Flux)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy hunyuanDiTLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "1024 x 1024"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "optional_controlnet_stack": ["CONTROL_NET_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "lora_name", "lora_model_strength", "lora_clip_strength", "resolution", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack", "optional_controlnet_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy hunyuanDiTLoader", "display_name": "EasyLoader (HunyuanDiT)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy pixArtLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "model_name": [["PixArtMS_XL_2", "PixArtMS_Sigma_XL_2", "PixArtMS_Sigma_XL_2_900M", "PixArtMS_Sigma_XL_2_2K", "PixArt_XL_2", "ControlPixArtHalf", "ControlPixArtMSHalf"]], "vae_name": [["ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "t5_type": [["sd3"]], "clip_name": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "padding": ["INT", {"default": 1, "min": 1, "max": 300}], "t5_name": [[]], "device": [["auto", "cpu", "gpu"], {"default": "cpu"}], "dtype": [["default", "auto (comfy)", "FP32", "FP16", "BF16"]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "lora_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "ratio": [["custom", "0.25", "0.26", "0.27", "0.28", "0.32", "0.33", "0.35", "0.40", "0.42", "0.48", "0.50", "0.52", "0.57", "0.60", "0.68", "0.72", "0.78", "0.82", "0.88", "0.94", "1.00", "1.07", "1.13", "1.21", "1.29", "1.38", "1.46", "1.67", "1.75", "2.00", "2.09", "2.40", "2.50", "2.89", "3.00", "3.11", "3.62", "3.75", "3.88", "4.00"], {"default": "1.00"}], "empty_latent_width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}, "optional": {"optional_lora_stack": ["LORA_STACK"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "model_name", "vae_name", "t5_type", "clip_name", "padding", "t5_name", "device", "dtype", "lora_name", "lora_model_strength", "ratio", "empty_latent_width", "empty_latent_height", "positive", "negative", "batch_size"], "optional": ["optional_lora_stack"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy pixArtLoader", "display_name": "EasyLoader (PixArt)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy mochiLoader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "vae_name": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"], {"default": "mochi_vae.safetensors"}], "positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"], {"default": "width x height (custom)"}], "empty_latent_width": ["INT", {"default": 848, "min": 64, "max": 16384, "step": 8}], "empty_latent_height": ["INT", {"default": 480, "min": 64, "max": 16384, "step": 8}], "length": ["INT", {"default": 25, "min": 7, "max": 16384, "step": 6}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096, "tooltip": "The number of latent images in the batch."}]}, "optional": {"model_override": ["MODEL"], "clip_override": ["CLIP"], "vae_override": ["VAE"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name", "vae_name", "positive", "negative", "resolution", "empty_latent_width", "empty_latent_height", "length", "batch_size"], "optional": ["model_override", "clip_override", "vae_override"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "model", "vae"], "name": "easy mochiLoader", "display_name": "EasyLoader (Mochi)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy loraStack": {"input": {"required": {"toggle": ["BOOLEAN", {"label_on": "enabled", "label_off": "disabled"}], "mode": [["simple", "advanced"]], "num_loras": ["INT", {"default": 1, "min": 1, "max": 10}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "lora_1_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_1_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_1_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_1_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_2_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_2_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_3_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_3_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_4_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_4_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_5_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_5_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_6_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_6_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_7_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_7_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_8_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_8_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_9_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_9_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"default": "None"}], "lora_10_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_10_clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["toggle", "mode", "num_loras"], "optional": ["optional_lora_stack", "lora_1_name", "lora_1_strength", "lora_1_model_strength", "lora_1_clip_strength", "lora_2_name", "lora_2_strength", "lora_2_model_strength", "lora_2_clip_strength", "lora_3_name", "lora_3_strength", "lora_3_model_strength", "lora_3_clip_strength", "lora_4_name", "lora_4_strength", "lora_4_model_strength", "lora_4_clip_strength", "lora_5_name", "lora_5_strength", "lora_5_model_strength", "lora_5_clip_strength", "lora_6_name", "lora_6_strength", "lora_6_model_strength", "lora_6_clip_strength", "lora_7_name", "lora_7_strength", "lora_7_model_strength", "lora_7_clip_strength", "lora_8_name", "lora_8_strength", "lora_8_model_strength", "lora_8_clip_strength", "lora_9_name", "lora_9_strength", "lora_9_model_strength", "lora_9_clip_strength", "lora_10_name", "lora_10_strength", "lora_10_model_strength", "lora_10_clip_strength"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["lora_stack"], "name": "easy loraStack", "display_name": "EasyLoraStack", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetStack": {"input": {"required": {"toggle": ["BOOLEAN", {"label_on": "enabled", "label_off": "disabled"}], "mode": [["simple", "advanced"]], "num_controlnet": ["INT", {"default": 1, "min": 1, "max": 3}]}, "optional": {"optional_controlnet_stack": ["CONTROL_NET_STACK"], "controlnet_1": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"], {"default": "None"}], "controlnet_1_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weight_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "controlnet_2": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"], {"default": "None"}], "controlnet_2_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weight_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_2": ["IMAGE"], "controlnet_3": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"], {"default": "None"}], "controlnet_3_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weight_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_3": ["IMAGE"]}}, "input_order": {"required": ["toggle", "mode", "num_controlnet"], "optional": ["optional_controlnet_stack", "controlnet_1", "controlnet_1_strength", "start_percent_1", "end_percent_1", "scale_soft_weight_1", "image_1", "controlnet_2", "controlnet_2_strength", "start_percent_2", "end_percent_2", "scale_soft_weight_2", "image_2", "controlnet_3", "controlnet_3_strength", "start_percent_3", "end_percent_3", "scale_soft_weight_3", "image_3"]}, "output": ["CONTROL_NET_STACK"], "output_is_list": [false], "output_name": ["controlnet_stack"], "name": "easy controlnetStack", "display_name": "EasyControlnetStack", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetLoader": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}, "optional": {"control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "scale_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["pipe", "image", "control_net_name"], "optional": ["control_net", "strength", "scale_soft_weights"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["pipe", "positive", "negative"], "name": "easy controlnetLoader", "display_name": "EasyControlnet", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetLoaderADV": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}, "optional": {"control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["pipe", "image", "control_net_name"], "optional": ["control_net", "strength", "start_percent", "end_percent", "scale_soft_weights"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["pipe", "positive", "negative"], "name": "easy controlnetLoaderADV", "display_name": "EasyControlnet (Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy controlnetLoader++": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}, "optional": {"control_net": ["CONTROL_NET"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "scale_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "union_type": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]]}}, "input_order": {"required": ["pipe", "image", "control_net_name"], "optional": ["control_net", "strength", "start_percent", "end_percent", "scale_soft_weights", "union_type"]}, "output": ["PIPE_LINE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["pipe", "positive", "negative"], "name": "easy controlnetLoader++", "display_name": "EasyControlnet++", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy LLLiteLoader": {"input": {"required": {"model": ["MODEL"], "model_name": [[]], "cond_image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "steps": ["INT", {"default": 0, "min": 0, "max": 200, "step": 1}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "end_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["model", "model_name", "cond_image", "strength", "steps", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "easy LLLiteLoader", "display_name": "EasyLLLite", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Loaders", "output_node": false}, "easy loraStackApply": {"input": {"required": {"lora_stack": ["LORA_STACK"], "model": ["MODEL"]}, "optional": {"optional_clip": ["CLIP"]}}, "input_order": {"required": ["lora_stack", "model"], "optional": ["optional_clip"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["model", "clip"], "name": "easy loraStackApply", "display_name": "Easy Apply LoraStack", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy controlnetStackApply": {"input": {"required": {"controlnet_stack": ["CONTROL_NET_STACK"], "pipe": ["PIPE_LINE"]}, "optional": {}}, "input_order": {"required": ["controlnet_stack", "pipe"], "optional": []}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy controlnetStackApply", "display_name": "Easy Apply CnetStack", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApply": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION", "FACEID", "FACEID PLUS - SD1.5 only", "FACEID PLUS KOLORS", "FACEID PLUS V2", "FACEID PORTRAIT (style transfer)", "FACEID PORTRAIT UNNORM - SDXL only (strong)"]], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"], {"default": "CUDA"}], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}], "use_tiled": ["BOOLEAN", {"default": false}]}, "optional": {"attn_mask": ["MASK"], "optional_ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "image", "preset", "lora_strength", "provider", "weight", "weight_faceidv2", "start_at", "end_at", "cache_mode", "use_tiled"], "optional": ["attn_mask", "optional_ipadapter"]}, "output": ["MODEL", "IMAGE", "MASK", "IPADAPTER"], "output_is_list": [false, false, false, false], "output_name": ["model", "images", "masks", "ipadapter"], "name": "easy ipadapterApply", "display_name": "Easy Apply IPAdapter", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyADV": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION", "FACEID", "FACEID PLUS - SD1.5 only", "FACEID PLUS KOLORS", "FACEID PLUS V2", "FACEID PORTRAIT (style transfer)", "FACEID PORTRAIT UNNORM - SDXL only (strong)"]], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"], {"default": "CUDA"}], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}], "use_tiled": ["BOOLEAN", {"default": false}], "use_batch": ["BOOLEAN", {"default": false}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "optional_ipadapter": ["IPADAPTER"], "layer_weights": ["STRING", {"default": "", "multiline": true, "placeholder": "Mad Scientist Layer Weights"}]}}, "input_order": {"required": ["model", "image", "preset", "lora_strength", "provider", "weight", "weight_faceidv2", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling", "cache_mode", "use_tiled", "use_batch", "sharpening"], "optional": ["image_negative", "attn_mask", "clip_vision", "optional_ipadapter", "layer_weights"]}, "output": ["MODEL", "IMAGE", "MASK", "IPADAPTER"], "output_is_list": [false, false, false, false], "output_name": ["model", "images", "masks", "ipadapter"], "name": "easy ipadapterApplyADV", "display_name": "Easy Apply IPAdapter (Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyFaceIDKolors": {"input": {"required": {"model": ["MODEL"], "image": ["IMAGE"], "preset": [["FACEID PLUS KOLORS"], {"default": "FACEID PLUS KOLORS"}], "lora_strength": ["FLOAT", {"default": 0.6, "min": 0, "max": 1, "step": 0.01}], "provider": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML"], {"default": "CUDA"}], "weight": ["FLOAT", {"default": 0.8, "min": -1, "max": 3, "step": 0.05}], "weight_faceidv2": ["FLOAT", {"default": 1.0, "min": -1, "max": 5.0, "step": 0.05}], "weight_kolors": ["FLOAT", {"default": 0.8, "min": -1, "max": 5.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}], "use_tiled": ["BOOLEAN", {"default": false}], "use_batch": ["BOOLEAN", {"default": false}], "sharpening": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "optional_ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "image", "preset", "lora_strength", "provider", "weight", "weight_faceidv2", "weight_kolors", "weight_type", "combine_embeds", "start_at", "end_at", "embeds_scaling", "cache_mode", "use_tiled", "use_batch", "sharpening"], "optional": ["image_negative", "attn_mask", "clip_vision", "optional_ipadapter"]}, "output": ["MODEL", "IMAGE", "MASK", "IPADAPTER"], "output_is_list": [false, false, false, false], "output_name": ["model", "images", "masks", "ipadapter"], "name": "easy ipadapterApplyFaceIDKolors", "display_name": "Easy Apply IPAdapter (FaceID Kolors)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyEncoder": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "image1": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION"]], "num_embeds": ["INT", {"default": 2, "min": 1, "max": 4}]}, "optional": {"image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"], "mask1": ["MASK"], "weight1": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "mask2": ["MASK"], "weight2": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "mask3": ["MASK"], "weight3": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "mask4": ["MASK"], "weight4": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "combine_method": [["concat", "add", "subtract", "average", "norm average", "max", "min"]], "optional_ipadapter": ["IPADAPTER"], "pos_embeds": ["EMBEDS"], "neg_embeds": ["EMBEDS"]}}, "input_order": {"required": ["model", "clip_vision", "image1", "preset", "num_embeds"], "optional": ["image2", "image3", "image4", "mask1", "weight1", "mask2", "weight2", "mask3", "weight3", "mask4", "weight4", "combine_method", "optional_ipadapter", "pos_embeds", "neg_embeds"]}, "output": ["MODEL", "CLIP_VISION", "IPADAPTER", "EMBEDS", "EMBEDS"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "clip_vision", "ipadapter", "pos_embed", "neg_embed"], "name": "easy ipadapterApplyEncoder", "display_name": "Easy Apply IPAdapter (Encoder)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyEmbeds": {"input": {"required": {"model": ["MODEL"], "clip_vision": ["CLIP_VISION"], "ipadapter": ["IPADAPTER"], "pos_embed": ["EMBEDS"], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]]}, "optional": {"neg_embed": ["EMBEDS"], "attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "clip_vision", "ipadapter", "pos_embed", "weight", "weight_type", "start_at", "end_at", "embeds_scaling"], "optional": ["neg_embed", "attn_mask"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "easy ipadapterApplyEmbeds", "display_name": "Easy Apply IPAdapter (Embeds)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyRegional": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "positive": ["STRING", {"default": "", "placeholder": "positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "negative", "multiline": true}], "image_weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 3.0, "step": 0.05}], "prompt_weight": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "weight_type": [["linear", "ease in", "ease out", "ease in-out", "reverse in-out", "weak input", "weak output", "weak middle", "strong middle", "style transfer", "composition", "strong style transfer", "style and composition", "style transfer precise"]], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"mask": ["MASK"], "optional_ipadapter_params": ["IPADAPTER_PARAMS"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image", "positive", "negative", "image_weight", "prompt_weight", "weight_type", "start_at", "end_at"], "optional": ["mask", "optional_ipadapter_params"], "hidden": ["prompt", "my_unique_id"]}, "output": ["PIPE_LINE", "IPADAPTER_PARAMS", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "ipadapter_params", "positive", "negative"], "name": "easy ipadapterApplyRegional", "display_name": "Easy Apply IPAdapter (Regional)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterApplyFromParams": {"input": {"required": {"model": ["MODEL"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION"]], "ipadapter_params": ["IPADAPTER_PARAMS"], "combine_embeds": [["concat", "add", "subtract", "average", "norm average", "max", "min"]], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "insightface only"}]}, "optional": {"optional_ipadapter": ["IPADAPTER"], "image_negative": ["IMAGE"]}}, "input_order": {"required": ["model", "preset", "ipadapter_params", "combine_embeds", "embeds_scaling", "cache_mode"], "optional": ["optional_ipadapter", "image_negative"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "easy ipadapterApplyFromParams", "display_name": "Easy Apply IPAdapter (From Params)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy ipadapterStyleComposition": {"input": {"required": {"model": ["MODEL"], "image_style": ["IMAGE"], "preset": [["LIGHT - SD1.5 only (low strength)", "STANDARD (medium strength)", "VIT-G (medium strength)", "PLUS (high strength)", "PLUS (kolors genernal)", "REGULAR - FLUX and SD3.5 only (high strength)", "PLUS FACE (portraits)", "FULL FACE - SD1.5 only (portraits stronger)", "COMPOSITION"]], "weight_style": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "weight_composition": ["FLOAT", {"default": 1.0, "min": -1, "max": 5, "step": 0.05}], "expand_style": ["BOOLEAN", {"default": false}], "combine_embeds": [["concat", "add", "subtract", "average", "norm average"], {"default": "average"}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "embeds_scaling": [["V only", "K+V", "K+V w/ C penalty", "K+mean(V) w/ C penalty"]], "cache_mode": [["insightface only", "clip_vision only", "ipadapter only", "all", "none"], {"default": "all"}]}, "optional": {"image_composition": ["IMAGE"], "image_negative": ["IMAGE"], "attn_mask": ["MASK"], "clip_vision": ["CLIP_VISION"], "optional_ipadapter": ["IPADAPTER"]}}, "input_order": {"required": ["model", "image_style", "preset", "weight_style", "weight_composition", "expand_style", "combine_embeds", "start_at", "end_at", "embeds_scaling", "cache_mode"], "optional": ["image_composition", "image_negative", "attn_mask", "clip_vision", "optional_ipadapter"]}, "output": ["MODEL", "IPADAPTER"], "output_is_list": [false, false], "output_name": ["model", "ipadapter"], "name": "easy ipadapterStyleComposition", "display_name": "Easy Apply IPAdapter (StyleComposition)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy instantIDApply": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "instantid_file": [[]], "insightface": [["CPU", "CUDA", "ROCM"]], "control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "cn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cn_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "noise": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_kps": ["IMAGE"], "mask": ["MASK"], "control_net": ["CONTROL_NET"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image", "instantid_file", "insightface", "control_net_name", "cn_strength", "cn_soft_weights", "weight", "start_at", "end_at", "noise"], "optional": ["image_kps", "mask", "control_net"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "model", "positive", "negative"], "name": "easy instantIDApply", "display_name": "Easy Apply InstantID", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy instantIDApplyADV": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "instantid_file": [[]], "insightface": [["CPU", "CUDA", "ROCM"]], "control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "cn_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "cn_soft_weights": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "weight": ["FLOAT", {"default": 0.8, "min": 0.0, "max": 5.0, "step": 0.01}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "noise": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"image_kps": ["IMAGE"], "mask": ["MASK"], "control_net": ["CONTROL_NET"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image", "instantid_file", "insightface", "control_net_name", "cn_strength", "cn_soft_weights", "weight", "start_at", "end_at", "noise"], "optional": ["image_kps", "mask", "control_net", "positive", "negative"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "model", "positive", "negative"], "name": "easy instantIDApplyADV", "display_name": "Easy Apply InstantID (Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy pulIDApply": {"input": {"required": {"model": ["MODEL"], "pulid_file": [[]], "insightface": [["CPU", "CUDA", "ROCM"]], "image": ["IMAGE"], "method": [["fidelity", "style", "neutral"]], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 5.0, "step": 0.05}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "pulid_file", "insightface", "image", "method", "weight", "start_at", "end_at"], "optional": ["attn_mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "easy pulIDApply", "display_name": "Easy Apply PuLID", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy pulIDApplyADV": {"input": {"required": {"model": ["MODEL"], "pulid_file": [[]], "insightface": [["CPU", "CUDA", "ROCM"]], "image": ["IMAGE"], "weight": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 5.0, "step": 0.05}], "projection": [["ortho_v2", "ortho", "none"], {"default": "ortho_v2"}], "fidelity": ["INT", {"default": 8, "min": 0, "max": 32, "step": 1}], "noise": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.1}], "start_at": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_at": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"attn_mask": ["MASK"]}}, "input_order": {"required": ["model", "pulid_file", "insightface", "image", "weight", "projection", "fidelity", "noise", "start_at", "end_at"], "optional": ["attn_mask"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "easy pulIDApplyADV", "display_name": "Easy Apply PuLID (Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy styleAlignedBatchAlign": {"input": {"required": {"model": ["MODEL"], "share_norm": [["both", "group", "layer", "disabled"]], "share_attn": [["q+k", "q+k+v", "disabled"]], "scale": ["FLOAT", {"default": 1, "min": 0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["model", "share_norm", "share_attn", "scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "easy styleAlignedBatchAlign", "display_name": "Easy Apply StyleAlign", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy icLightApply": {"input": {"required": {"mode": [["Foreground", "Foreground&Background"]], "model": ["MODEL"], "image": ["IMAGE"], "vae": ["VAE"], "lighting": [["None", "Left Light", "Right Light", "Top Light", "Bottom Light", "Circle Light"], {"default": "None"}], "source": [["Use Background Image", "Use Flipped Background Image", "Left Light", "Right Light", "Top Light", "Bottom Light", "Ambient"], {"default": "Use Background Image"}], "remove_bg": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mode", "model", "image", "vae", "lighting", "source", "remove_bg"]}, "output": ["MODEL", "IMAGE"], "output_is_list": [false, false], "output_name": ["model", "lighting_image"], "name": "easy icLightApply", "display_name": "Easy Apply ICLight", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Adapter", "output_node": false}, "easy applyFooocusInpaint": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT"], "head": [["fooocus_inpaint_head"]], "patch": [["inpaint_v26 (1.32GB)", "inpaint_v25 (2.58GB)", "inpaint (1.32GB)"]]}}, "input_order": {"required": ["model", "latent", "head", "patch"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "easy applyFooocusInpaint", "display_name": "Easy Apply Fooocus Inpaint", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Inpaint", "output_node": false}, "easy applyBrushNet": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "mask": ["MASK"], "brushnet": [[]], "dtype": [["float16", "bfloat16", "float32", "float64"]], "scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0}], "start_at": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at": ["INT", {"default": 10000, "min": 0, "max": 10000}]}}, "input_order": {"required": ["pipe", "image", "mask", "brushnet", "dtype", "scale", "start_at", "end_at"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy applyBrushNet", "display_name": "Easy Apply BrushNet", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Inpaint", "output_node": false}, "easy applyPowerPaint": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "mask": ["MASK"], "powerpaint_model": [[]], "powerpaint_clip": [[]], "dtype": [["float16", "bfloat16", "float32", "float64"]], "fitting": ["FLOAT", {"default": 1.0, "min": 0.3, "max": 1.0}], "function": [["text guided", "shape guided", "object removal", "context aware", "image outpainting"]], "scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0}], "start_at": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at": ["INT", {"default": 10000, "min": 0, "max": 10000}], "save_memory": [["none", "auto", "max"]]}}, "input_order": {"required": ["pipe", "image", "mask", "powerpaint_model", "powerpaint_clip", "dtype", "fitting", "function", "scale", "start_at", "end_at", "save_memory"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy applyPowerPaint", "display_name": "Easy Apply PowerPaint", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Inpaint", "output_node": false}, "easy applyInpaint": {"input": {"required": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "mask": ["MASK"], "inpaint_mode": [["normal", "fooocus_inpaint", "brushnet_random", "brushnet_segmentation", "powerpaint"]], "encode": [["none", "vae_encode_inpaint", "inpaint_model_conditioning", "different_diffusion"], {"default": "none"}], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}], "dtype": [["float16", "bfloat16", "float32", "float64"]], "fitting": ["FLOAT", {"default": 1.0, "min": 0.3, "max": 1.0}], "function": [["text guided", "shape guided", "object removal", "context aware", "image outpainting"]], "scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0}], "start_at": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at": ["INT", {"default": 10000, "min": 0, "max": 10000}]}, "optional": {"noise_mask": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["pipe", "image", "mask", "inpaint_mode", "encode", "grow_mask_by", "dtype", "fitting", "function", "scale", "start_at", "end_at"], "optional": ["noise_mask"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy applyInpaint", "display_name": "Easy Apply Inpaint", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Inpaint", "output_node": false}, "easy preSampling": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image_to_latent", "latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSampling", "display_name": "PreSampling", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingAdvanced": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps", "gits"]], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 0, "max": 10000}], "add_noise": [["enable (CPU)", "enable (GPU=A1111)", "disable"], {"default": "enable (CPU)"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "return_with_leftover_noise": [["disable", "enable"]]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "scheduler", "start_at_step", "end_at_step", "add_noise", "seed", "return_with_leftover_noise"], "optional": ["image_to_latent", "latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingAdvanced", "display_name": "PreSampling (Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingNoiseIn": {"input": {"required": {"pipe": ["PIPE_LINE"], "factor": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"optional_noise_seed": ["INT", {"forceInput": true}], "optional_latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "factor", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["optional_noise_seed", "optional_latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingNoiseIn", "display_name": "PreSampling (NoiseIn)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingCustom": {"input": {"required": {"pipe": ["PIPE_LINE"], "guider": [["CFG", "DualCFG", "Basic", "IP2P+CFG", "IP2P+DualCFG", "IP2P+Basic"], {"default": "Basic"}], "cfg": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0}], "cfg_negative": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0", "inversed_euler"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "karrasADV", "exponentialADV", "polyExponential", "sdturbo", "vp", "alignYourSteps", "gits"]], "coeff": ["FLOAT", {"default": 1.2, "min": 0.8, "max": 1.5, "step": 0.05}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "sigma_max": ["FLOAT", {"default": 14.614642, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "sigma_min": ["FLOAT", {"default": 0.0291675, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "rho": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.01, "round": false}], "beta_d": ["FLOAT", {"default": 19.9, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "beta_min": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1000.0, "step": 0.01, "round": false}], "eps_s": ["FLOAT", {"default": 0.001, "min": 0.0, "max": 1.0, "step": 0.0001, "round": false}], "flip_sigmas": ["BOOLEAN", {"default": false}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "add_noise": [["enable (CPU)", "enable (GPU=A1111)", "disable"], {"default": "enable (CPU)"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"], "optional_sampler": ["SAMPLER"], "optional_sigmas": ["SIGMAS"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "guider", "cfg", "cfg_negative", "sampler_name", "scheduler", "coeff", "steps", "sigma_max", "sigma_min", "rho", "beta_d", "beta_min", "eps_s", "flip_sigmas", "denoise", "add_noise", "seed"], "optional": ["image_to_latent", "latent", "optional_sampler", "optional_sigmas"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingCustom", "display_name": "PreSampling (Custom)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingSdTurbo": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 1, "min": 1, "max": 10}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "eta": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "upscale_ratio": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 16.0, "step": 0.01, "round": false}], "start_step": ["INT", {"default": 5, "min": 0, "max": 1000, "step": 1}], "end_step": ["INT", {"default": 15, "min": 0, "max": 1000, "step": 1}], "upscale_n_step": ["INT", {"default": 3, "min": 0, "max": 1000, "step": 1}], "unsharp_kernel_size": ["INT", {"default": 3, "min": 1, "max": 21, "step": 1}], "unsharp_sigma": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "unsharp_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01, "round": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "eta", "s_noise", "upscale_ratio", "start_step", "end_step", "upscale_n_step", "unsharp_kernel_size", "unsharp_sigma", "unsharp_strength", "seed"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingSdTurbo", "display_name": "PreSampling (SDTurbo)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingDynamicCFG": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "cfg_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "cfg_scale_min": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.5}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent": ["IMAGE"], "latent": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "steps", "cfg", "cfg_mode", "cfg_scale_min", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image_to_latent", "latent"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingDynamicCFG", "display_name": "PreSampling (DynamicCFG)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingCascade": {"input": {"required": {"pipe": ["PIPE_LINE"], "encode_vae_name": [["None", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "decode_vae_name": [["None", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"default": "euler_ancestral"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "simple"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent_c": ["IMAGE"], "latent_c": ["LATENT"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "encode_vae_name", "decode_vae_name", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image_to_latent_c", "latent_c"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingCascade", "display_name": "PreSampling (Cascade)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingLayerDiffusion": {"input": {"required": {"pipe": ["PIPE_LINE"], "method": [["Attention Injection", "Conv Injection", "Everything", "Foreground", "Background"]], "weight": ["FLOAT", {"default": 1.0, "min": -1, "max": 3, "step": 0.05}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"default": "euler"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps", "gits"], {"default": "normal"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image": ["IMAGE"], "blended_image": ["IMAGE"], "mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "method", "weight", "steps", "cfg", "sampler_name", "scheduler", "denoise", "seed"], "optional": ["image", "blended_image", "mask"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingLayerDiffusion", "display_name": "PreSampling (LayerDiffuse)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy preSamplingLayerDiffusionADDTL": {"input": {"required": {"pipe": ["PIPE_LINE"], "foreground_prompt": ["STRING", {"default": "", "placeholder": "Foreground Additional Prompt", "multiline": true}], "background_prompt": ["STRING", {"default": "", "placeholder": "Background Additional Prompt", "multiline": true}], "blended_prompt": ["STRING", {"default": "", "placeholder": "Blended Additional Prompt", "multiline": true}]}, "optional": {"optional_fg_cond": ["CONDITIONING"], "optional_bg_cond": ["CONDITIONING"], "optional_blended_cond": ["CONDITIONING"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "foreground_prompt", "background_prompt", "blended_prompt"], "optional": ["optional_fg_cond", "optional_bg_cond", "optional_blended_cond"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preSamplingLayerDiffusionADDTL", "display_name": "PreSampling (LayerDiffuse ADDTL)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "dynamicThresholdingFull": {"input": {"required": {"model": ["MODEL"], "mimic_scale": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.5}], "threshold_percentile": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mimic_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "mimic_scale_min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.5}], "cfg_mode": [["Constant", "Linear Down", "Cosine Down", "Half Cosine Down", "Linear Up", "Cosine Up", "Half Cosine Up", "Power Up", "Power Down", "Linear Repeating", "Cosine Repeating", "Sawtooth"]], "cfg_scale_min": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.5}], "sched_val": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.01}], "separate_feature_channels": [["enable", "disable"]], "scaling_startpoint": [["MEAN", "ZERO"]], "variability_measure": [["AD", "STD"]], "interpolate_phi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "mimic_scale", "threshold_percentile", "mimic_mode", "mimic_scale_min", "cfg_mode", "cfg_scale_min", "sched_val", "separate_feature_channels", "scaling_startpoint", "variability_measure", "interpolate_phi"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "dynamicThresholdingFull", "display_name": "DynamicThresholdingFull", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/PreSampling", "output_node": false}, "easy fullkSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps", "gits"]], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Preview&Choose", "Save", "Hide&Save", "Sender", "Sender&Save", "None"]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "xyPlot": ["XYPLOT"], "image": ["IMAGE"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "link_id", "save_prefix"], "optional": ["seed", "model", "positive", "negative", "latent", "vae", "clip", "xyPlot", "image"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "image", "model", "positive", "negative", "latent", "vae", "clip", "seed"], "name": "easy fullkSampler", "display_name": "EasyKSampler (Full)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Preview&Choose", "Save", "Hide&Save", "Sender", "Sender&Save", "None"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSampler", "display_name": "EasyKSampler", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerCustom": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Preview&Choose", "Save", "Hide&Save", "Sender", "Sender&Save", "None"], {"default": "None"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "LATENT", "LATENT", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["pipe", "output", "denoised_output", "image"], "name": "easy kSamplerCustom", "display_name": "EasyKSampler (Custom)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerTiled": {"input": {"required": {"pipe": ["PIPE_LINE"], "tile_size": ["INT", {"default": 512, "min": 320, "max": 4096, "step": 64}], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save", "None"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "tile_size", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSamplerTiled", "display_name": "EasyKSampler (Tiled Decode)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerLayerDiffusion": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false, true], "output_name": ["pipe", "final_image", "original_image", "alpha"], "name": "easy kSamplerLayerDiffusion", "display_name": "EasyKSampler (LayerDiffuse)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerInpainting": {"input": {"required": {"pipe": ["PIPE_LINE"], "grow_mask_by": ["INT", {"default": 6, "min": 0, "max": 64, "step": 1}], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}], "additional": [["None", "InpaintModelCond", "Differential Diffusion", "Fooocus Inpaint", "Fooocus Inpaint + DD", "Brushnet Random", "Brushnet Random + DD", "Brushnet Segmentation", "Brushnet Segmentation + DD"], {"default": "None"}]}, "optional": {"model": ["MODEL"], "mask": ["MASK"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "grow_mask_by", "image_output", "link_id", "save_prefix", "additional"], "optional": ["model", "mask"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE", "VAE"], "output_is_list": [false, false, false], "output_name": ["pipe", "image", "vae"], "name": "easy kSamplerInpainting", "display_name": "EasyKSampler (Inpainting)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerDownscaleUnet": {"input": {"required": {"pipe": ["PIPE_LINE"], "downscale_mode": [["None", "Auto", "Custom"], {"default": "Auto"}], "block_number": ["INT", {"default": 3, "min": 1, "max": 32, "step": 1}], "downscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 9.0, "step": 0.001}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 0.35, "min": 0.0, "max": 1.0, "step": 0.001}], "downscale_after_skip": ["BOOLEAN", {"default": true}], "downscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "upscale_method": [["bicubic", "nearest-exact", "bilinear", "area", "bislerp"]], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "downscale_mode", "block_number", "downscale_factor", "start_percent", "end_percent", "downscale_after_skip", "downscale_method", "upscale_method", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSamplerDownscaleUnet", "display_name": "EasyKsampler (Downscale Unet)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy kSamplerSDTurbo": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy kSamplerSDTurbo", "display_name": "EasyKSampler (SDTurbo)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy fullCascadeKSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "encode_vae_name": [["None", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "decode_vae_name": [["None", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 4.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"default": "euler_ancestral"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "simple"}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"]], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}], "seed": ["INT", {"default": 0, "min": 0, "max": 1125899906842624}]}, "optional": {"image_to_latent_c": ["IMAGE"], "latent_c": ["LATENT"], "model_c": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "encode_vae_name", "decode_vae_name", "steps", "cfg", "sampler_name", "scheduler", "denoise", "image_output", "link_id", "save_prefix", "seed"], "optional": ["image_to_latent_c", "latent_c", "model_c"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "MODEL", "LATENT"], "output_is_list": [false, false, false], "output_name": ["pipe", "model_b", "latent_b"], "name": "easy fullCascadeKSampler", "display_name": "EasyCascadeKsampler (Full)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy cascadeKSampler": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model_c": ["MODEL"]}, "hidden": {"tile_size": "INT", "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID", "embeddingsList": [["easynegative.safetensors"]]}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model_c"], "hidden": ["tile_size", "prompt", "extra_pnginfo", "my_unique_id", "embeddingsList"]}, "output": ["PIPE_LINE", "IMAGE"], "output_is_list": [false, false], "output_name": ["pipe", "image"], "name": "easy cascadeKSampler", "display_name": "EasyCascadeKsampler", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": true}, "easy unSampler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "end_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "normalize": [["disable", "enable"]]}, "optional": {"pipe": ["PIPE_LINE"], "optional_model": ["MODEL"], "optional_positive": ["CONDITIONING"], "optional_negative": ["CONDITIONING"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["steps", "end_at_step", "cfg", "sampler_name", "scheduler", "normalize"], "optional": ["pipe", "optional_model", "optional_positive", "optional_negative", "optional_latent"]}, "output": ["PIPE_LINE", "LATENT"], "output_is_list": [false, false], "output_name": ["pipe", "latent"], "name": "easy unSampler", "display_name": "EasyUnSampler", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Sampler", "output_node": false}, "easy hiresFix": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]], "rescale_after_model": [[false, true], {"default": true}], "rescale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos", "bislerp"]], "rescale": [["by percentage", "to Width/Height", "to longer side - maintain aspect"]], "percent": ["INT", {"default": 50, "min": 0, "max": 1000, "step": 1}], "width": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "longer_side": ["INT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "crop": [["disabled", "center"]], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"pipe": ["PIPE_LINE"], "image": ["IMAGE"], "vae": ["VAE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["model_name", "rescale_after_model", "rescale_method", "rescale", "percent", "width", "height", "longer_side", "crop", "image_output", "link_id", "save_prefix"], "optional": ["pipe", "image", "vae"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "IMAGE", "LATENT"], "output_is_list": [false, false, false], "output_name": ["pipe", "image", "latent"], "name": "easy hiresFix", "display_name": "HiresFix", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Fix", "output_node": true}, "easy preDetailerFix": {"input": {"required": {"pipe": ["PIPE_LINE"], "guide_size": ["FLOAT", {"default": 256, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 768, "min": 64, "max": 16384, "step": 8}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57", "align_your_steps"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "noise_mask": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "force_inpaint": ["BOOLEAN", {"default": true, "label_on": "enabled", "label_off": "disabled"}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "wildcard": ["STRING", {"multiline": true, "dynamicPrompts": false}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"bbox_segm_pipe": ["PIPE_LINE"], "sam_pipe": ["PIPE_LINE"], "optional_image": ["IMAGE"]}}, "input_order": {"required": ["pipe", "guide_size", "guide_size_for", "max_size", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "noise_mask", "force_inpaint", "drop_size", "wildcard", "cycle"], "optional": ["bbox_segm_pipe", "sam_pipe", "optional_image"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preDetailerFix", "display_name": "PreDetailerFix", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Fix", "output_node": false}, "easy preMaskDetailerFix": {"input": {"required": {"pipe": ["PIPE_LINE"], "mask": ["MASK"], "guide_size": ["FLOAT", {"default": 384, "min": 64, "max": 16384, "step": 8}], "guide_size_for": ["BOOLEAN", {"default": true, "label_on": "bbox", "label_off": "crop_region"}], "max_size": ["FLOAT", {"default": 1024, "min": 64, "max": 16384, "step": 8}], "mask_mode": ["BOOLEAN", {"default": true, "label_on": "masked only", "label_off": "whole"}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "denoise": ["FLOAT", {"default": 0.5, "min": 0.0001, "max": 1.0, "step": 0.01}], "feather": ["INT", {"default": 5, "min": 0, "max": 100, "step": 1}], "crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}], "drop_size": ["INT", {"min": 1, "max": 16384, "step": 1, "default": 10}], "refiner_ratio": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 100}], "cycle": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}, "optional": {"optional_image": ["IMAGE"], "inpaint_model": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}], "noise_mask_feather": ["INT", {"default": 20, "min": 0, "max": 100, "step": 1}]}}, "input_order": {"required": ["pipe", "mask", "guide_size", "guide_size_for", "max_size", "mask_mode", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise", "feather", "crop_factor", "drop_size", "refiner_ratio", "batch_size", "cycle"], "optional": ["optional_image", "inpaint_model", "noise_mask_feather"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy preMaskDetailerFix", "display_name": "preMaskDetailerFix", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Fix", "output_node": false}, "easy ultralyticsDetectorPipe": {"input": {"required": {"model_name": [[]], "bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10, "step": 0.1}]}}, "input_order": {"required": ["model_name", "bbox_threshold", "bbox_dilation", "bbox_crop_factor"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["bbox_segm_pipe"], "name": "easy ultralyticsDetectorPipe", "display_name": "UltralyticsDetector (Pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Fix", "output_node": false}, "easy samLoaderPipe": {"input": {"required": {"model_name": [[]], "device_mode": [["AUTO", "Prefer GPU", "CPU"], {"default": "AUTO"}], "sam_detection_hint": [["center-1", "horizontal-2", "vertical-2", "rect-4", "diamond-4", "mask-area", "mask-points", "mask-point-bbox", "none"]], "sam_dilation": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "sam_threshold": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_bbox_expansion": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sam_mask_hint_threshold": ["FLOAT", {"default": 0.7, "min": 0.0, "max": 1.0, "step": 0.01}], "sam_mask_hint_use_negative": [["False", "Small", "Outter"]]}}, "input_order": {"required": ["model_name", "device_mode", "sam_detection_hint", "sam_dilation", "sam_threshold", "sam_bbox_expansion", "sam_mask_hint_threshold", "sam_mask_hint_use_negative"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["sam_pipe"], "name": "easy samLoaderPipe", "display_name": "SAMLoader (Pipe)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Fix", "output_node": false}, "easy detailerFix": {"input": {"required": {"pipe": ["PIPE_LINE"], "image_output": [["Hide", "Preview", "Save", "Hide&Save", "Sender", "Sender&Save"], {"default": "Preview"}], "link_id": ["INT", {"default": 0, "min": 0, "max": 9223372036854775807, "step": 1}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"model": ["MODEL"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "image_output", "link_id", "save_prefix"], "optional": ["model"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, true, true], "output_name": ["pipe", "image", "cropped_refined", "cropped_enhanced_alpha"], "name": "easy detailerFix", "display_name": "DetailerFix", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Fix", "output_node": true}, "easy pipeIn": {"input": {"required": {}, "optional": {"pipe": ["PIPE_LINE"], "model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "image": ["IMAGE"], "xyPlot": ["XYPLOT"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": [], "optional": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image", "xyPlot"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy pipeIn", "display_name": "Pipe In", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeOut": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image", "seed"], "name": "easy pipeOut", "display_name": "Pipe Out", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeEdit": {"input": {"required": {"clip_skip": ["INT", {"default": -1, "min": -24, "max": 0, "step": 1}], "optional_positive": ["STRING", {"default": "", "multiline": true}], "positive_token_normalization": [["none", "mean", "length", "length+mean"]], "positive_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "optional_negative": ["STRING", {"default": "", "multiline": true}], "negative_token_normalization": [["none", "mean", "length", "length+mean"]], "negative_weight_interpretation": [["comfy", "A1111", "comfy++", "compel", "fixed attention"]], "a1111_prompt_style": ["BOOLEAN", {"default": false}], "conditioning_mode": [["replace", "concat", "combine", "average", "timestep"], {"default": "replace"}], "average_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "old_cond_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "old_cond_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "new_cond_start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "new_cond_end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"pipe": ["PIPE_LINE"], "model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "image": ["IMAGE"]}, "hidden": {"my_unique_id": "UNIQUE_ID", "prompt": "PROMPT"}}, "input_order": {"required": ["clip_skip", "optional_positive", "positive_token_normalization", "positive_weight_interpretation", "optional_negative", "negative_token_normalization", "negative_weight_interpretation", "a1111_prompt_style", "conditioning_mode", "average_strength", "old_cond_start", "old_cond_end", "new_cond_start", "new_cond_end"], "optional": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image"], "hidden": ["my_unique_id", "prompt"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "IMAGE"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "image"], "name": "easy pipeEdit", "display_name": "Pipe Edit", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeEditPrompt": {"input": {"required": {"pipe": ["PIPE_LINE"], "positive": ["STRING", {"default": "", "multiline": true}], "negative": ["STRING", {"default": "", "multiline": true}]}, "hidden": {"my_unique_id": "UNIQUE_ID", "prompt": "PROMPT"}}, "input_order": {"required": ["pipe", "positive", "negative"], "hidden": ["my_unique_id", "prompt"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy pipeEditPrompt", "display_name": "Pipe Edit Prompt", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeToBasicPipe": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe"], "hidden": ["my_unique_id"]}, "output": ["BASIC_PIPE"], "output_is_list": [false], "output_name": ["basic_pipe"], "name": "easy pipeToBasicPipe", "display_name": "Pipe -> BasicPipe", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy pipeBatchIndex": {"input": {"required": {"pipe": ["PIPE_LINE"], "batch_index": ["INT", {"default": 0, "min": 0, "max": 63}], "length": ["INT", {"default": 1, "min": 1, "max": 64}]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "batch_index", "length"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy pipeBatchIndex", "display_name": "Pipe Batch Index", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy XYPlot": {"input": {"required": {"grid_spacing": ["INT", {"min": 0, "max": 500, "step": 5, "default": 0}], "output_individuals": [["False", "True"], {"default": "False"}], "flip_xy": [["False", "True"], {"default": "False"}], "x_axis": [["None", "---------------------", "preSampling: steps", "preSampling: cfg", "preSampling: sampler_name", "preSampling: scheduler", "preSampling: denoise", "preSampling: seed", "---------------------", "loader: ckpt_name", "loader: vae_name", "loader: clip_skip", "loader: lora_name", "loader: lora_model_strength", "loader: lora_clip_strength", "loader: positive", "loader: negative"], {"default": "None"}], "x_values": ["STRING", {"default": "", "multiline": true, "placeholder": "insert values seperated by \"; \""}], "y_axis": [["None", "---------------------", "preSampling: steps", "preSampling: cfg", "preSampling: sampler_name", "preSampling: scheduler", "preSampling: denoise", "preSampling: seed", "---------------------", "loader: ckpt_name", "loader: vae_name", "loader: clip_skip", "loader: lora_name", "loader: lora_model_strength", "loader: lora_clip_strength", "loader: positive", "loader: negative"], {"default": "None"}], "y_values": ["STRING", {"default": "", "multiline": true, "placeholder": "insert values seperated by \"; \""}]}, "optional": {"pipe": ["PIPE_LINE"]}, "hidden": {"plot_dict": [{"steps": {"min": 1, "max": 100, "step": 1}, "cfg": {"min": 0.0, "max": 100.0, "step": 1.0}, "sampler_name": ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], "scheduler": ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal"], "denoise": {"min": 0.0, "max": 1.0, "step": 0.01}, "seed": {"min": 0, "max": 1125899906842624}, "ckpt_name": ["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], "vae_name": ["Baked-VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"], "clip_skip": {"min": -24, "max": -1, "step": 1}, "lora_name": ["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "flux/madocalypse.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], "lora_model_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "lora_clip_strength": {"min": -4.0, "max": 4.0, "step": 0.01}, "positive": [], "negative": []}]}}, "input_order": {"required": ["grid_spacing", "output_individuals", "flip_xy", "x_axis", "x_values", "y_axis", "y_values"], "optional": ["pipe"], "hidden": ["plot_dict"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy XYPlot", "display_name": "XY Plot", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy XYPlotAdvanced": {"input": {"required": {"pipe": ["PIPE_LINE"], "grid_spacing": ["INT", {"min": 0, "max": 500, "step": 5, "default": 0}], "output_individuals": [["False", "True"], {"default": "False"}], "flip_xy": [["False", "True"], {"default": "False"}]}, "optional": {"X": ["X_Y"], "Y": ["X_Y"], "font": [["None"]]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "grid_spacing", "output_individuals", "flip_xy"], "optional": ["X", "Y", "font"], "hidden": ["my_unique_id"]}, "output": ["PIPE_LINE"], "output_is_list": [false], "output_name": ["pipe"], "name": "easy XYPlotAdvanced", "display_name": "XY Plot Advanced", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Pipe", "output_node": false}, "easy XYInputs: Seeds++ Batch": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 1, "max": 50}]}}, "input_order": {"required": ["batch_count"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Seeds++ Batch", "display_name": "XY Inputs: Seeds++ Batch //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Steps": {"input": {"required": {"target_parameter": [["steps", "start_at_step", "end_at_step"]], "batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_step": ["INT", {"default": 10, "min": 1, "max": 10000}], "last_step": ["INT", {"default": 20, "min": 1, "max": 10000}], "first_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "last_start_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "first_end_step": ["INT", {"default": 10, "min": 0, "max": 10000}], "last_end_step": ["INT", {"default": 20, "min": 0, "max": 10000}]}}, "input_order": {"required": ["target_parameter", "batch_count", "first_step", "last_step", "first_start_step", "last_start_step", "first_end_step", "last_end_step"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Steps", "display_name": "XY Inputs: Steps //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: CFG Scale": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0}], "last_cfg": ["FLOAT", {"default": 9.0, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["batch_count", "first_cfg", "last_cfg"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: CFG Scale", "display_name": "XY Inputs: CFG Scale //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: FluxGuidance": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_guidance": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "last_guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0}]}}, "input_order": {"required": ["batch_count", "first_guidance", "last_guidance"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: FluxGuidance", "display_name": "XY Inputs: Flux Guidance //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Sampler/Scheduler": {"input": {"required": {"target_parameter": [["sampler", "scheduler", "sampler & scheduler"]], "input_count": ["INT", {"default": 1, "min": 1, "max": 30, "step": 1}], "sampler_1": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_1": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_2": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_2": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_3": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_3": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_4": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_4": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_5": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_5": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_6": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_6": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_7": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_7": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_8": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_8": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_9": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_9": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_10": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_10": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_11": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_11": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_12": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_12": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_13": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_13": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_14": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_14": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_15": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_15": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_16": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_16": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_17": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_17": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_18": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_18": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_19": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_19": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_20": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_20": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_21": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_21": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_22": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_22": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_23": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_23": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_24": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_24": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_25": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_25": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_26": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_26": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_27": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_27": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_28": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_28": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_29": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_29": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "sampler_30": [["None", "euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler_30": [["None", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]]}}, "input_order": {"required": ["target_parameter", "input_count", "sampler_1", "scheduler_1", "sampler_2", "scheduler_2", "sampler_3", "scheduler_3", "sampler_4", "scheduler_4", "sampler_5", "scheduler_5", "sampler_6", "scheduler_6", "sampler_7", "scheduler_7", "sampler_8", "scheduler_8", "sampler_9", "scheduler_9", "sampler_10", "scheduler_10", "sampler_11", "scheduler_11", "sampler_12", "scheduler_12", "sampler_13", "scheduler_13", "sampler_14", "scheduler_14", "sampler_15", "scheduler_15", "sampler_16", "scheduler_16", "sampler_17", "scheduler_17", "sampler_18", "scheduler_18", "sampler_19", "scheduler_19", "sampler_20", "scheduler_20", "sampler_21", "scheduler_21", "sampler_22", "scheduler_22", "sampler_23", "scheduler_23", "sampler_24", "scheduler_24", "sampler_25", "scheduler_25", "sampler_26", "scheduler_26", "sampler_27", "scheduler_27", "sampler_28", "scheduler_28", "sampler_29", "scheduler_29", "sampler_30", "scheduler_30"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Sampler/Scheduler", "display_name": "XY Inputs: Sampler/Scheduler //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Denoise": {"input": {"required": {"batch_count": ["INT", {"default": 3, "min": 0, "max": 50}], "first_denoise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.1}], "last_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["batch_count", "first_denoise", "last_denoise"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Denoise", "display_name": "XY Inputs: Denoise //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Checkpoint": {"input": {"required": {"input_mode": [["Ckpt Names", "Ckpt Names+ClipSkip", "Ckpt Names+ClipSkip+VAE"]], "ckpt_count": ["INT", {"default": 3, "min": 0, "max": 10, "step": 1}], "ckpt_name_1": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_1": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_1": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_2": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_2": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_2": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_3": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_3": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_3": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_4": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_4": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_4": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_5": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_5": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_5": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_6": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_6": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_6": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_7": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_7": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_7": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_8": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_8": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_8": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_9": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_9": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_9": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "ckpt_name_10": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "clip_skip_10": ["INT", {"default": -1, "min": -24, "max": -1, "step": 1}], "vae_name_10": [["Baked VAE", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]]}, "optional": {"optional_lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["input_mode", "ckpt_count", "ckpt_name_1", "clip_skip_1", "vae_name_1", "ckpt_name_2", "clip_skip_2", "vae_name_2", "ckpt_name_3", "clip_skip_3", "vae_name_3", "ckpt_name_4", "clip_skip_4", "vae_name_4", "ckpt_name_5", "clip_skip_5", "vae_name_5", "ckpt_name_6", "clip_skip_6", "vae_name_6", "ckpt_name_7", "clip_skip_7", "vae_name_7", "ckpt_name_8", "clip_skip_8", "vae_name_8", "ckpt_name_9", "clip_skip_9", "vae_name_9", "ckpt_name_10", "clip_skip_10", "vae_name_10"], "optional": ["optional_lora_stack"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Checkpoint", "display_name": "XY Inputs: Checkpoint //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: Lora": {"input": {"required": {"input_mode": [["Lora Names", "Lora Names+Weights"]], "lora_count": ["INT", {"default": 3, "min": 0, "max": 10, "step": 1}], "model_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_1": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_4": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_4": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_5": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_5": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_6": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_6": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_7": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_7": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_8": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_8": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_9": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_9": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_10": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_str_10": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"optional_lora_stack": ["LORA_STACK"], "display_trigger_word": ["BOOLEAN", {"display_trigger_word": true, "tooltip": "Trigger words showing lora model pass through the model's metadata, but not necessarily accurately."}]}}, "input_order": {"required": ["input_mode", "lora_count", "model_strength", "clip_strength", "lora_name_1", "model_str_1", "clip_str_1", "lora_name_2", "model_str_2", "clip_str_2", "lora_name_3", "model_str_3", "clip_str_3", "lora_name_4", "model_str_4", "clip_str_4", "lora_name_5", "model_str_5", "clip_str_5", "lora_name_6", "model_str_6", "clip_str_6", "lora_name_7", "model_str_7", "clip_str_7", "lora_name_8", "model_str_8", "clip_str_8", "lora_name_9", "model_str_9", "clip_str_9", "lora_name_10", "model_str_10", "clip_str_10"], "optional": ["optional_lora_stack", "display_trigger_word"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: Lora", "display_name": "XY Inputs: Lora //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: ModelMergeBlocks": {"input": {"required": {"ckpt_name_1": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "ckpt_name_2": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "vae_use": [["Use Model 1", "Use Model 2", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"], {"default": "Use Model 1"}], "preset": [["Preset", "MMB-ALL:1,1,1", "MMB-IN:1,0,0", "MMB-MID:0,1,0", "MMB-OUT:0,0,1", "MMB-INMID:1,1,0", "MMB-INOUT:1,0,1", "MMB-MIDOUT:0,1,1", "MMB-NONE:0,0,0", "@MMBN-FULL-TEST:27"], {"default": "preset"}], "values": ["STRING", {"default": "1,0,0; \n0,1,0; \n0,0,1; \n1,1,0; \n1,0,1; \n0,1,1; ", "multiline": true, "placeholder": "Support 2 methods:\n\n1.input, middle, out in same line and insert values seperated by \"; \"\n\n2.model merge block number seperated by \", \" in same line and insert values seperated by \"; \""}]}, "hidden": {"my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ckpt_name_1", "ckpt_name_2", "vae_use", "preset", "values"], "hidden": ["my_unique_id"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: ModelMergeBlocks", "display_name": "XY Inputs: ModelMergeBlocks //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: PromptSR": {"input": {"required": {"target_prompt": [["positive", "negative"]], "search_txt": ["STRING", {"default": "", "multiline": false}], "replace_all_text": ["BOOLEAN", {"default": false}], "replace_count": ["INT", {"default": 3, "min": 1, "max": 29}], "replace_1": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_1"}], "replace_2": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_2"}], "replace_3": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_3"}], "replace_4": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_4"}], "replace_5": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_5"}], "replace_6": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_6"}], "replace_7": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_7"}], "replace_8": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_8"}], "replace_9": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_9"}], "replace_10": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_10"}], "replace_11": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_11"}], "replace_12": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_12"}], "replace_13": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_13"}], "replace_14": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_14"}], "replace_15": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_15"}], "replace_16": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_16"}], "replace_17": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_17"}], "replace_18": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_18"}], "replace_19": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_19"}], "replace_20": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_20"}], "replace_21": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_21"}], "replace_22": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_22"}], "replace_23": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_23"}], "replace_24": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_24"}], "replace_25": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_25"}], "replace_26": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_26"}], "replace_27": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_27"}], "replace_28": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_28"}], "replace_29": ["STRING", {"default": "", "multiline": false, "placeholder": "replace_29"}]}}, "input_order": {"required": ["target_prompt", "search_txt", "replace_all_text", "replace_count", "replace_1", "replace_2", "replace_3", "replace_4", "replace_5", "replace_6", "replace_7", "replace_8", "replace_9", "replace_10", "replace_11", "replace_12", "replace_13", "replace_14", "replace_15", "replace_16", "replace_17", "replace_18", "replace_19", "replace_20", "replace_21", "replace_22", "replace_23", "replace_24", "replace_25", "replace_26", "replace_27", "replace_28", "replace_29"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: PromptSR", "display_name": "XY Inputs: PromptSR //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: ControlNet": {"input": {"required": {"control_net_name": [["Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "image": ["IMAGE"], "target_parameter": [["strength", "start_percent", "end_percent"]], "batch_count": ["INT", {"default": 3, "min": 1, "max": 30}], "first_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "last_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "first_start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_start_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "first_end_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "last_end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["control_net_name", "image", "target_parameter", "batch_count", "first_strength", "last_strength", "first_start_percent", "last_start_percent", "first_end_percent", "last_end_percent", "strength", "start_percent", "end_percent"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: ControlNet", "display_name": "XY Inputs: Controlnet //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: PositiveCond": {"input": {"optional": {"positive_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"]}}, "input_order": {"optional": ["positive_1", "positive_2", "positive_3", "positive_4"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: PositiveCond", "display_name": "XY Inputs: PosCond //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: PositiveCondList": {"input": {"required": {"positive": ["CONDITIONING"]}}, "input_order": {"required": ["positive"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: PositiveCondList", "display_name": "XY Inputs: PosCondList //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: NegativeCond": {"input": {"optional": {"negative_1": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "negative_4": ["CONDITIONING"]}}, "input_order": {"optional": ["negative_1", "negative_2", "negative_3", "negative_4"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: NegativeCond", "display_name": "XY Inputs: NegCond //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy XYInputs: NegativeCondList": {"input": {"required": {"negative": ["CONDITIONING"]}}, "input_order": {"required": ["negative"]}, "output": ["X_Y"], "output_is_list": [false], "output_name": ["X or Y"], "name": "easy XYInputs: NegativeCondList", "display_name": "XY Inputs: NegCondList //EasyUse", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/XY Inputs", "output_node": false}, "easy imageInsetCrop": {"input": {"required": {"image": ["IMAGE"], "measurement": [["Pixels", "Percentage"]], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "measurement", "left", "right", "top", "bottom"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageInsetCrop", "display_name": "ImageInsetCrop", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageCount": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "easy imageCount", "display_name": "ImageCount", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imagesCountInDirectory": {"input": {"required": {"directory": ["STRING"], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "limit": ["INT", {"default": -1, "min": -1, "max": 10000}]}}, "input_order": {"required": ["directory", "start_index", "limit"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["count"], "name": "easy imagesCountInDirectory", "display_name": "imagesCountInDirectory", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageSize": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["width_int", "height_int"], "name": "easy imageSize", "display_name": "ImageSize", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageSizeBySide": {"input": {"required": {"image": ["IMAGE"], "side": [["Longest", "Shortest"]]}}, "input_order": {"required": ["image", "side"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["resolution"], "name": "easy imageSizeBySide", "display_name": "ImageSize (Side)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageSizeByLongerSide": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["resolution"], "name": "easy imageSizeByLongerSide", "display_name": "ImageSize (LongerSide)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imagePixelPerfect": {"input": {"required": {"image": ["IMAGE"], "resize_mode": [["Just Resize", "Crop and Resize", "Resize and Fill"], {"default": "Just Resize"}]}}, "input_order": {"required": ["image", "resize_mode"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["resolution"], "name": "easy imagePixelPerfect", "display_name": "ImagePixelPerfect", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageScaleDown": {"input": {"required": {"images": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["images", "width", "height", "crop"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageScaleDown", "display_name": "Image Scale Down", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageScaleDownBy": {"input": {"required": {"images": ["IMAGE"], "scale_by": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageScaleDownBy", "display_name": "Image Scale Down By", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageScaleDownToSize": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "mode": ["BOOLEAN", {"default": true, "label_on": "max", "label_off": "min"}]}}, "input_order": {"required": ["images", "size", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageScaleDownToSize", "display_name": "Image Scale Down To Size", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageScaleToNormPixels": {"input": {"required": {"image": ["IMAGE"], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "scale_by": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 8.0, "step": 0.01}]}}, "input_order": {"required": ["image", "upscale_method", "scale_by"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageScaleToNormPixels", "display_name": "ImageScaleToNormPixels", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageRatio": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT", "FLOAT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["width_ratio_int", "height_ratio_int", "width_ratio_float", "height_ratio_float"], "name": "easy imageRatio", "display_name": "ImageRatio", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageConcat": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image1", "image2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageConcat", "display_name": "imageConcat", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageListToImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageListToImageBatch", "display_name": "Image List To Image Batch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageBatchToImageList": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "easy imageBatchToImageList", "display_name": "Image Batch To Image List", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageSplitList": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["images", "images", "images"], "name": "easy imageSplitList", "display_name": "imageSplitList", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageSplitGrid": {"input": {"required": {"images": ["IMAGE"], "row": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}], "column": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["images", "row", "column"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "easy imageSplitGrid", "display_name": "imageSplitGrid", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imagesSplitImage": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["image1", "image2", "image3", "image4", "image5"], "name": "easy imagesSplitImage", "display_name": "imagesSplitImage", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageSplitTiles": {"input": {"required": {"image": ["IMAGE"], "overlap_ratio": ["FLOAT", {"default": 0, "min": 0, "max": 0.5, "step": 0.01}], "overlap_offset": ["INT", {"default": 0, "min": -8192, "max": 8192, "step": 1}], "tiles_rows": ["INT", {"default": 2, "min": 1, "max": 50, "step": 1}], "tiles_cols": ["INT", {"default": 2, "min": 1, "max": 50, "step": 1}]}, "optional": {"norm": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "overlap_ratio", "overlap_offset", "tiles_rows", "tiles_cols"], "optional": ["norm"]}, "output": ["IMAGE", "MASK", "OVERLAP", "INT"], "output_is_list": [false, false, false, false], "output_name": ["tiles", "masks", "overlap", "total"], "name": "easy imageSplitTiles", "display_name": "imageSplitTiles", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageTilesFromBatch": {"input": {"required": {"tiles": ["IMAGE"], "masks": ["MASK"], "overlap": ["OVERLAP"], "index": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}]}}, "input_order": {"required": ["tiles", "masks", "overlap", "index"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "x", "y"], "name": "easy imageTilesFromBatch", "display_name": "imageTilesFromBatch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageCropFromMask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "image_crop_multi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "mask_crop_multi": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "bbox_smooth_alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "mask", "image_crop_multi", "mask_crop_multi", "bbox_smooth_alpha"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["crop_image", "crop_mask", "bbox"], "name": "easy imageCropFromMask", "display_name": "imageCropFromMask", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageUncropFromBBOX": {"input": {"required": {"original_image": ["IMAGE"], "crop_image": ["IMAGE"], "bbox": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "use_square_mask": ["BOOLEAN", {"default": true}]}, "optional": {"optional_mask": ["MASK"]}}, "input_order": {"required": ["original_image", "crop_image", "bbox", "border_blending", "use_square_mask"], "optional": ["optional_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageUncropFromBBOX", "display_name": "imageUncropFromBBOX", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy imageSave": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "only_preview": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "only_preview"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy imageSave", "display_name": "Save Image (Simple)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageRemBg": {"input": {"required": {"images": ["IMAGE"], "rem_mode": [["RMBG-2.0", "RMBG-1.4", "Inspyrenet", "BEN2"], {"default": "RMBG-1.4"}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"torchscript_jit": ["BOOLEAN", {"default": false}], "add_background": [["none", "white", "black"], {"default": "none"}], "refine_foreground": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "rem_mode", "image_output", "save_prefix"], "optional": ["torchscript_jit", "add_background", "refine_foreground"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "easy imageRemBg", "display_name": "Image Remove Bg", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageChooser": {"input": {"required": {"mode": [["Always Pause", "Keep Last Selection"], {"default": "Always Pause"}]}, "optional": {"images": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mode"], "optional": ["images"], "hidden": ["prompt", "my_unique_id", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageChooser", "display_name": "Image Chooser", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageColorMatch": {"input": {"required": {"image_ref": ["IMAGE"], "image_target": ["IMAGE"], "method": [["wavelet", "adain", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"]], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image_ref", "image_target", "method", "image_output", "save_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageColorMatch", "display_name": "Image Color Match", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageDetailTransfer": {"input": {"required": {"target": ["IMAGE"], "source": ["IMAGE"], "mode": [["add", "multiply", "screen", "overlay", "soft_light", "hard_light", "color_dodge", "color_burn", "difference", "exclusion", "divide"], {"default": "add"}], "blur_sigma": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.01}], "blend_factor": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001, "round": 0.001}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {"mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["target", "source", "mode", "blur_sigma", "blend_factor", "image_output", "save_prefix"], "optional": ["mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageDetailTransfer", "display_name": "Image Detail Transfer", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy imageInterrogator": {"input": {"required": {"image": ["IMAGE"], "mode": [["fast", "classic", "best", "negative"]], "use_lowvram": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "mode", "use_lowvram"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["prompt"], "name": "easy imageInterrogator", "display_name": "Image To Prompt", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy loadImagesForLoop": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "limit": ["INT", {"default": -1, "min": -1, "max": 10000}], "initial_value1": ["*"], "initial_value2": ["*"]}, "hidden": {"initial_value0": ["*"], "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["directory"], "optional": ["start_index", "limit", "initial_value1", "initial_value2"], "hidden": ["initial_value0", "prompt", "extra_pnginfo", "unique_id"]}, "output": ["FLOW_CONTROL", "INT", "IMAGE", "MASK", "STRING", "*", "*"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["flow", "index", "image", "mask", "name", "value1", "value2"], "name": "easy loadImagesForLoop", "display_name": "Load Images For Loop", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "image", "output_node": false}, "easy loadImageBase64": {"input": {"required": {"base64_data": ["STRING", {"default": ""}], "image_output": [["Hide", "Preview", "Save", "Hide/Save"], {"default": "Preview"}], "save_prefix": ["STRING", {"default": "ComfyUI"}]}, "optional": {}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["base64_data", "image_output", "save_prefix"], "optional": [], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "easy loadImageBase64", "display_name": "Load Image (Base64)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image/LoadImage", "output_node": true}, "easy imageToBase64": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "easy imageToBase64", "display_name": "Image To Base64", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy joinImageBatch": {"input": {"required": {"images": ["IMAGE"], "mode": [["horizontal", "vertical"], {"default": "horizontal"}]}}, "input_order": {"required": ["images", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy joinImageBatch", "display_name": "JoinImageBatch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy humanSegmentation": {"input": {"required": {"image": ["IMAGE"], "method": [["selfie_multiclass_256x256", "human_parsing_lip", "human_parts (deeplabv3p)"]], "confidence": ["FLOAT", {"default": 0.4, "min": 0.05, "max": 0.95, "step": 0.01}], "crop_multi": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.001}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image", "method", "confidence", "crop_multi"], "hidden": ["prompt", "my_unique_id"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "bbox"], "name": "easy humanSegmentation", "display_name": "Human Segmentation", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Segmentation", "output_node": false}, "easy removeLocalImage": {"input": {"required": {"any": ["*"], "file_name": ["STRING", {"default": ""}]}}, "input_order": {"required": ["any", "file_name"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy removeLocalImage", "display_name": "Remove Local Image", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": true}, "easy makeImageForICLora": {"input": {"required": {"image_1": ["IMAGE"], "direction": [["top-bottom", "left-right"], {"default": "left-right"}], "pixels": ["INT", {"default": 0, "max": 16384, "min": 0, "step": 8, "tooltip": "The pixel of the output image is not set when it is 0"}]}, "optional": {"image_2": ["IMAGE"], "mask_1": ["MASK"], "mask_2": ["MASK"]}}, "input_order": {"required": ["image_1", "direction", "pixels"], "optional": ["image_2", "mask_1", "mask_2"]}, "output": ["IMAGE", "MASK", "MASK", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["image", "mask", "context_mask", "width", "height", "x", "y"], "name": "easy makeImageForICLora", "display_name": "Make Image For ICLora", "description": "make Image for ICLora to Re-paint", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Image", "output_node": false}, "easy string": {"input": {"required": {"value": ["STRING", {"default": ""}]}}, "input_order": {"required": ["value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "easy string", "display_name": "String", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy int": {"input": {"required": {"value": ["INT", {"default": 0, "min": -999999, "max": 999999}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["int"], "name": "easy int", "display_name": "Int", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy rangeInt": {"input": {"required": {"range_mode": [["step", "num_steps"], {"default": "step"}], "start": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "stop": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "step": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "num_steps": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "end_mode": [["Inclusive", "Exclusive"], {"default": "Inclusive"}]}}, "input_order": {"required": ["range_mode", "start", "stop", "step", "num_steps", "end_mode"]}, "output": ["INT", "INT"], "output_is_list": [true, true], "output_name": ["range", "range_sizes"], "name": "easy rangeInt", "display_name": "Range(Int)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy float": {"input": {"required": {"value": ["FLOAT", {"default": 0, "step": 0.01, "min": -999999, "max": 999999}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "easy float", "display_name": "Float", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy rangeFloat": {"input": {"required": {"range_mode": [["step", "num_steps"], {"default": "step"}], "start": ["FLOAT", {"default": 0, "min": -4096, "max": 4096, "step": 0.1}], "stop": ["FLOAT", {"default": 0, "min": -4096, "max": 4096, "step": 0.1}], "step": ["FLOAT", {"default": 0, "min": -4096, "max": 4096, "step": 0.1}], "num_steps": ["INT", {"default": 0, "min": -4096, "max": 4096, "step": 1}], "end_mode": [["Inclusive", "Exclusive"], {"default": "Inclusive"}]}}, "input_order": {"required": ["range_mode", "start", "stop", "step", "num_steps", "end_mode"]}, "output": ["FLOAT", "INT"], "output_is_list": [true, true], "output_name": ["range", "range_sizes"], "name": "easy rangeFloat", "display_name": "Range(Float)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy boolean": {"input": {"required": {"value": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy boolean", "display_name": "Boolean", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Type", "output_node": false}, "easy mathString": {"input": {"required": {"a": ["STRING", {"multiline": false}], "b": ["STRING", {"multiline": false}], "operation": [["a == b", "a != b", "a IN b", "a MATCH REGEX(b)", "a BEGINSWITH b", "a ENDSWITH b"]], "case_sensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["a", "b", "operation", "case_sensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "easy mathString", "display_name": "Math String", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy mathInt": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}], "operation": [["add", "subtract", "multiply", "divide", "modulo", "power"]]}}, "input_order": {"required": ["a", "b", "operation"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "easy mathInt", "display_name": "Math Int", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy mathFloat": {"input": {"required": {"a": ["FLOAT", {"default": 0, "min": -999999999999.0, "max": 999999999999.0, "step": 0.01}], "b": ["FLOAT", {"default": 0, "min": -999999999999.0, "max": 999999999999.0, "step": 0.01}], "operation": [["add", "subtract", "multiply", "divide", "modulo", "power"]]}}, "input_order": {"required": ["a", "b", "operation"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "easy mathFloat", "display_name": "Math Float", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy compare": {"input": {"required": {"a": ["*", {"default": 0}], "b": ["*", {"default": 0}], "comparison": [["a == b", "a != b", "a < b", "a > b", "a <= b", "a >= b"], {"default": "a == b"}]}}, "input_order": {"required": ["a", "b", "comparison"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy compare", "display_name": "Compare", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Math", "output_node": false}, "easy imageSwitch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image_a", "image_b", "boolean"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "easy imageSwitch", "display_name": "Image Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Switch", "output_node": false}, "easy textSwitch": {"input": {"required": {"input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["input"], "optional": ["text1", "text2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "easy textSwitch", "display_name": "Text Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Switch", "output_node": false}, "easy imageIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"image0": ["IMAGE", {"lazy": true}], "image1": ["IMAGE", {"lazy": true}], "image2": ["IMAGE", {"lazy": true}], "image3": ["IMAGE", {"lazy": true}], "image4": ["IMAGE", {"lazy": true}], "image5": ["IMAGE", {"lazy": true}], "image6": ["IMAGE", {"lazy": true}], "image7": ["IMAGE", {"lazy": true}], "image8": ["IMAGE", {"lazy": true}], "image9": ["IMAGE", {"lazy": true}]}}, "input_order": {"required": ["index"], "optional": ["image0", "image1", "image2", "image3", "image4", "image5", "image6", "image7", "image8", "image9"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy imageIndexSwitch", "display_name": "Image Index Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy textIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"text0": ["STRING", {"lazy": true, "forceInput": true}], "text1": ["STRING", {"lazy": true, "forceInput": true}], "text2": ["STRING", {"lazy": true, "forceInput": true}], "text3": ["STRING", {"lazy": true, "forceInput": true}], "text4": ["STRING", {"lazy": true, "forceInput": true}], "text5": ["STRING", {"lazy": true, "forceInput": true}], "text6": ["STRING", {"lazy": true, "forceInput": true}], "text7": ["STRING", {"lazy": true, "forceInput": true}], "text8": ["STRING", {"lazy": true, "forceInput": true}], "text9": ["STRING", {"lazy": true, "forceInput": true}]}}, "input_order": {"required": ["index"], "optional": ["text0", "text1", "text2", "text3", "text4", "text5", "text6", "text7", "text8", "text9"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "easy textIndexSwitch", "display_name": "Text Index Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy conditioningIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"cond0": ["CONDITIONING", {"lazy": true}], "cond1": ["CONDITIONING", {"lazy": true}], "cond2": ["CONDITIONING", {"lazy": true}], "cond3": ["CONDITIONING", {"lazy": true}], "cond4": ["CONDITIONING", {"lazy": true}], "cond5": ["CONDITIONING", {"lazy": true}], "cond6": ["CONDITIONING", {"lazy": true}], "cond7": ["CONDITIONING", {"lazy": true}], "cond8": ["CONDITIONING", {"lazy": true}], "cond9": ["CONDITIONING", {"lazy": true}]}}, "input_order": {"required": ["index"], "optional": ["cond0", "cond1", "cond2", "cond3", "cond4", "cond5", "cond6", "cond7", "cond8", "cond9"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "easy conditioningIndexSwitch", "display_name": "Conditioning Index Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy anythingIndexSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}]}, "optional": {"value0": ["*", {"lazy": true}], "value1": ["*", {"lazy": true}], "value2": ["*", {"lazy": true}], "value3": ["*", {"lazy": true}], "value4": ["*", {"lazy": true}], "value5": ["*", {"lazy": true}], "value6": ["*", {"lazy": true}], "value7": ["*", {"lazy": true}], "value8": ["*", {"lazy": true}], "value9": ["*", {"lazy": true}]}}, "input_order": {"required": ["index"], "optional": ["value0", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9"]}, "output": ["*"], "output_is_list": [false], "output_name": ["value"], "name": "easy anythingIndexSwitch", "display_name": "Any Index Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/Index Switch", "output_node": false}, "easy ab": {"input": {"required": {"A or B": ["BOOLEAN", {"default": true, "label_on": "A", "label_off": "B"}], "in": ["*"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["A or B", "in"], "hidden": ["unique_id"]}, "output": ["*", "*"], "output_is_list": [false, false], "output_name": ["A", "B"], "name": "easy ab", "display_name": "A or B", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy anythingInversedSwitch": {"input": {"required": {"index": ["INT", {"default": 0, "min": 0, "max": 9, "step": 1}], "in": ["*"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["index", "in"], "hidden": ["unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out0"], "name": "easy anythingInversedSwitch", "display_name": "Any Inversed Switch", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy whileLoopStart": {"input": {"required": {"condition": ["BOOLEAN", {"default": true}]}, "optional": {"initial_value0": ["*"], "initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"], "initial_value5": ["*"], "initial_value6": ["*"], "initial_value7": ["*"], "initial_value8": ["*"], "initial_value9": ["*"]}}, "input_order": {"required": ["condition"], "optional": ["initial_value0", "initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9"]}, "output": ["FLOW_CONTROL", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false], "output_name": ["flow", "value0", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9"], "name": "easy whileLoopStart", "display_name": "While Loop Start", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/While Loop", "output_node": false}, "easy whileLoopEnd": {"input": {"required": {"flow": ["FLOW_CONTROL", {"rawLink": true}], "condition": ["BOOLEAN", {}]}, "optional": {"initial_value0": ["*"], "initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"], "initial_value5": ["*"], "initial_value6": ["*"], "initial_value7": ["*"], "initial_value8": ["*"], "initial_value9": ["*"]}, "hidden": {"dynprompt": "DYNPROMPT", "unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["flow", "condition"], "optional": ["initial_value0", "initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9"], "hidden": ["dynprompt", "unique_id", "extra_pnginfo"]}, "output": ["*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["value0", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9"], "name": "easy whileLoopEnd", "display_name": "While Loop End", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/While Loop", "output_node": false}, "easy forLoopStart": {"input": {"required": {"total": ["INT", {"default": 1, "min": 1, "max": 100000, "step": 1}]}, "optional": {"initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"], "initial_value5": ["*"], "initial_value6": ["*"], "initial_value7": ["*"], "initial_value8": ["*"], "initial_value9": ["*"]}, "hidden": {"initial_value0": ["*"], "prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["total"], "optional": ["initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9"], "hidden": ["initial_value0", "prompt", "extra_pnginfo", "unique_id"]}, "output": ["FLOW_CONTROL", "INT", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false], "output_name": ["flow", "index", "value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9"], "name": "easy forLoopStart", "display_name": "For Loop Start", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/For Loop", "output_node": false}, "easy forLoopEnd": {"input": {"required": {"flow": ["FLOW_CONTROL", {"rawLink": true}]}, "optional": {"initial_value1": ["*", {"rawLink": true}], "initial_value2": ["*", {"rawLink": true}], "initial_value3": ["*", {"rawLink": true}], "initial_value4": ["*", {"rawLink": true}], "initial_value5": ["*", {"rawLink": true}], "initial_value6": ["*", {"rawLink": true}], "initial_value7": ["*", {"rawLink": true}], "initial_value8": ["*", {"rawLink": true}], "initial_value9": ["*", {"rawLink": true}]}, "hidden": {"dynprompt": "DYNPROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["flow"], "optional": ["initial_value1", "initial_value2", "initial_value3", "initial_value4", "initial_value5", "initial_value6", "initial_value7", "initial_value8", "initial_value9"], "hidden": ["dynprompt", "extra_pnginfo", "unique_id"]}, "output": ["*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["value1", "value2", "value3", "value4", "value5", "value6", "value7", "value8", "value9"], "name": "easy forLoopEnd", "display_name": "For Loop End", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic/For Loop", "output_node": false}, "easy blocker": {"input": {"required": {"continue": ["BOOLEAN", {"default": false}], "in": ["*", {"default": null}]}}, "input_order": {"required": ["continue", "in"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out"], "name": "easy blocker", "display_name": "Blocker", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy ifElse": {"input": {"required": {"boolean": ["BOOLEAN"], "on_true": ["*", {"lazy": true}], "on_false": ["*", {"lazy": true}]}}, "input_order": {"required": ["boolean", "on_true", "on_false"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "easy ifElse", "display_name": "If else", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy isMaskEmpty": {"input": {"required": {"mask": ["MASK"]}, "optional": {}}, "input_order": {"required": ["mask"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isMaskEmpty", "display_name": "Is Mask Empty", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy isNone": {"input": {"required": {"any": ["*"]}, "optional": {}}, "input_order": {"required": ["any"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isNone", "display_name": "Is None", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy isSDXL": {"input": {"required": {}, "optional": {"optional_pipe": ["PIPE_LINE"], "optional_clip": ["CLIP"]}}, "input_order": {"required": [], "optional": ["optional_pipe", "optional_clip"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isSDXL", "display_name": "Is SDXL", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy isFileExist": {"input": {"required": {"file_path": ["STRING", {"default": ""}], "file_name": ["STRING", {"default": ""}], "file_extension": ["STRING", {"default": ""}]}, "optional": {}}, "input_order": {"required": ["file_path", "file_name", "file_extension"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "easy isFileExist", "display_name": "Is File Exist", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy outputToList": {"input": {"required": {"tuple": ["*", {}]}, "optional": {}}, "input_order": {"required": ["tuple"], "optional": []}, "output": ["*"], "output_is_list": [true], "output_name": ["list"], "name": "easy outputToList", "display_name": "Output to List", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy pixels": {"input": {"required": {"resolution": [["width x height (custom)", "512 x 512", "512 x 768", "576 x 1024", "768 x 512", "768 x 768", "768 x 1024", "768 x 1280", "768 x 1344", "768 x 1536", "816 x 1920", "832 x 1152", "832 x 1216", "896 x 1152", "896 x 1088", "1024 x 1024", "1024 x 576", "1024 x 768", "1080 x 1920", "1440 x 2560", "1088 x 896", "1216 x 832", "1152 x 832", "1152 x 896", "1280 x 768", "1344 x 768", "1536 x 640", "1536 x 768", "1920 x 816", "1920 x 1080", "2560 x 1440"]], "width": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 8}], "scale": ["FLOAT", {"default": 2.0, "min": 0.001, "max": 10, "step": 0.001}], "flip_w/h": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["resolution", "width", "height", "scale", "flip_w/h"]}, "output": ["INT", "INT", "*", "*", "*"], "output_is_list": [false, false, false, false, false], "output_name": ["width_norm", "height_norm", "width", "height", "scale_factor"], "name": "easy pixels", "display_name": "Pixels W/H Norm", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy xyAny": {"input": {"required": {"X": ["*", {}], "Y": ["*", {}], "direction": [["horizontal", "vertical"], {"default": "horizontal"}]}}, "input_order": {"required": ["X", "Y", "direction"]}, "output": ["*", "*"], "output_is_list": [true, true], "output_name": ["X", "Y"], "name": "easy xyAny", "display_name": "XY Any", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy lengthAnything": {"input": {"required": {"any": ["*", {}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["any"], "hidden": ["prompt", "my_unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["length"], "name": "easy lengthAnything", "display_name": "Length Any", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy indexAnything": {"input": {"required": {"any": ["*", {}], "index": ["INT", {"default": 0, "min": 0, "max": 1000000, "step": 1}]}, "hidden": {"prompt": "PROMPT", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["any", "index"], "hidden": ["prompt", "my_unique_id"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out"], "name": "easy indexAnything", "display_name": "Index Any", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy batchAnything": {"input": {"required": {"any_1": ["*", {}], "any_2": ["*", {}]}}, "input_order": {"required": ["any_1", "any_2"]}, "output": ["*"], "output_is_list": [false], "output_name": ["batch"], "name": "easy batchAnything", "display_name": "Batch Any", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy convertAnything": {"input": {"required": {"*": ["*"], "output_type": [["string", "int", "float", "boolean"], {"default": "string"}]}}, "input_order": {"required": ["*", "output_type"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "easy convertAnything", "display_name": "Convert Any", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy showAnything": {"input": {"required": {}, "optional": {"anything": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["anything"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy showAnything", "display_name": "Show Any", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy showTensorShape": {"input": {"required": {"tensor": ["*"]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["tensor"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy showTensorShape", "display_name": "Show Tensor Shape", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy clearCacheKey": {"input": {"required": {"anything": ["*", {}], "cache_key": ["STRING", {"default": "*"}]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["anything", "cache_key"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy clearCacheKey", "display_name": "Clear Cache Key", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy clearCacheAll": {"input": {"required": {"anything": ["*", {}]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["anything"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy clearCacheAll", "display_name": "Clear Cache All", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy cleanGpuUsed": {"input": {"required": {"anything": ["*", {}]}, "optional": {}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["anything"], "optional": [], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy cleanGpuUsed", "display_name": "Clean VRAM Used", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy saveText": {"input": {"required": {"text": ["STRING", {"default": "", "forceInput": true}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "overwrite": ["BOOLEAN", {"default": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["text", "output_file_path", "file_name", "file_extension", "overwrite"], "optional": ["image"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["text", "image"], "name": "easy saveText", "display_name": "Save Text", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": true}, "easy sleep": {"input": {"required": {"any": ["*", {}], "delay": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1000000, "step": 0.1}]}}, "input_order": {"required": ["any", "delay"]}, "output": ["*"], "output_is_list": [false], "output_name": ["out"], "name": "easy sleep", "display_name": "Sleep", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/Logic", "output_node": false}, "easy fluxPromptGenAPI": {"input": {"required": {"describe": ["STRING", {"default": "", "placeholder": "Describe your image idea (you can use any language)", "multiline": true}]}, "optional": {"cookie_override": ["STRING", {"default": "", "forceInput": true}]}, "hidden": {"prompt": "PROMPT", "unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["describe"], "optional": ["cookie_override"], "hidden": ["prompt", "unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["prompt"], "name": "easy fluxPromptGenAPI", "display_name": "Prompt Gen (FluxAI)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/API", "output_node": false}, "easy joyCaption2API": {"input": {"required": {"image": ["IMAGE"], "do_sample": [[true, false]], "temperature": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 2.0, "step": 0.01, "round": 0.001, "display": "number"}], "max_tokens": ["INT", {"default": 256, "min": 16, "max": 512, "step": 16, "display": "number"}], "caption_type": [["Descriptive", "Descriptive (Informal)", "Training Prompt", "MidJourney", "Booru tag list", "Booru-like tag list", "Art Critic", "Product Listing", "Social Media Post"]], "caption_length": [["any", "very short", "short", "medium-length", "long", "very long", "20", "30", "40", "50", "60", "70", "80", "90", "100", "110", "120", "130", "140", "150", "160", "170", "180", "190", "200", "210", "220", "230", "240", "250", "260"]], "extra_options": ["STRING", {"placeholder": "Extra options(e.g):\nIf there is a person/character in the image you must refer to them as {name}.", "tooltip": "Extra options for the model", "multiline": true}], "name_input": ["STRING", {"default": "", "tooltip": "Name input is only used if an Extra Option is selected that requires it."}], "custom_prompt": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["image", "do_sample", "temperature", "max_tokens", "caption_type", "caption_length", "extra_options", "name_input", "custom_prompt"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["caption"], "name": "easy joyCaption2API", "display_name": "JoyCaption2 (BizyAIR)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/API", "output_node": false}, "easy if": {"input": {"required": {"any": ["*"], "if": ["*"], "else": ["*"]}}, "input_order": {"required": ["any", "if", "else"]}, "output": ["*"], "output_is_list": [false], "output_name": ["?"], "name": "easy if", "display_name": "If (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy poseEditor": {"input": {"required": {"image": ["STRING", {"default": ""}]}}, "input_order": {"required": ["image"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy poseEditor", "display_name": "PoseEditor (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy imageToMask": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "easy imageToMask", "display_name": "ImageToMask (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy showSpentTime": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["pipe"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "easy showSpentTime", "display_name": "Show Spent Time (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": true, "deprecated": true}, "easy latentNoisy": {"input": {"required": {"sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "steps": ["INT", {"default": 10000, "min": 0, "max": 10000}], "start_at_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_at_step": ["INT", {"default": 10000, "min": 1, "max": 10000}], "source": [["CPU", "GPU"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"pipe": ["PIPE_LINE"], "optional_model": ["MODEL"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["sampler_name", "scheduler", "steps", "start_at_step", "end_at_step", "source", "seed"], "optional": ["pipe", "optional_model", "optional_latent"]}, "output": ["PIPE_LINE", "LATENT", "FLOAT"], "output_is_list": [false, false, false], "output_name": ["pipe", "latent", "sigma"], "name": "easy latentNoisy", "display_name": "LatentNoisy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy latentCompositeMaskedWithCond": {"input": {"required": {"pipe": ["PIPE_LINE"], "text_combine": ["LIST"], "source_latent": ["LATENT"], "source_mask": ["MASK"], "destination_mask": ["MASK"], "text_combine_mode": [["add", "replace", "cover"], {"default": "add"}], "replace_text": ["STRING", {"default": ""}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "my_unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["pipe", "text_combine", "source_latent", "source_mask", "destination_mask", "text_combine_mode", "replace_text"], "hidden": ["prompt", "extra_pnginfo", "my_unique_id"]}, "output": ["PIPE_LINE", "LATENT", "CONDITIONING"], "output_is_list": [false, false, true], "output_name": ["pipe", "latent", "conditioning"], "name": "easy latentCompositeMaskedWithCond", "display_name": "LatentCompositeMaskedWithCond (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy injectNoiseToLatent": {"input": {"required": {"strength": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 200.0, "step": 0.0001}], "normalize": ["BOOLEAN", {"default": false}], "average": ["BOOLEAN", {"default": false}]}, "optional": {"pipe_to_noise": ["PIPE_LINE"], "image_to_latent": ["IMAGE"], "latent": ["LATENT"], "noise": ["LATENT"], "mask": ["MASK"], "mix_randn_amount": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["strength", "normalize", "average"], "optional": ["pipe_to_noise", "image_to_latent", "latent", "noise", "mask", "mix_randn_amount", "seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "easy injectNoiseToLatent", "display_name": "InjectNoiseToLatent (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy stableDiffusion3API": {"input": {"required": {"positive": ["STRING", {"default": "", "placeholder": "Positive", "multiline": true}], "negative": ["STRING", {"default": "", "placeholder": "Negative", "multiline": true}], "model": [["sd3", "sd3-turbo"]], "aspect_ratio": [["16:9", "1:1", "21:9", "2:3", "3:2", "4:5", "5:4", "9:16", "9:21"]], "seed": ["INT", {"default": 0, "min": 0, "max": 4294967294}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}]}, "optional": {"optional_image": ["IMAGE"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["positive", "negative", "model", "aspect_ratio", "seed", "denoise"], "optional": ["optional_image"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "easy stableDiffusion3API", "display_name": "StableDiffusion3API (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy saveImageLazy": {"input": {"required": {"images": ["IMAGE"], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "save_metadata": ["BOOLEAN", {"default": true}]}, "optional": {}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "save_metadata"], "optional": [], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "easy saveImageLazy", "display_name": "SaveImageLazy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy saveTextLazy": {"input": {"required": {"text": ["STRING", {"default": "", "forceInput": true}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "overwrite": ["BOOLEAN", {"default": true}]}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": ["text", "output_file_path", "file_name", "file_extension", "overwrite"], "optional": ["image"]}, "output": ["STRING", "IMAGE"], "output_is_list": [false, false], "output_name": ["text", "image"], "name": "easy saveTextLazy", "display_name": "SaveTextLazy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "easy showAnythingLazy": {"input": {"required": {}, "optional": {"anything": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["anything"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["output"], "name": "easy showAnythingLazy", "display_name": "ShowAnythingLazy (\ud83d\udeabDeprecated)", "description": "", "python_module": "custom_nodes.ComfyUI-Easy-Use", "category": "EasyUse/\ud83d\udeab Deprecated", "output_node": false, "deprecated": true}, "UnetLoaderGGUF": {"input": {"required": {"unet_name": [["blackforest/flux1-dev-Q5_K_S.gguf", "blackforest/flux1-dev-Q8_0.gguf", "flux1-canny-dev-Q2_K.gguf", "flux1-canny-dev-Q8_0.gguf"]]}}, "input_order": {"required": ["unet_name"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UnetLoaderGGUF", "display_name": "Unet Loader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "CLIPLoaderGGUF": {"input": {"required": {"clip_name": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5-v1_1-xxl-encoder-Q5_K_S.gguf", "Flux/t5-v1_1-xxl-encoder-Q8_0.gguf", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "type": [["stable_diffusion", "stable_cascade", "sd3", "stable_audio", "mochi", "ltxv", "pixart", "wan"]]}}, "input_order": {"required": ["clip_name", "type"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIPLoaderGGUF", "display_name": "CLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "DualCLIPLoaderGGUF": {"input": {"required": {"clip_name1": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5-v1_1-xxl-encoder-Q5_K_S.gguf", "Flux/t5-v1_1-xxl-encoder-Q8_0.gguf", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name2": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5-v1_1-xxl-encoder-Q5_K_S.gguf", "Flux/t5-v1_1-xxl-encoder-Q8_0.gguf", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "type": [["sdxl", "sd3", "flux", "hunyuan_video"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "type"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "DualCLIPLoaderGGUF", "display_name": "DualCLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "TripleCLIPLoaderGGUF": {"input": {"required": {"clip_name1": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5-v1_1-xxl-encoder-Q5_K_S.gguf", "Flux/t5-v1_1-xxl-encoder-Q8_0.gguf", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name2": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5-v1_1-xxl-encoder-Q5_K_S.gguf", "Flux/t5-v1_1-xxl-encoder-Q8_0.gguf", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name3": [["Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5-v1_1-xxl-encoder-Q5_K_S.gguf", "Flux/t5-v1_1-xxl-encoder-Q8_0.gguf", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]]}}, "input_order": {"required": ["clip_name1", "clip_name2", "clip_name3"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "TripleCLIPLoaderGGUF", "display_name": "TripleCLIPLoader (GGUF)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "UnetLoaderGGUFAdvanced": {"input": {"required": {"unet_name": [["blackforest/flux1-dev-Q5_K_S.gguf", "blackforest/flux1-dev-Q8_0.gguf", "flux1-canny-dev-Q2_K.gguf", "flux1-canny-dev-Q8_0.gguf"]], "dequant_dtype": [["default", "target", "float32", "float16", "bfloat16"], {"default": "default"}], "patch_dtype": [["default", "target", "float32", "float16", "bfloat16"], {"default": "default"}], "patch_on_device": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["unet_name", "dequant_dtype", "patch_dtype", "patch_on_device"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "UnetLoaderGGUFAdvanced", "display_name": "Unet Loader (GGUF/Advanced)", "description": "", "python_module": "custom_nodes.ComfyUI-GGUF", "category": "bootleg", "output_node": false}, "BOOLConstant": {"input": {"required": {"value": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["value"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["value"], "name": "BOOLConstant", "display_name": "BOOL Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "INTConstant": {"input": {"required": {"value": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["value"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["value"], "name": "INTConstant", "display_name": "INT Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "FloatConstant": {"input": {"required": {"value": ["FLOAT", {"default": 0.0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1e-05}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["value"], "name": "FloatConstant", "display_name": "Float Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "StringConstant": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConstant", "display_name": "String Constant", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "StringConstantMultiline": {"input": {"required": {"string": ["STRING", {"default": "", "multiline": true}], "strip_newlines": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["string", "strip_newlines"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "StringConstantMultiline", "display_name": "String Constant Multiline", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/constants", "output_node": false}, "ConditioningMultiCombine": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 20, "step": 1}], "operation": [["combine", "concat"], {"default": "combine"}], "conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}}, "input_order": {"required": ["inputcount", "operation", "conditioning_1", "conditioning_2"]}, "output": ["CONDITIONING", "INT"], "output_is_list": [false, false], "output_name": ["combined", "inputcount"], "name": "ConditioningMultiCombine", "display_name": "Conditioning Multi Combine", "description": "\nCombines multiple conditioning nodes into one\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "mask_1", "mask_2", "mask_1_strength", "mask_2_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine", "display_name": "ConditioningSetMaskAndCombine", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine3": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "mask_1", "mask_2", "mask_3", "mask_1_strength", "mask_2_strength", "mask_3_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine3", "display_name": "ConditioningSetMaskAndCombine3", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine4": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"], "negative_4": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_4_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "positive_4", "negative_4", "mask_1", "mask_2", "mask_3", "mask_4", "mask_1_strength", "mask_2_strength", "mask_3_strength", "mask_4_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine4", "display_name": "ConditioningSetMaskAndCombine4", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "ConditioningSetMaskAndCombine5": {"input": {"required": {"positive_1": ["CONDITIONING"], "negative_1": ["CONDITIONING"], "positive_2": ["CONDITIONING"], "negative_2": ["CONDITIONING"], "positive_3": ["CONDITIONING"], "negative_3": ["CONDITIONING"], "positive_4": ["CONDITIONING"], "negative_4": ["CONDITIONING"], "positive_5": ["CONDITIONING"], "negative_5": ["CONDITIONING"], "mask_1": ["MASK"], "mask_2": ["MASK"], "mask_3": ["MASK"], "mask_4": ["MASK"], "mask_5": ["MASK"], "mask_1_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_2_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_3_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_4_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "mask_5_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "set_cond_area": [["default", "mask bounds"]]}}, "input_order": {"required": ["positive_1", "negative_1", "positive_2", "negative_2", "positive_3", "negative_3", "positive_4", "negative_4", "positive_5", "negative_5", "mask_1", "mask_2", "mask_3", "mask_4", "mask_5", "mask_1_strength", "mask_2_strength", "mask_3_strength", "mask_4_strength", "mask_5_strength", "set_cond_area"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["combined_positive", "combined_negative"], "name": "ConditioningSetMaskAndCombine5", "display_name": "ConditioningSetMaskAndCombine5", "description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/conditioning", "output_node": false}, "CondPassThrough": {"input": {"required": {}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": [], "optional": ["positive", "negative"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "CondPassThrough", "display_name": "CondPassThrough", "description": "\n    Simply passes through the positive and negative conditioning,\n    workaround for Set node not allowing bypassed inputs.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "DownloadAndLoadCLIPSeg": {"input": {"required": {"model": [["Kijai/clipseg-rd64-refined-fp16", "CIDAS/clipseg-rd64-refined"]]}}, "input_order": {"required": ["model"]}, "output": ["CLIPSEGMODEL"], "output_is_list": [false], "output_name": ["clipseg_model"], "name": "DownloadAndLoadCLIPSeg", "display_name": "(Down)load CLIPSeg", "description": "\nDownloads and loads CLIPSeg model with huggingface_hub,  \nto ComfyUI/models/clip_seg\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BatchCLIPSeg": {"input": {"required": {"images": ["IMAGE"], "text": ["STRING", {"multiline": false}], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 10.0, "step": 0.001}], "binary_mask": ["BOOLEAN", {"default": true}], "combine_mask": ["BOOLEAN", {"default": false}], "use_cuda": ["BOOLEAN", {"default": true}]}, "optional": {"blur_sigma": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "opt_model": ["CLIPSEGMODEL"], "prev_mask": ["MASK", {"default": null}], "image_bg_level": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "text", "threshold", "binary_mask", "combine_mask", "use_cuda"], "optional": ["blur_sigma", "opt_model", "prev_mask", "image_bg_level", "invert"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["Mask", "Image"], "name": "BatchCLIPSeg", "display_name": "Batch CLIPSeg", "description": "\nSegments an image or batch of images using CLIPSeg.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "ColorToMask": {"input": {"required": {"images": ["IMAGE"], "invert": ["BOOLEAN", {"default": false}], "red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "threshold": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["images", "invert", "red", "green", "blue", "threshold", "per_batch"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ColorToMask", "display_name": "Color To Mask", "description": "\nConverts chosen RGB value to a mask.  \nWith batch inputs, the **per_batch**  \ncontrols the number of images processed at once.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "CreateGradientMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateGradientMask", "display_name": "Create Gradient Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateTextMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "text_x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "font_size": ["INT", {"default": 32, "min": 8, "max": 4096, "step": 1}], "font_color": ["STRING", {"default": "white"}], "text": ["STRING", {"default": "HELLO!", "multiline": true}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "start_rotation": ["INT", {"default": 0, "min": 0, "max": 359, "step": 1}], "end_rotation": ["INT", {"default": 0, "min": -359, "max": 359, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "text_x", "text_y", "font_size", "font_color", "text", "font", "width", "height", "start_rotation", "end_rotation"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "CreateTextMask", "display_name": "Create Text Mask", "description": "\nCreates a text image and mask.  \nLooks for fonts from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n  \nIf start_rotation and/or end_rotation are different values,  \ncreates animation between them.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "CreateAudioMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 16, "min": 1, "max": 255, "step": 1}], "scale": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 2.0, "step": 0.01}], "audio_path": ["STRING", {"default": "audio.wav"}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "scale", "audio_path", "width", "height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CreateAudioMask", "display_name": "Create Audio Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/deprecated", "output_node": false}, "CreateFadeMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 2, "min": 2, "max": 10000, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "start_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "midpoint_level": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "end_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "midpoint_frame": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height", "interpolation", "start_level", "midpoint_level", "end_level", "midpoint_frame"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateFadeMask", "display_name": "Create Fade Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/deprecated", "output_node": false}, "CreateFadeMaskAdvanced": {"input": {"required": {"points_string": ["STRING", {"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n", "multiline": true}], "invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 16, "min": 2, "max": 10000, "step": 1}], "width": ["INT", {"default": 512, "min": 1, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 4096, "step": 1}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]]}}, "input_order": {"required": ["points_string", "invert", "frames", "width", "height", "interpolation"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "CreateFadeMaskAdvanced", "display_name": "Create Fade Mask Advanced", "description": "\nCreate a batch of masks interpolated between given frames and values. \nUses same syntax as Fizz' BatchValueSchedule.\nFirst value is the frame index (not that this starts from 0, not 1) \nand the second value inside the brackets is the float value of the mask in range 0.0 - 1.0  \n\nFor example the default values:  \n0:(0.0)  \n7:(1.0)  \n15:(0.0)  \n  \nWould create a mask batch fo 16 frames, starting from black, \ninterpolating with the chosen curve to fully white at the 8th frame, \nand interpolating from that to fully black at the 16th frame.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateFluidMask": {"input": {"required": {"invert": ["BOOLEAN", {"default": false}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "width": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 256, "min": 16, "max": 4096, "step": 1}], "inflow_count": ["INT", {"default": 3, "min": 0, "max": 255, "step": 1}], "inflow_velocity": ["INT", {"default": 1, "min": 0, "max": 255, "step": 1}], "inflow_radius": ["INT", {"default": 8, "min": 0, "max": 255, "step": 1}], "inflow_padding": ["INT", {"default": 50, "min": 0, "max": 255, "step": 1}], "inflow_duration": ["INT", {"default": 60, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["invert", "frames", "width", "height", "inflow_count", "inflow_velocity", "inflow_radius", "inflow_padding", "inflow_duration"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "CreateFluidMask", "display_name": "Create Fluid Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateShapeMask": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "location_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "location_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "grow": ["INT", {"default": 0, "min": -512, "max": 512, "step": 1}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}]}}, "input_order": {"required": ["shape", "frames", "location_x", "location_y", "grow", "frame_width", "frame_height", "shape_width", "shape_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateShapeMask", "display_name": "Create Shape Mask", "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \nGrow value is the amount to grow the shape on each frame, creating animated masks.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateVoronoiMask": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2, "max": 4096, "step": 1}], "num_points": ["INT", {"default": 15, "min": 1, "max": 4096, "step": 1}], "line_width": ["INT", {"default": 4, "min": 1, "max": 4096, "step": 1}], "speed": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["frames", "num_points", "line_width", "speed", "frame_width", "frame_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateVoronoiMask", "display_name": "Create Voronoi Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateMagicMask": {"input": {"required": {"frames": ["INT", {"default": 16, "min": 2, "max": 4096, "step": 1}], "depth": ["INT", {"default": 12, "min": 1, "max": 500, "step": 1}], "distortion": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 100.0, "step": 0.01}], "seed": ["INT", {"default": 123, "min": 0, "max": 99999999, "step": 1}], "transitions": ["INT", {"default": 1, "min": 1, "max": 20, "step": 1}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}]}}, "input_order": {"required": ["frames", "depth", "distortion", "seed", "transitions", "frame_width", "frame_height"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateMagicMask", "display_name": "Create Magic Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "GetMaskSizeAndCount": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["mask", "width", "height", "count"], "name": "GetMaskSizeAndCount", "display_name": "Get Mask Size & Count", "description": "\nReturns the width, height and batch size of the mask,  \nand passes it through unchanged.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "GrowMaskWithBlur": {"input": {"required": {"mask": ["MASK"], "expand": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "incremental_expandrate": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "tapered_corners": ["BOOLEAN", {"default": true}], "flip_input": ["BOOLEAN", {"default": false}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "lerp_alpha": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "decay_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"fill_holes": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mask", "expand", "incremental_expandrate", "tapered_corners", "flip_input", "blur_radius", "lerp_alpha", "decay_factor"], "optional": ["fill_holes"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "GrowMaskWithBlur", "display_name": "Grow Mask With Blur", "description": "\n# GrowMaskWithBlur\n- mask: Input mask or mask batch\n- expand: Expand or contract mask or mask batch by a given amount\n- incremental_expandrate: increase expand rate by a given amount per frame\n- tapered_corners: use tapered corners\n- flip_input: flip input mask\n- blur_radius: value higher than 0 will blur the mask\n- lerp_alpha: alpha value for interpolation between frames\n- decay_factor: decay value for interpolation between frames\n- fill_holes: fill holes in the mask (slow)", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "MaskBatchMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "mask_1": ["MASK"], "mask_2": ["MASK"]}}, "input_order": {"required": ["inputcount", "mask_1", "mask_2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["masks"], "name": "MaskBatchMulti", "display_name": "Mask Batch Multi", "description": "\nCreates an image batch from multiple masks.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "OffsetMask": {"input": {"required": {"mask": ["MASK"], "x": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "angle": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1, "display": "number"}], "duplication_factor": ["INT", {"default": 1, "min": 1, "max": 1000, "step": 1, "display": "number"}], "roll": ["BOOLEAN", {"default": false}], "incremental": ["BOOLEAN", {"default": false}], "padding_mode": [["empty", "border", "reflection"], {"default": "empty"}]}}, "input_order": {"required": ["mask", "x", "y", "angle", "duplication_factor", "roll", "incremental", "padding_mode"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "OffsetMask", "display_name": "Offset Mask", "description": "\nOffsets the mask by the specified amount.  \n - mask: Input mask or mask batch\n - x: Horizontal offset\n - y: Vertical offset\n - angle: Angle in degrees\n - roll: roll edge wrapping\n - duplication_factor: Number of times to duplicate the mask to form a batch\n - border padding_mode: Padding mode for the mask\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "RemapMaskRange": {"input": {"required": {"mask": ["MASK"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["mask", "min", "max"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "RemapMaskRange", "display_name": "Remap Mask Range", "description": "\nSets new min and max values for the mask.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "ResizeMask": {"input": {"required": {"mask": ["MASK"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1, "display": "number"}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1, "display": "number"}], "keep_proportions": ["BOOLEAN", {"default": false}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["mask", "width", "height", "keep_proportions", "upscale_method", "crop"]}, "output": ["MASK", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["mask", "width", "height"], "name": "ResizeMask", "display_name": "Resize Mask", "description": "\nResizes the mask or batch of masks to the specified width and height.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "RoundMask": {"input": {"required": {"mask": ["MASK"]}}, "input_order": {"required": ["mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "RoundMask", "display_name": "Round Mask", "description": "\nRounds the mask or batch of masks to a binary mask.  \n<img src=\"https://github.com/kijai/ComfyUI-KJNodes/assets/40791699/52c85202-f74e-4b96-9dac-c8bda5ddcc40\" width=\"300\" height=\"250\" alt=\"RoundMask example\">\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "SeparateMasks": {"input": {"required": {"mask": ["MASK"], "size_threshold_width": ["INT", {"default": 256, "min": 0.0, "max": 4096, "step": 1}], "size_threshold_height": ["INT", {"default": 256, "min": 0.0, "max": 4096, "step": 1}], "mode": [["convex_polygons", "area"]], "max_poly_points": ["INT", {"default": 8, "min": 3, "max": 32, "step": 1}]}}, "input_order": {"required": ["mask", "size_threshold_width", "size_threshold_height", "mode", "max_poly_points"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "SeparateMasks", "display_name": "Separate Masks", "description": "Separates a mask into multiple masks based on the size of the connected components.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": true}, "AddLabel": {"input": {"required": {"image": ["IMAGE"], "text_x": ["INT", {"default": 10, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 2, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 48, "min": -1, "max": 4096, "step": 1}], "font_size": ["INT", {"default": 32, "min": 0, "max": 4096, "step": 1}], "font_color": ["STRING", {"default": "white"}], "label_color": ["STRING", {"default": "black"}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "text": ["STRING", {"default": "Text"}], "direction": [["up", "down", "left", "right", "overlay"], {"default": "up"}]}, "optional": {"caption": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["image", "text_x", "text_y", "height", "font_size", "font_color", "label_color", "font", "text", "direction"], "optional": ["caption"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AddLabel", "display_name": "Add Label", "description": "\nCreates a new with the given text, and concatenates it to  \neither above or below the input image.  \nNote that this changes the input image's height!  \nFonts are loaded from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "ColorMatch": {"input": {"required": {"image_ref": ["IMAGE"], "image_target": ["IMAGE"], "method": [["mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"default": "mkl"}]}, "optional": {"strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image_ref", "image_target", "method"], "optional": ["strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ColorMatch", "display_name": "Color Match", "description": "\ncolor-matcher enables color transfer across images which comes in handy for automatic  \ncolor-grading of photographs, paintings and film sequences as well as light-field  \nand stopmotion corrections.  \n\nThe methods behind the mappings are based on the approach from Reinhard et al.,  \nthe Monge-Kantorovich Linearization (MKL) as proposed by Pitie et al. and our analytical solution  \nto a Multi-Variate Gaussian Distribution (MVGD) transfer in conjunction with classical histogram   \nmatching. As shown below our HM-MVGD-HM compound outperforms existing methods.   \nhttps://github.com/hahnec/color-matcher/\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageTensorList": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTensorList", "display_name": "Image Tensor List", "description": "\nCreates an image list from the input images.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CrossFadeImages": {"input": {"required": {"images_1": ["IMAGE"], "images_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_start_index": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "start_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images_1", "images_2", "interpolation", "transition_start_index", "transitioning_frames", "start_level", "end_level"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CrossFadeImages", "display_name": "Cross Fade Images", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CrossFadeImagesMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "interpolation", "transitioning_frames"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CrossFadeImagesMulti", "display_name": "Cross Fade Images Multi", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GetImagesFromBatchIndexed": {"input": {"required": {"images": ["IMAGE"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}}, "input_order": {"required": ["images", "indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "GetImagesFromBatchIndexed", "display_name": "Get Images From Batch Indexed", "description": "\nSelects and returns the images at the specified indices as an image batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GetImageRangeFromBatch": {"input": {"required": {"start_index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["start_index", "num_frames"], "optional": ["images", "masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "GetImageRangeFromBatch", "display_name": "Get Image or Mask Range From Batch", "description": "\nReturns a range of images from a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GetLatentRangeFromBatch": {"input": {"required": {"latents": ["LATENT"], "start_index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": -1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["latents", "start_index", "num_frames"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GetLatentRangeFromBatch", "display_name": "Get Latent Range From Batch", "description": "\nReturns a range of latents from a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "GetImageSizeAndCount": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "INT", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["image", "width", "height", "count"], "name": "GetImageSizeAndCount", "display_name": "Get Image Size & Count", "description": "\nReturns width, height and batch size of the image,  \nand passes it through unchanged.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "FastPreview": {"input": {"required": {"image": ["IMAGE"], "format": [["JPEG", "PNG", "WEBP"], {"default": "JPEG"}], "quality": ["INT", {"default": 75, "min": 1, "max": 100, "step": 1}]}}, "input_order": {"required": ["image", "format", "quality"]}, "output": [], "output_is_list": [], "output_name": [], "name": "FastPreview", "display_name": "Fast Preview", "description": "Experimental node for faster image previews by displaying through base64 it without saving to disk.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": true}, "ImageAndMaskPreview": {"input": {"required": {"mask_opacity": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_color": ["STRING", {"default": "255, 255, 255"}], "pass_through": ["BOOLEAN", {"default": false}]}, "optional": {"image": ["IMAGE"], "mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask_opacity", "mask_color", "pass_through"], "optional": ["image", "mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["composite"], "name": "ImageAndMaskPreview", "display_name": "ImageAndMaskPreview", "description": "\nPreview an image or a mask, when both inputs are used  \ncomposites the mask on top of the image.\nwith pass_through on the preview is disabled and the  \ncomposite is returned from the composite slot instead,  \nthis allows for the preview to be passed for video combine  \nnodes for example.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": true}, "ImageAddMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "blending": [["add", "subtract", "multiply", "difference"], {"default": "add"}], "blend_amount": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "blending", "blend_amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageAddMulti", "display_name": "Image Add Multi", "description": "\nAdd blends multiple images together.    \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"]}}, "input_order": {"required": ["inputcount", "image_1", "image_2"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageBatchMulti", "display_name": "Image Batch Multi", "description": "\nCreates an image batch from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchRepeatInterleaving": {"input": {"required": {"images": ["IMAGE"], "repeats": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["images", "repeats"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchRepeatInterleaving", "display_name": "ImageBatchRepeatInterleaving", "description": "\nRepeats each image in a batch by the specified number of times.  \nExample batch of 5 images: 0, 1 ,2, 3, 4  \nwith repeats 2 becomes batch of 10 images: 0, 0, 1, 1, 2, 2, 3, 3, 4, 4  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageBatchTestPattern": {"input": {"required": {"batch_size": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "start_from": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "text_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "text_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 255, "min": 8, "max": 4096, "step": 1}]}}, "input_order": {"required": ["batch_size", "start_from", "text_x", "text_y", "width", "height", "font", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchTestPattern", "display_name": "Image Batch Test Pattern", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "ImageConcanate": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image1", "image2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConcanate", "display_name": "Image Concatenate", "description": "\nConcatenates the image2 to image1 in the specified direction.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageConcatFromBatch": {"input": {"required": {"images": ["IMAGE"], "num_columns": ["INT", {"default": 3, "min": 1, "max": 255, "step": 1}], "match_image_size": ["BOOLEAN", {"default": false}], "max_resolution": ["INT", {"default": 4096}]}}, "input_order": {"required": ["images", "num_columns", "match_image_size", "max_resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageConcatFromBatch", "display_name": "Image Concatenate From Batch", "description": "\n    Concatenates images from a batch into a grid with a specified number of columns.\n    ", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageConcatMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "direction": [["right", "down", "left", "up"], {"default": "right"}], "match_image_size": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "direction", "match_image_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "ImageConcatMulti", "display_name": "Image Concatenate Multi", "description": "\nCreates an image from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageCropByMask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageCropByMask", "display_name": "Image Crop By Mask", "description": "Crops the input images based on the provided mask.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageCropByMaskAndResize": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "base_resolution": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "padding": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "min_crop_resolution": ["INT", {"default": 128, "min": 0, "max": 16384, "step": 8}], "max_crop_resolution": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "mask", "base_resolution", "padding", "min_crop_resolution", "max_crop_resolution"]}, "output": ["IMAGE", "MASK", "BBOX"], "output_is_list": [false, false, false], "output_name": ["images", "masks", "bbox"], "name": "ImageCropByMaskAndResize", "display_name": "Image Crop By Mask And Resize", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageCropByMaskBatch": {"input": {"required": {"image": ["IMAGE"], "masks": ["MASK"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "padding": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "preserve_size": ["BOOLEAN", {"default": false}], "bg_color": ["STRING", {"default": "0, 0, 0", "tooltip": "Color as RGB values in range 0-255, separated by commas."}]}}, "input_order": {"required": ["image", "masks", "width", "height", "padding", "preserve_size", "bg_color"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "ImageCropByMaskBatch", "display_name": "Image Crop By Mask Batch", "description": "Crops the input images based on the provided masks.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageUncropByMask": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "mask": ["MASK"], "bbox": ["BBOX"]}}, "input_order": {"required": ["destination", "source", "mask", "bbox"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageUncropByMask", "display_name": "Image Uncrop By Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGrabPIL": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "delay": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["x", "y", "width", "height", "num_frames", "delay"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "ImageGrabPIL", "display_name": "Image Grab PIL", "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGridComposite2x2": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "image3", "image4"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridComposite2x2", "display_name": "Image Grid Composite 2x2", "description": "\nConcatenates the 4 input images into a 2x2 grid. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGridComposite3x3": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"], "image5": ["IMAGE"], "image6": ["IMAGE"], "image7": ["IMAGE"], "image8": ["IMAGE"], "image9": ["IMAGE"]}}, "input_order": {"required": ["image1", "image2", "image3", "image4", "image5", "image6", "image7", "image8", "image9"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridComposite3x3", "display_name": "Image Grid Composite 3x3", "description": "\nConcatenates the 9 input images into a 3x3 grid. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageGridtoBatch": {"input": {"required": {"image": ["IMAGE"], "columns": ["INT", {"default": 3, "min": 1, "max": 8, "tooltip": "The number of columns in the grid."}], "rows": ["INT", {"default": 0, "min": 1, "max": 8, "tooltip": "The number of rows in the grid. Set to 0 for automatic calculation."}]}}, "input_order": {"required": ["image", "columns", "rows"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageGridtoBatch", "display_name": "Image Grid To Batch", "description": "Converts a grid of images to a batch of images.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageNoiseAugmentation": {"input": {"required": {"image": ["IMAGE"], "noise_aug_strength": ["FLOAT", {"default": null, "min": 0.0, "max": 100.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["image", "noise_aug_strength", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNoiseAugmentation", "display_name": "Image Noise Augmentation", "description": "\n    Add noise to an image.  \n    ", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageNormalize_Neg1_To_1": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageNormalize_Neg1_To_1", "display_name": "Image Normalize -1 to 1", "description": "\nNormalize the images to be in the range [-1, 1]  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImagePass": {"input": {"required": {}, "optional": {"image": ["IMAGE"]}}, "input_order": {"required": [], "optional": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagePass", "display_name": "ImagePass", "description": "\nPasses the image through without modifying it.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImagePadKJ": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "extra_padding": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "pad_mode": [["edge", "color"]], "color": ["STRING", {"default": "0, 0, 0", "tooltip": "Color as RGB values in range 0-255, separated by commas."}]}, "optional": {"masks": ["MASK"]}}, "input_order": {"required": ["image", "left", "right", "top", "bottom", "extra_padding", "pad_mode", "color"], "optional": ["masks"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["images", "masks"], "name": "ImagePadKJ", "display_name": "ImagePad KJ", "description": "Pad the input image and optionally mask with the specified padding.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImagePadForOutpaintMasked": {"input": {"required": {"image": ["IMAGE"], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "left", "top", "right", "bottom", "feathering"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaintMasked", "display_name": "Image Pad For Outpaint Masked", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "image", "output_node": false}, "ImagePadForOutpaintTargetSize": {"input": {"required": {"image": ["IMAGE"], "target_width": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "target_height": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "feathering": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 1}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["image", "target_width", "target_height", "feathering", "upscale_method"], "optional": ["mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePadForOutpaintTargetSize", "display_name": "Image Pad For Outpaint Target Size", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "image", "output_node": false}, "ImagePrepForICLora": {"input": {"required": {"reference_image": ["IMAGE"], "output_width": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "output_height": ["INT", {"default": 1024, "min": 1, "max": 4096, "step": 1}], "border_width": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}, "optional": {"latent_image": ["IMAGE"], "latent_mask": ["MASK"], "reference_mask": ["MASK"]}}, "input_order": {"required": ["reference_image", "output_width", "output_height", "border_width"], "optional": ["latent_image", "latent_mask", "reference_mask"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImagePrepForICLora", "display_name": "Image Prep For ICLora", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "image", "output_node": false}, "ImageResizeKJ": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "upscale_method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"]], "keep_proportion": ["BOOLEAN", {"default": false}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}]}, "optional": {"width_input": ["INT", {"forceInput": true}], "height_input": ["INT", {"forceInput": true}], "get_image_size": ["IMAGE"], "crop": [["disabled", "center"]]}}, "input_order": {"required": ["image", "width", "height", "upscale_method", "keep_proportion", "divisible_by"], "optional": ["width_input", "height_input", "get_image_size", "crop"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageResizeKJ", "display_name": "Resize Image", "description": "\nResizes the image to the specified width and height.  \nSize can be retrieved from the inputs, and the final scale  \nis  determined in this order of importance:  \n- get_image_size  \n- width_input and height_input  \n- width and height widgets  \n  \nKeep proportions keeps the aspect ratio of the image, by  \nhighest dimension.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ImageUpscaleWithModelBatched": {"input": {"required": {"upscale_model": ["UPSCALE_MODEL"], "images": ["IMAGE"], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["upscale_model", "images", "per_batch"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUpscaleWithModelBatched", "display_name": "Image Upscale With Model Batched", "description": "\nSame as ComfyUI native model upscaling node,  \nbut allows setting sub-batches for reduced VRAM usage.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "InsertImagesToBatchIndexed": {"input": {"required": {"original_images": ["IMAGE"], "images_to_insert": ["IMAGE"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}]}}, "input_order": {"required": ["original_images", "images_to_insert", "indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "InsertImagesToBatchIndexed", "display_name": "Insert Images To Batch Indexed", "description": "\nInserts images at the specified indices into the original image batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "InsertLatentToIndexed": {"input": {"required": {"source": ["LATENT"], "destination": ["LATENT"], "index": ["INT", {"default": 0, "min": -1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["source", "destination", "index"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InsertLatentToIndexed", "display_name": "Insert Latent To Index", "description": "\nInserts a latent at the specified index into the original latent batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "LoadAndResizeImage": {"input": {"required": {"image": [["148354449be94dcd2b8993c901253cdf.jpg", "2a40229891e585339c49d5f87bfe80d4.jpg", "44914-Ford-car-muscle_cars-4283821840.jpg", "58a00e372c9b2abc148517e663ee0a2f.jpg", "635b41fcb0d9d5bd450d10eb93dc1ca8-829068172.jpg", "7.png", "755690-3113977175.jpg", "A-stunning-living-room-featuring-key-elements-of-Brutalist-interior-design-780026718.webp", "FLUX_Redux_00004_.png", "FLUX_Redux_00005_.png", "FLUX_Redux_00008_.png", "FLUX_Redux_00009_.png", "FLUX_Redux_00011_.png", "FLUX_Redux_00012_.png", "FLUX_Redux_00013_.png", "Image_00015_.png", "Image_00018_.png", "Image_00019_.png", "Image_00021_.png", "Image_00033_.png", "Image_00058_.png", "MCW_ARTILLERY_GALLERY_04.webp", "MCW_TROOPER_WEB_GALLERY_01_2c721bd6-129b-40ac-9dbf-9c776b998521.webp", "MCW_TROOPER_WEB_GALLERY_02_06cf5825-3b98-4640-b549-5166754ac3c1.webp", "MCW_TROOPER_WEB_GALLERY_03.webp", "MCW_TROOPER_WEB_GALLERY_04.webp", "Screenshot from 2025-04-01 21-35-49.png", "Screenshot from 2025-04-16 20-35-52.png", "Zero-123__00017_.png", "a08715fd9dc4b7b812574dd4f5ae7fe7.jpg", "ahkibarar.jpg", "anime-front.png", "anime-rear.png", "anime-side.png", "asba-drums-2lnnbIHP8MM-unsplash.jpg", "bigstock-Portrait-of-a-smiling-woman-wi-86892704-2260387209.jpg", "blonde-hair-blue-eyes-girl-side-part-long-straight-style-2719680466.jpg", "camaroSS.png", "canny_process_00024_.png", "canny_process_00031_.png", "canny_res_00019_.png", "canny_res_00030_.png", "canny_res_00035_.png", "canny_res_00052_.png", "canny_res_00053_.png", "canny_res_00059_.png", "canny_res_00060_.png", "canny_res_00061_.png", "canny_res_00063_.png", "canny_res_00064_.png", "canny_res_00067_.png", "canny_res_00069_.png", "cycles__00001_.png", "cycles__00004_.png", "cycles__00005_.png", "example.png", "image1.png", "image8-2x2.png", "image8.png", "l-intro-1695760417-2303340266.jpg", "madmax_firecar4-2484916880.jpg", "man5-3395367803.jpg", "motobike.jpg", "tokyotreat_akihabara-adventure-thumbnail-3092584056.png", "typical_humanoid_mech.png", "what-is-man-1000x600-1940545957.jpg", "wp11174249-935136148.jpg"], {"image_upload": true}], "resize": ["BOOLEAN", {"default": false}], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 8}], "repeat": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "keep_proportion": ["BOOLEAN", {"default": false}], "divisible_by": ["INT", {"default": 2, "min": 0, "max": 512, "step": 1}], "mask_channel": [["alpha", "red", "green", "blue"], {"tooltip": "Channel to use for the mask output"}], "background_color": ["STRING", {"default": "", "tooltip": "Fills the alpha channel with the specified color."}]}}, "input_order": {"required": ["image", "resize", "width", "height", "repeat", "keep_proportion", "divisible_by", "mask_channel", "background_color"]}, "output": ["IMAGE", "MASK", "INT", "INT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["image", "mask", "width", "height", "image_path"], "name": "LoadAndResizeImage", "display_name": "Load & Resize Image", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "LoadImagesFromFolderKJ": {"input": {"required": {"folder": ["STRING", {"default": ""}], "width": ["INT", {"default": 1024, "min": 64, "step": 1}], "height": ["INT", {"default": 1024, "min": 64, "step": 1}], "keep_aspect_ratio": [["crop", "pad", "stretch"]]}, "optional": {"image_load_cap": ["INT", {"default": 0, "min": 0, "step": 1}], "start_index": ["INT", {"default": 0, "min": 0, "step": 1}], "include_subfolders": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["folder", "width", "height", "keep_aspect_ratio"], "optional": ["image_load_cap", "start_index", "include_subfolders"]}, "output": ["IMAGE", "MASK", "INT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "count", "image_path"], "name": "LoadImagesFromFolderKJ", "display_name": "Load Images From Folder (KJ)", "description": "Loads images from a folder into a batch, images are resized and loaded into a batch.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "MergeImageChannels": {"input": {"required": {"red": ["IMAGE"], "green": ["IMAGE"], "blue": ["IMAGE"]}, "optional": {"alpha": ["MASK", {"default": null}]}}, "input_order": {"required": ["red", "green", "blue"], "optional": ["alpha"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "MergeImageChannels", "display_name": "Merge Image Channels", "description": "\nMerges channel data into an image.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "PreviewAnimation": {"input": {"required": {"fps": ["FLOAT", {"default": 8.0, "min": 0.01, "max": 1000.0, "step": 0.01}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["fps"], "optional": ["images", "masks"]}, "output": [], "output_is_list": [], "output_name": [], "name": "PreviewAnimation", "display_name": "Preview Animation", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": true}, "RemapImageRange": {"input": {"required": {"image": ["IMAGE"], "min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 1.0, "step": 0.01}], "max": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "clamp": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "min", "max", "clamp"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RemapImageRange", "display_name": "Remap Image Range", "description": "\nRemaps the image values to the specified range. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ReverseImageBatch": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ReverseImageBatch", "display_name": "Reverse Image Batch", "description": "\nReverses the order of the images in a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "ReplaceImagesInBatch": {"input": {"required": {"original_images": ["IMAGE"], "replacement_images": ["IMAGE"], "start_index": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["original_images", "replacement_images", "start_index"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ReplaceImagesInBatch", "display_name": "Replace Images In Batch", "description": "\nReplaces the images in a batch, starting from the specified start index,  \nwith the replacement images.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "SaveImageWithAlpha": {"input": {"required": {"images": ["IMAGE"], "mask": ["MASK"], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "mask", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageWithAlpha", "display_name": "Save Image With Alpha", "description": "\nSaves an image and mask as .PNG with the mask as the alpha channel. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": true}, "SaveImageKJ": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "output_folder": ["STRING", {"default": "output", "tooltip": "The folder to save the images to."}]}, "optional": {"caption_file_extension": ["STRING", {"default": ".txt", "tooltip": "The extension for the caption file."}], "caption": ["STRING", {"forceInput": true, "tooltip": "string to save as .txt file"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "output_folder"], "optional": ["caption_file_extension", "caption"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["filename"], "name": "SaveImageKJ", "display_name": "Save Image KJ", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": true}, "ShuffleImageBatch": {"input": {"required": {"images": ["IMAGE"], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["images", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ShuffleImageBatch", "display_name": "Shuffle Image Batch", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "SplitImageChannels": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "MASK"], "output_is_list": [false, false, false, false], "output_name": ["red", "green", "blue", "mask"], "name": "SplitImageChannels", "display_name": "Split Image Channels", "description": "\nSplits image channels into images where the selected channel  \nis repeated for all channels, and the alpha as a mask. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "TransitionImagesMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_type": [["horizontal slide", "vertical slide", "box", "circle", "horizontal door", "vertical door", "fade"]], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "reverse": ["BOOLEAN", {"default": false}], "device": [["CPU", "GPU"], {"default": "CPU"}]}}, "input_order": {"required": ["inputcount", "image_1", "image_2", "interpolation", "transition_type", "transitioning_frames", "blur_radius", "reverse", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TransitionImagesMulti", "display_name": "Transition Images Multi", "description": "\nCreates transitions between images.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "TransitionImagesInBatch": {"input": {"required": {"images": ["IMAGE"], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out", "bounce", "elastic", "glitchy", "exponential_ease_out"]], "transition_type": [["horizontal slide", "vertical slide", "box", "circle", "horizontal door", "vertical door", "fade"]], "transitioning_frames": ["INT", {"default": 1, "min": 0, "max": 4096, "step": 1}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100.0, "step": 0.1}], "reverse": ["BOOLEAN", {"default": false}], "device": [["CPU", "GPU"], {"default": "CPU"}]}}, "input_order": {"required": ["images", "interpolation", "transition_type", "transitioning_frames", "blur_radius", "reverse", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TransitionImagesInBatch", "display_name": "Transition Images In Batch", "description": "\nCreates transitions between images in a batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "BatchCropFromMask": {"input": {"required": {"original_images": ["IMAGE"], "masks": ["MASK"], "crop_size_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001}], "bbox_smooth_alpha": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["original_images", "masks", "crop_size_mult", "bbox_smooth_alpha"]}, "output": ["IMAGE", "IMAGE", "BBOX", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["original_images", "cropped_images", "bboxes", "width", "height"], "name": "BatchCropFromMask", "display_name": "Batch Crop From Mask", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BatchCropFromMaskAdvanced": {"input": {"required": {"original_images": ["IMAGE"], "masks": ["MASK"], "crop_size_mult": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "bbox_smooth_alpha": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["original_images", "masks", "crop_size_mult", "bbox_smooth_alpha"]}, "output": ["IMAGE", "IMAGE", "MASK", "IMAGE", "MASK", "BBOX", "BBOX", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["original_images", "cropped_images", "cropped_masks", "combined_crop_image", "combined_crop_masks", "bboxes", "combined_bounding_box", "bbox_width", "bbox_height"], "name": "BatchCropFromMaskAdvanced", "display_name": "Batch Crop From Mask Advanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "FilterZeroMasksAndCorrespondingImages": {"input": {"required": {"masks": ["MASK"]}, "optional": {"original_images": ["IMAGE"]}}, "input_order": {"required": ["masks"], "optional": ["original_images"]}, "output": ["MASK", "IMAGE", "IMAGE", "INDEXES"], "output_is_list": [false, false, false, false], "output_name": ["non_zero_masks_out", "non_zero_mask_images_out", "zero_mask_images_out", "zero_mask_images_out_indexes"], "name": "FilterZeroMasksAndCorrespondingImages", "display_name": "FilterZeroMasksAndCorrespondingImages", "description": "\nFilter out all the empty (i.e. all zero) mask in masks  \nAlso filter out all the corresponding images in original_images by indexes if provide  \n  \noriginal_images (optional): If provided, need have same length as masks.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "InsertImageBatchByIndexes": {"input": {"required": {"images": ["IMAGE"], "images_to_insert": ["IMAGE"], "insert_indexes": ["INDEXES"]}}, "input_order": {"required": ["images", "images_to_insert", "insert_indexes"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images_after_insert"], "name": "InsertImageBatchByIndexes", "display_name": "Insert Image Batch By Indexes", "description": "\nThis node is designed to be use with node FilterZeroMasksAndCorrespondingImages\nIt inserts the images_to_insert into images according to insert_indexes\n\nReturns:\n    images_after_insert: updated original images with origonal sequence order\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "BatchUncrop": {"input": {"required": {"original_images": ["IMAGE"], "cropped_images": ["IMAGE"], "bboxes": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_rescale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "border_top": ["BOOLEAN", {"default": true}], "border_bottom": ["BOOLEAN", {"default": true}], "border_left": ["BOOLEAN", {"default": true}], "border_right": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["original_images", "cropped_images", "bboxes", "border_blending", "crop_rescale", "border_top", "border_bottom", "border_left", "border_right"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchUncrop", "display_name": "Batch Uncrop", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BatchUncropAdvanced": {"input": {"required": {"original_images": ["IMAGE"], "cropped_images": ["IMAGE"], "cropped_masks": ["MASK"], "combined_crop_mask": ["MASK"], "bboxes": ["BBOX"], "border_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_rescale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "use_combined_mask": ["BOOLEAN", {"default": false}], "use_square_mask": ["BOOLEAN", {"default": true}]}, "optional": {"combined_bounding_box": ["BBOX", {"default": null}]}}, "input_order": {"required": ["original_images", "cropped_images", "cropped_masks", "combined_crop_mask", "bboxes", "border_blending", "crop_rescale", "use_combined_mask", "use_square_mask"], "optional": ["combined_bounding_box"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BatchUncropAdvanced", "display_name": "Batch Uncrop Advanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "SplitBboxes": {"input": {"required": {"bboxes": ["BBOX"], "index": ["INT", {"default": 0, "min": 0, "max": 99999999, "step": 1}]}}, "input_order": {"required": ["bboxes", "index"]}, "output": ["BBOX", "BBOX"], "output_is_list": [false, false], "output_name": ["bboxes_a", "bboxes_b"], "name": "SplitBboxes", "display_name": "Split Bboxes", "description": "\nSplits the specified bbox list at the given index into two lists.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BboxToInt": {"input": {"required": {"bboxes": ["BBOX"], "index": ["INT", {"default": 0, "min": 0, "max": 99999999, "step": 1}]}}, "input_order": {"required": ["bboxes", "index"]}, "output": ["INT", "INT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["x_min", "y_min", "width", "height", "center_x", "center_y"], "name": "BboxToInt", "display_name": "Bbox To Int", "description": "\nReturns selected index from bounding box list as integers.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "BboxVisualize": {"input": {"required": {"images": ["IMAGE"], "bboxes": ["BBOX"], "line_width": ["INT", {"default": 1, "min": 1, "max": 10, "step": 1}]}}, "input_order": {"required": ["images", "bboxes", "line_width"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "BboxVisualize", "display_name": "Bbox Visualize", "description": "\nVisualizes the specified bbox on the image.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking", "output_node": false}, "GenerateNoise": {"input": {"required": {"width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 4096, "step": 0.01}], "constant_batch_noise": ["BOOLEAN", {"default": false}], "normalize": ["BOOLEAN", {"default": false}]}, "optional": {"model": ["MODEL"], "sigmas": ["SIGMAS"], "latent_channels": [["4", "16"]], "shape": [["BCHW", "BCTHW", "BTCHW"]]}}, "input_order": {"required": ["width", "height", "batch_size", "seed", "multiplier", "constant_batch_noise", "normalize"], "optional": ["model", "sigmas", "latent_channels", "shape"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GenerateNoise", "display_name": "Generate Noise", "description": "\nGenerates noise for injection or to be used as empty latents on samplers with add_noise off.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "FlipSigmasAdjusted": {"input": {"required": {"sigmas": ["SIGMAS"], "divide_by_last_sigma": ["BOOLEAN", {"default": false}], "divide_by": ["FLOAT", {"default": 1, "min": 1, "max": 255, "step": 0.01}], "offset_by": ["INT", {"default": 1, "min": -100, "max": 100, "step": 1}]}}, "input_order": {"required": ["sigmas", "divide_by_last_sigma", "divide_by", "offset_by"]}, "output": ["SIGMAS", "STRING"], "output_is_list": [false, false], "output_name": ["SIGMAS", "sigmas_string"], "name": "FlipSigmasAdjusted", "display_name": "Flip Sigmas Adjusted", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "InjectNoiseToLatent": {"input": {"required": {"latents": ["LATENT"], "strength": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 200.0, "step": 0.0001}], "noise": ["LATENT"], "normalize": ["BOOLEAN", {"default": false}], "average": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"], "mix_randn_amount": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["latents", "strength", "noise", "normalize", "average"], "optional": ["mask", "mix_randn_amount", "seed"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InjectNoiseToLatent", "display_name": "Inject Noise To Latent", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "CustomSigmas": {"input": {"required": {"sigmas_string": ["STRING", {"default": "14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029", "multiline": true}], "interpolate_to_steps": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["sigmas_string", "interpolate_to_steps"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "CustomSigmas", "display_name": "Custom Sigmas", "description": "\nCreates a sigmas tensor from a string of comma separated values.  \nExamples: \n   \nNvidia's optimized AYS 10 step schedule for SD 1.5:  \n14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029  \nSDXL:   \n14.615, 6.315, 3.771, 2.181, 1.342, 0.862, 0.555, 0.380, 0.234, 0.113, 0.029  \nSVD:  \n700.00, 54.5, 15.886, 7.977, 4.248, 1.789, 0.981, 0.403, 0.173, 0.034, 0.002  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "StringToFloatList": {"input": {"required": {"string": ["STRING", {"default": "1, 2, 3", "multiline": true}]}}, "input_order": {"required": ["string"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "StringToFloatList", "display_name": "String to Float List", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "WidgetToString": {"input": {"required": {"id": ["INT", {"default": 0}], "widget_name": ["STRING", {"multiline": false}], "return_all": ["BOOLEAN", {"default": false}]}, "optional": {"any_input": ["*", {}], "node_title": ["STRING", {"multiline": false}], "allowed_float_decimals": ["INT", {"default": 2, "min": 0, "max": 10, "tooltip": "Number of decimal places to display for float values"}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "prompt": "PROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["id", "widget_name", "return_all"], "optional": ["any_input", "node_title", "allowed_float_decimals"], "hidden": ["extra_pnginfo", "prompt", "unique_id"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "WidgetToString", "display_name": "Widget To String", "description": "\nSelects a node and it's specified widget and outputs the value as a string.  \nIf no node id or title is provided it will use the 'any_input' link and use that node.  \nTo see node id's, enable node id display from Manager badge menu.  \nAlternatively you can search with the node title. Node titles ONLY exist if they  \nare manually edited!  \nThe 'any_input' is required for making sure the node you want the value from exists in the workflow.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "SaveStringKJ": {"input": {"required": {"string": ["STRING", {"forceInput": true, "tooltip": "string to save as .txt file"}], "filename_prefix": ["STRING", {"default": "text", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "output_folder": ["STRING", {"default": "output", "tooltip": "The folder to save the images to."}]}, "optional": {"file_extension": ["STRING", {"default": ".txt", "tooltip": "The extension for the caption file."}]}}, "input_order": {"required": ["string", "filename_prefix", "output_folder"], "optional": ["file_extension"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["filename"], "name": "SaveStringKJ", "display_name": "Save String KJ", "description": "Saves the input string to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": true}, "DummyOut": {"input": {"required": {"any_input": ["*", {}]}}, "input_order": {"required": ["any_input"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "DummyOut", "display_name": "Dummy Out", "description": "\nDoes nothing, used to trigger generic workflow output.    \nA way to get previews in the UI without saving anything to disk.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": true}, "GetLatentsFromBatchIndexed": {"input": {"required": {"latents": ["LATENT"], "indexes": ["STRING", {"default": "0, 1, 2", "multiline": true}], "latent_format": [["BCHW", "BTCHW", "BCTHW"], {"default": "BCHW"}]}}, "input_order": {"required": ["latents", "indexes", "latent_format"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "GetLatentsFromBatchIndexed", "display_name": "Get Latents From Batch Indexed", "description": "\nSelects and returns the latents at the specified indices as an latent batch.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "ScaleBatchPromptSchedule": {"input": {"required": {"input_str": ["STRING", {"forceInput": true, "default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n"}], "old_frame_count": ["INT", {"forceInput": true, "default": 1, "min": 1, "max": 4096, "step": 1}], "new_frame_count": ["INT", {"forceInput": true, "default": 1, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["input_str", "old_frame_count", "new_frame_count"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "ScaleBatchPromptSchedule", "display_name": "Scale Batch Prompt Schedule", "description": "\nScales a batch schedule from Fizz' nodes BatchPromptSchedule\nto a different frame count.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "CameraPoseVisualizer": {"input": {"required": {"pose_file_path": ["STRING", {"default": "", "multiline": false}], "base_xval": ["FLOAT", {"default": 0.2, "min": 0, "max": 100, "step": 0.01}], "zval": ["FLOAT", {"default": 0.3, "min": 0, "max": 100, "step": 0.01}], "scale": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 10.0, "step": 0.01}], "use_exact_fx": ["BOOLEAN", {"default": false}], "relative_c2w": ["BOOLEAN", {"default": true}], "use_viewer": ["BOOLEAN", {"default": false}]}, "optional": {"cameractrl_poses": ["CAMERACTRL_POSES", {"default": null}]}}, "input_order": {"required": ["pose_file_path", "base_xval", "zval", "scale", "use_exact_fx", "relative_c2w", "use_viewer"], "optional": ["cameractrl_poses"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CameraPoseVisualizer", "display_name": "Camera Pose Visualizer", "description": "\nVisualizes the camera poses, from Animatediff-Evolved CameraCtrl Pose  \nor a .txt file with RealEstate camera intrinsics and coordinates, in a 3D plot. \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "AppendStringsToList": {"input": {"required": {"string1": ["STRING", {"default": "", "forceInput": true}], "string2": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["string1", "string2"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "AppendStringsToList", "display_name": "Append Strings To List", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "JoinStrings": {"input": {"required": {"string1": ["STRING", {"default": "", "forceInput": true}], "string2": ["STRING", {"default": "", "forceInput": true}], "delimiter": ["STRING", {"default": " ", "multiline": false}]}}, "input_order": {"required": ["string1", "string2", "delimiter"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "JoinStrings", "display_name": "Join Strings", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "JoinStringMulti": {"input": {"required": {"inputcount": ["INT", {"default": 2, "min": 2, "max": 1000, "step": 1}], "string_1": ["STRING", {"default": "", "forceInput": true}], "string_2": ["STRING", {"default": "", "forceInput": true}], "delimiter": ["STRING", {"default": " ", "multiline": false}], "return_list": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["inputcount", "string_1", "string_2", "delimiter", "return_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["string"], "name": "JoinStringMulti", "display_name": "Join String Multi", "description": "\nCreates single string, or a list of strings, from  \nmultiple input strings.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "SomethingToString": {"input": {"required": {"input": ["*", {}]}, "optional": {"prefix": ["STRING", {"default": ""}], "suffix": ["STRING", {"default": ""}]}}, "input_order": {"required": ["input"], "optional": ["prefix", "suffix"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "SomethingToString", "display_name": "Something To String", "description": "\nConverts any type to a string.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "Sleep": {"input": {"required": {"input": ["*", {}], "minutes": ["INT", {"default": 0, "min": 0, "max": 1439}], "seconds": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 59.99, "step": 0.01}]}}, "input_order": {"required": ["input", "minutes", "seconds"]}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Sleep", "display_name": "Sleep", "description": "\nDelays the execution for the input amount of time.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "VRAM_Debug": {"input": {"required": {"empty_cache": ["BOOLEAN", {"default": true}], "gc_collect": ["BOOLEAN", {"default": true}], "unload_all_models": ["BOOLEAN", {"default": false}]}, "optional": {"any_input": ["*", {}], "image_pass": ["IMAGE"], "model_pass": ["MODEL"]}}, "input_order": {"required": ["empty_cache", "gc_collect", "unload_all_models"], "optional": ["any_input", "image_pass", "model_pass"]}, "output": ["*", "IMAGE", "MODEL", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["any_output", "image_pass", "model_pass", "freemem_before", "freemem_after"], "name": "VRAM_Debug", "display_name": "VRAM Debug", "description": "\nReturns the inputs unchanged, they are only used as triggers,  \nand performs comfy model management functions and garbage collection,  \nreports free VRAM before and after the operations.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "EmptyLatentImagePresets": {"input": {"required": {"dimensions": [["512 x 512 (1:1)", "768 x 512 (1.5:1)", "960 x 512 (1.875:1)", "1024 x 512 (2:1)", "1024 x 576 (1.778:1)", "1536 x 640 (2.4:1)", "1344 x 768 (1.75:1)", "1216 x 832 (1.46:1)", "1152 x 896 (1.286:1)", "1024 x 1024 (1:1)"], {"default": "512 x 512 (1:1)"}], "invert": ["BOOLEAN", {"default": false}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["dimensions", "invert", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["Latent", "Width", "Height"], "name": "EmptyLatentImagePresets", "display_name": "Empty Latent Image Presets", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "EmptyLatentImageCustomPresets": {"input": {"required": {"dimensions": [[]], "invert": ["BOOLEAN", {"default": false}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["dimensions", "invert", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["Latent", "Width", "Height"], "name": "EmptyLatentImageCustomPresets", "display_name": "Empty Latent Image Custom Presets", "description": "\nGenerates an empty latent image with the specified dimensions.  \nThe choices are loaded from 'custom_dimensions.json' in the nodes folder.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/latents", "output_node": false}, "ModelPassThrough": {"input": {"required": {}, "optional": {"model": ["MODEL"]}}, "input_order": {"required": [], "optional": ["model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ModelPassThrough", "display_name": "ModelPass", "description": "\n    Simply passes through the model,\n    workaround for Set node not allowing bypassed inputs.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "ModelSaveKJ": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "diffusion_models/ComfyUI"}], "model_key_prefix": ["STRING", {"default": "model.diffusion_model."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix", "model_key_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ModelSaveKJ", "display_name": "Model Save KJ", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "advanced/model_merging", "output_node": true}, "SetShakkerLabsUnionControlNetType": {"input": {"required": {"control_net": ["CONTROL_NET"], "type": [["auto", "canny", "tile", "depth", "blur", "pose", "gray", "low quality"]]}}, "input_order": {"required": ["control_net", "type"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "SetShakkerLabsUnionControlNetType", "display_name": "Set Shakker Labs Union ControlNet Type", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "conditioning/controlnet", "output_node": false}, "StyleModelApplyAdvanced": {"input": {"required": {"conditioning": ["CONDITIONING"], "style_model": ["STYLE_MODEL"], "clip_vision_output": ["CLIP_VISION_OUTPUT"], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "style_model", "clip_vision_output", "strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "StyleModelApplyAdvanced", "display_name": "\ud83d\udd8c\ufe0f Style Model Apply (Advanced)", "description": "Use with Flux Redux.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "NormalizedAmplitudeToMask": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_offset": ["INT", {"default": 0, "min": -255, "max": 255, "step": 1}], "location_x": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "location_y": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 1}], "size": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape": [["none", "circle", "square", "triangle"], {"default": "none"}], "color": [["white", "amplitude"], {"default": "amplitude"}]}}, "input_order": {"required": ["normalized_amp", "width", "height", "frame_offset", "location_x", "location_y", "size", "shape", "color"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "NormalizedAmplitudeToMask", "display_name": "NormalizedAmplitudeToMask", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates masks based on the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "NormalizedAmplitudeToFloatList": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"]}}, "input_order": {"required": ["normalized_amp"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "NormalizedAmplitudeToFloatList", "display_name": "NormalizedAmplitudeToFloatList", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates a list of floats from the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "OffsetMaskByNormalizedAmplitude": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "mask": ["MASK"], "x": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "y": ["INT", {"default": 0, "min": -4096, "max": 16384, "step": 1, "display": "number"}], "rotate": ["BOOLEAN", {"default": false}], "angle_multiplier": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001, "display": "number"}]}}, "input_order": {"required": ["normalized_amp", "mask", "x", "y", "rotate", "angle_multiplier"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "OffsetMaskByNormalizedAmplitude", "display_name": "OffsetMaskByNormalizedAmplitude", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nOffsets masks based on the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "ImageTransformByNormalizedAmplitude": {"input": {"required": {"normalized_amp": ["NORMALIZED_AMPLITUDE"], "zoom_scale": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.001, "display": "number"}], "x_offset": ["INT", {"default": 0, "min": -16383, "max": 16384, "step": 1, "display": "number"}], "y_offset": ["INT", {"default": 0, "min": -16383, "max": 16384, "step": 1, "display": "number"}], "cumulative": ["BOOLEAN", {"default": false}], "image": ["IMAGE"]}}, "input_order": {"required": ["normalized_amp", "zoom_scale", "x_offset", "y_offset", "cumulative", "image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageTransformByNormalizedAmplitude", "display_name": "ImageTransformByNormalizedAmplitude", "description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nTransforms image based on the normalized amplitude.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "AudioConcatenate": {"input": {"required": {"audio1": ["AUDIO"], "audio2": ["AUDIO"], "direction": [["right", "left"], {"default": "right"}]}}, "input_order": {"required": ["audio1", "audio2", "direction"]}, "output": ["AUDIO"], "output_is_list": [false], "output_name": ["AUDIO"], "name": "AudioConcatenate", "display_name": "AudioConcatenate", "description": "\nConcatenates the audio1 to audio2 in the specified direction.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "SplineEditor": {"input": {"required": {"points_store": ["STRING", {"multiline": false}], "coordinates": ["STRING", {"multiline": false}], "mask_width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "mask_height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "points_to_sample": ["INT", {"default": 16, "min": 2, "max": 1000, "step": 1}], "sampling_method": [["path", "time", "controlpoints"], {"default": "time"}], "interpolation": [["cardinal", "monotone", "basis", "linear", "step-before", "step-after", "polar", "polar-reverse"], {"default": "cardinal"}], "tension": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "repeat_output": ["INT", {"default": 1, "min": 1, "max": 4096, "step": 1}], "float_output_type": [["list", "pandas series", "tensor"], {"default": "list"}]}, "optional": {"min_value": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "max_value": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "bg_image": ["IMAGE"]}}, "input_order": {"required": ["points_store", "coordinates", "mask_width", "mask_height", "points_to_sample", "sampling_method", "interpolation", "tension", "repeat_output", "float_output_type"], "optional": ["min_value", "max_value", "bg_image"]}, "output": ["MASK", "STRING", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["mask", "coord_str", "float", "count", "normalized_str"], "name": "SplineEditor", "display_name": "Spline Editor", "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create values for various   \n## schedules and/or mask batches.  \n\n**Shift + click** to add control point at end.\n**Ctrl + click** to add control point (subdivide) between two points.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end.  \n  \nRight click on canvas for context menu:  \nThese are purely visual options, doesn't affect the output:  \n - Toggle handles visibility\n - Display sample points: display the points to be returned.  \n\n**points_to_sample** value sets the number of samples  \nreturned from the **drawn spline itself**, this is independent from the  \nactual control points, so the interpolation type matters.  \nsampling_method: \n - time: samples along the time axis, used for schedules  \n - path: samples along the path itself, useful for coordinates  \n\noutput types:\n - mask batch  \n        example compatible nodes: anything that takes masks  \n - list of floats\n        example compatible nodes: IPAdapter weights  \n - pandas series\n        example compatible nodes: anything that takes Fizz'  \n        nodes Batch Value Schedule  \n - torch tensor  \n        example compatible nodes: unknown\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "CreateShapeImageOnPath": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 2, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 2, "max": 4096, "step": 1}], "shape_color": ["STRING", {"default": "white"}], "bg_color": ["STRING", {"default": "black"}], "blur_radius": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 100, "step": 0.1}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}], "trailing": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["shape", "coordinates", "frame_width", "frame_height", "shape_width", "shape_height", "shape_color", "bg_color", "blur_radius", "intensity"], "optional": ["size_multiplier", "trailing"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "CreateShapeImageOnPath", "display_name": "Create Shape Image On Path", "description": "\nCreates an image or batch of images with the specified shape.  \nLocations are center locations.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CreateShapeMaskOnPath": {"input": {"required": {"shape": [["circle", "square", "triangle"], {"default": "circle"}], "coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "shape_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}], "shape_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 1}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["shape", "coordinates", "frame_width", "frame_height", "shape_width", "shape_height"], "optional": ["size_multiplier"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["mask", "mask_inverted"], "name": "CreateShapeMaskOnPath", "display_name": "Create Shape Mask On Path", "description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateTextOnPath": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"default": "text", "multiline": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 42}], "alignment": [["left", "center", "right"], {"default": "center"}], "text_color": ["STRING", {"default": "white"}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["coordinates", "text", "frame_width", "frame_height", "font", "font_size", "alignment", "text_color"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "MASK", "MASK"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "mask_inverted"], "name": "CreateTextOnPath", "display_name": "Create Text On Path", "description": "\nCreates a mask or batch of masks with the specified text.  \nLocations are center locations.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "CreateGradientFromCoords": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "start_color": ["STRING", {"default": "white"}], "end_color": ["STRING", {"default": "black"}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["coordinates", "frame_width", "frame_height", "start_color", "end_color", "multiplier"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "CreateGradientFromCoords", "display_name": "Create Gradient From Coords", "description": "\nCreates a gradient image from coordinates.    \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "CutAndDragOnPath": {"input": {"required": {"image": ["IMAGE"], "coordinates": ["STRING", {"forceInput": true}], "mask": ["MASK"], "frame_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "frame_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "inpaint": ["BOOLEAN", {"default": true}]}, "optional": {"bg_image": ["IMAGE"]}}, "input_order": {"required": ["image", "coordinates", "mask", "frame_width", "frame_height", "inpaint"], "optional": ["bg_image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "CutAndDragOnPath", "display_name": "Cut And Drag On Path", "description": "\nCuts the masked area from the image, and drags it along the path. If inpaint is enabled, and no bg_image is provided, the cut area is filled using cv2 TELEA algorithm.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "GradientToFloat": {"input": {"required": {"image": ["IMAGE"], "steps": ["INT", {"default": 10, "min": 2, "max": 10000, "step": 1}]}}, "input_order": {"required": ["image", "steps"]}, "output": ["FLOAT", "FLOAT"], "output_is_list": [false, false], "output_name": ["float_x", "float_y"], "name": "GradientToFloat", "display_name": "Gradient To Float", "description": "\nCalculates list of floats from image.    \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "WeightScheduleExtend": {"input": {"required": {"input_values_1": ["FLOAT", {"default": 0.0, "forceInput": true}], "input_values_2": ["FLOAT", {"default": 0.0, "forceInput": true}], "output_type": [["match_input", "list", "pandas series", "tensor"], {"default": "match_input"}]}}, "input_order": {"required": ["input_values_1", "input_values_2", "output_type"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "WeightScheduleExtend", "display_name": "Weight Schedule Extend", "description": "\nExtends, and converts if needed, different value lists/series  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "MaskOrImageToWeight": {"input": {"required": {"output_type": [["list", "pandas series", "tensor", "string"], {"default": "list"}]}, "optional": {"images": ["IMAGE"], "masks": ["MASK"]}}, "input_order": {"required": ["output_type"], "optional": ["images", "masks"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "STRING"], "name": "MaskOrImageToWeight", "display_name": "Mask Or Image To Weight", "description": "\nGets the mean values from mask or image batch  \nand returns that as the selected output type.   \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "WeightScheduleConvert": {"input": {"required": {"input_values": ["FLOAT", {"default": 0.0, "forceInput": true}], "output_type": [["match_input", "list", "pandas series", "tensor"], {"default": "list"}], "invert": ["BOOLEAN", {"default": false}], "repeat": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}]}, "optional": {"remap_to_frames": ["INT", {"default": 0}], "interpolation_curve": ["FLOAT", {"forceInput": true}], "remap_values": ["BOOLEAN", {"default": false}], "remap_min": ["FLOAT", {"default": 0.0, "min": -100000, "max": 100000.0, "step": 0.01}], "remap_max": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000.0, "step": 0.01}]}}, "input_order": {"required": ["input_values", "output_type", "invert", "repeat"], "optional": ["remap_to_frames", "interpolation_curve", "remap_values", "remap_min", "remap_max"]}, "output": ["FLOAT", "STRING", "INT"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "STRING", "INT"], "name": "WeightScheduleConvert", "display_name": "Weight Schedule Convert", "description": "\nConverts different value lists/series to another type.  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/weights", "output_node": false}, "FloatToMask": {"input": {"required": {"input_values": ["FLOAT", {"forceInput": true, "default": 0}], "width": ["INT", {"default": 100, "min": 1}], "height": ["INT", {"default": 100, "min": 1}]}}, "input_order": {"required": ["input_values", "width", "height"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "FloatToMask", "display_name": "Float To Mask", "description": "\nGenerates a batch of masks based on the input float values.\nThe batch size is determined by the length of the input float values.\nEach mask is generated with the specified width and height.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/masking/generate", "output_node": false}, "FloatToSigmas": {"input": {"required": {"float_list": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["float_list"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "FloatToSigmas", "display_name": "Float To Sigmas", "description": "\nCreates a sigmas tensor from list of float values.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "SigmasToFloat": {"input": {"required": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["sigmas"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["float"], "name": "SigmasToFloat", "display_name": "Sigmas To Float", "description": "\nCreates a float list from sigmas tensors.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/noise", "output_node": false}, "PlotCoordinates": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"default": "title", "multiline": false}], "width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "bbox_width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}], "bbox_height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["coordinates", "text", "width", "height", "bbox_width", "bbox_height"], "optional": ["size_multiplier"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["images", "width", "height", "bbox_width", "bbox_height"], "name": "PlotCoordinates", "display_name": "Plot Coordinates", "description": "\nPlots coordinates to sequence of images using Matplotlib.  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "InterpolateCoords": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "interpolation_curve": ["FLOAT", {"forceInput": true}]}}, "input_order": {"required": ["coordinates", "interpolation_curve"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["coordinates"], "name": "InterpolateCoords", "display_name": "Interpolate Coords", "description": "\nInterpolates coordinates based on a curve.   \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "PointsEditor": {"input": {"required": {"points_store": ["STRING", {"multiline": false}], "coordinates": ["STRING", {"multiline": false}], "neg_coordinates": ["STRING", {"multiline": false}], "bbox_store": ["STRING", {"multiline": false}], "bboxes": ["STRING", {"multiline": false}], "bbox_format": [["xyxy", "xywh"]], "width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 8}], "normalize": ["BOOLEAN", {"default": false}]}, "optional": {"bg_image": ["IMAGE"]}}, "input_order": {"required": ["points_store", "coordinates", "neg_coordinates", "bbox_store", "bboxes", "bbox_format", "width", "height", "normalize"], "optional": ["bg_image"]}, "output": ["STRING", "STRING", "BBOX", "MASK", "IMAGE"], "output_is_list": [false, false, false, false, false], "output_name": ["positive_coords", "negative_coords", "bbox", "bbox_mask", "cropped_image"], "name": "PointsEditor", "display_name": "Points Editor", "description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create coordinates\n\n**Shift + click** to add a positive (green) point.\n**Shift + right click** to add a negative (red) point.\n**Ctrl + click** to draw a box.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end of the points array.  \n  \nTo add an image select the node and copy/paste or drag in the image.  \nOr from the bg_image input on queue (first frame of the batch).  \n\n**THE IMAGE IS SAVED TO THE NODE AND WORKFLOW METADATA**  \nyou can clear the image from the context menu by right clicking on the canvas  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "StabilityAPI_SD3": {"input": {"required": {"prompt": ["STRING", {"multiline": true}], "n_prompt": ["STRING", {"multiline": true}], "seed": ["INT", {"default": 123, "min": 0, "max": 4294967294, "step": 1}], "model": [["sd3", "sd3-turbo"], {"default": "sd3"}], "aspect_ratio": [["1:1", "16:9", "21:9", "2:3", "3:2", "4:5", "5:4", "9:16", "9:21"], {"default": "1:1"}], "output_format": [["png", "jpeg"], {"default": "jpeg"}]}, "optional": {"api_key": ["STRING", {"multiline": true}], "image": ["IMAGE"], "img2img_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "disable_metadata": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["prompt", "n_prompt", "seed", "model", "aspect_ratio", "output_format"], "optional": ["api_key", "image", "img2img_strength", "disable_metadata"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "StabilityAPI_SD3", "display_name": "Stability API SD3", "description": "\n## Calls StabilityAI API\n   \nAlthough you may have multiple keys in your account,  \nyou should use the same key for all requests to this API.  \n\nGet your API key here: https://platform.stability.ai/account/keys  \nRecommended to set the key in the config.json -file under this  \nnode packs folder.  \n# WARNING:  \nOtherwise the API key may get saved in the image metadata even  \nwith \"disable_metadata\" on if the workflow includes save nodes  \nseparate from this node.  \n   \nsd3 requires 6.5 credits per generation  \nsd3-turbo requires 4 credits per generation  \n\nIf no image is provided, mode is set to text-to-image  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "SoundReactive": {"input": {"required": {"sound_level": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 99999, "step": 0.01}], "start_range_hz": ["INT", {"default": 150, "min": 0, "max": 9999, "step": 1}], "end_range_hz": ["INT", {"default": 2000, "min": 0, "max": 9999, "step": 1}], "multiplier": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 99999, "step": 0.01}], "smoothing_factor": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "normalize": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["sound_level", "start_range_hz", "end_range_hz", "multiplier", "smoothing_factor", "normalize"]}, "output": ["FLOAT", "INT"], "output_is_list": [false, false], "output_name": ["sound_level", "sound_level_int"], "name": "SoundReactive", "display_name": "Sound Reactive", "description": "\nReacts to the sound level of the input.  \nUses your browsers sound input options and requires.  \nMeant to be used with realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/audio", "output_node": false}, "StableZero123_BatchSchedule": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "azimuth_points_string": ["STRING", {"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n", "multiline": true}], "elevation_points_string": ["STRING", {"default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n", "multiline": true}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "interpolation", "azimuth_points_string", "elevation_points_string"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "StableZero123_BatchSchedule", "display_name": "Stable Zero123 Batch Schedule", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "SV3D_BatchSchedule": {"input": {"required": {"clip_vision": ["CLIP_VISION"], "init_image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 576, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 21, "min": 1, "max": 4096}], "interpolation": [["linear", "ease_in", "ease_out", "ease_in_out"]], "azimuth_points_string": ["STRING", {"default": "0:(0.0),\n9:(180.0),\n20:(360.0)\n", "multiline": true}], "elevation_points_string": ["STRING", {"default": "0:(0.0),\n9:(0.0),\n20:(0.0)\n", "multiline": true}]}}, "input_order": {"required": ["clip_vision", "init_image", "vae", "width", "height", "batch_size", "interpolation", "azimuth_points_string", "elevation_points_string"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "SV3D_BatchSchedule", "display_name": "SV3D Batch Schedule", "description": "\nAllow scheduling of the azimuth and elevation conditions for SV3D.  \nNote that SV3D is still a video model and the schedule needs to always go forward  \nhttps://huggingface.co/stabilityai/sv3d\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "LoadResAdapterNormalization": {"input": {"required": {"model": ["MODEL"], "resadapter_path": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["model", "resadapter_path"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LoadResAdapterNormalization", "display_name": "LoadResAdapterNormalization", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "Superprompt": {"input": {"required": {"instruction_prompt": ["STRING", {"default": "Expand the following prompt to add more detail", "multiline": true}], "prompt": ["STRING", {"default": "", "multiline": true, "forceInput": true}], "max_new_tokens": ["INT", {"default": 128, "min": 1, "max": 4096, "step": 1}]}}, "input_order": {"required": ["instruction_prompt", "prompt", "max_new_tokens"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Superprompt", "display_name": "Superprompt", "description": "\n# SuperPrompt\nA T5 model fine-tuned on the SuperPrompt dataset for  \nupsampling text prompts to more detailed descriptions.  \nMeant to be used as a pre-generation step for text-to-image  \nmodels that benefit from more detailed prompts.  \nhttps://huggingface.co/roborovski/superprompt-v1\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/text", "output_node": false}, "GLIGENTextBoxApplyBatchCoords": {"input": {"required": {"conditioning_to": ["CONDITIONING"], "latents": ["LATENT"], "clip": ["CLIP"], "gligen_textbox_model": ["GLIGEN"], "coordinates": ["STRING", {"forceInput": true}], "text": ["STRING", {"multiline": true}], "width": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}], "height": ["INT", {"default": 128, "min": 8, "max": 4096, "step": 8}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}]}}, "input_order": {"required": ["conditioning_to", "latents", "clip", "gligen_textbox_model", "coordinates", "text", "width", "height"], "optional": ["size_multiplier"]}, "output": ["CONDITIONING", "IMAGE"], "output_is_list": [false, false], "output_name": ["conditioning", "coord_preview"], "name": "GLIGENTextBoxApplyBatchCoords", "display_name": "GLIGENTextBoxApplyBatchCoords", "description": "\nThis node allows scheduling GLIGEN text box positions in a batch,  \nto be used with AnimateDiff-Evolved. Intended to pair with the  \nSpline Editor -node.  \n\nGLIGEN model can be downloaded through the Manage's \"Install Models\" menu.  \nOr directly from here:  \nhttps://huggingface.co/comfyanonymous/GLIGEN_pruned_safetensors/tree/main  \n  \nInputs:  \n- **latents** input is used to calculate batch size  \n- **clip** is your standard text encoder, use same as for the main prompt  \n- **gligen_textbox_model** connects to GLIGEN Loader  \n- **coordinates** takes a json string of points, directly compatible  \nwith the spline editor node.\n- **text** is the part of the prompt to set position for  \n- **width** and **height** are the size of the GLIGEN bounding box  \n  \nOutputs:\n- **conditioning** goes between to clip text encode and the sampler  \n- **coord_preview** is an optional preview of the coordinates and  \nbounding boxes.\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "Intrinsic_lora_sampling": {"input": {"required": {"model": ["MODEL"], "lora_name": [["intrinsic_lora_sd15_albedo.safetensors", "intrinsic_lora_sd15_depth.safetensors", "intrinsic_lora_sd15_normal.safetensors", "intrinsic_lora_sd15_shading.safetensors", "intrinsic_loras.txt"]], "task": [["depth map", "surface normals", "albedo", "shading"], {"default": "depth map"}], "text": ["STRING", {"multiline": true, "default": ""}], "clip": ["CLIP"], "vae": ["VAE"], "per_batch": ["INT", {"default": 16, "min": 1, "max": 4096, "step": 1}]}, "optional": {"image": ["IMAGE"], "optional_latent": ["LATENT"]}}, "input_order": {"required": ["model", "lora_name", "task", "text", "clip", "vae", "per_batch"], "optional": ["image", "optional_latent"]}, "output": ["IMAGE", "LATENT"], "output_is_list": [false, false], "output_name": ["IMAGE", "LATENT"], "name": "Intrinsic_lora_sampling", "display_name": "Intrinsic Lora Sampling", "description": "\nSampler to use the intrinsic loras:  \nhttps://github.com/duxiaodan/intrinsic-lora  \nThese LoRAs are tiny and thus included  \nwith this node pack.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes", "output_node": false}, "CheckpointPerturbWeights": {"input": {"required": {"model": ["MODEL"], "joint_blocks": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "final_layer": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "rest_of_the_blocks": ["FLOAT", {"default": 0.02, "min": 0.001, "max": 10.0, "step": 0.001}], "seed": ["INT", {"default": 123, "min": 0, "max": 18446744073709551615, "step": 1}]}}, "input_order": {"required": ["model", "joint_blocks", "final_layer", "rest_of_the_blocks", "seed"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "CheckpointPerturbWeights", "display_name": "CheckpointPerturbWeights", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": true}, "Screencap_mss": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 10000, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 10000, "step": 1}], "num_frames": ["INT", {"default": 1, "min": 1, "max": 255, "step": 1}], "delay": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["x", "y", "width", "height", "num_frames", "delay"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Screencap_mss", "display_name": "Screencap mss", "description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/image", "output_node": false}, "WebcamCaptureCV2": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "width": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 4096, "step": 1}], "cam_index": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "release": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["x", "y", "width", "height", "cam_index", "release"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "WebcamCaptureCV2", "display_name": "Webcam Capture CV2", "description": "\nCaptures a frame from a webcam using CV2.  \nCan be used for realtime diffusion with autoqueue.\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "DifferentialDiffusionAdvanced": {"input": {"required": {"model": ["MODEL"], "samples": ["LATENT"], "mask": ["MASK"], "multiplier": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["model", "samples", "mask", "multiplier"]}, "output": ["MODEL", "LATENT"], "output_is_list": [false, false], "output_name": ["MODEL", "LATENT"], "name": "DifferentialDiffusionAdvanced", "display_name": "Differential Diffusion Advanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "_for_testing", "output_node": false}, "FluxBlockFluxLoraLoader": {"input": {"required": {"model": ["MODEL", {"tooltip": "The diffusion model the LoRA will be applied to."}], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "tooltip": "How strongly to modify the diffusion model. This value can be negative."}]}, "optional": {"lora_name": [["0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"], {"tooltip": "The name of the LoRA."}], "opt_lora_path": ["STRING", {"forceInput": true, "tooltip": "Absolute path of the LoRA."}], "blocks": ["SELECTEDBLOCKS"]}}, "input_order": {"required": ["model", "strength_model"], "optional": ["lora_name", "opt_lora_path", "blocks"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["model", "rank"], "name": "FluxBlockFluxLoraLoader", "display_name": "Flux Block Lora Loader", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model.", "possible rank of the LoRA."]}, "FluxBlockLoraSelect": {"input": {"required": {"double_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37."]}, "output": ["SELECTEDBLOCKS"], "output_is_list": [false], "output_name": ["blocks"], "name": "FluxBlockLoraSelect", "display_name": "Flux Block Lora Select", "description": "Select individual block alpha values, value of 0 removes the block altogether", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model."]}, "HunyuanVideoBlockLoraSelect": {"input": {"required": {"double_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "double_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.0.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.1.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.2.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.3.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.4.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.5.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.6.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.7.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.8.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.9.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.10.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.11.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.12.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.13.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.14.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.15.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.16.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.17.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.18.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.19.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.20.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.21.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.22.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.23.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.24.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.25.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.26.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.27.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.28.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.29.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.30.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.31.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.32.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.33.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.34.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.35.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.36.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.37.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.38.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}], "single_blocks.39.": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000.0, "step": 0.01}]}}, "input_order": {"required": ["double_blocks.0.", "double_blocks.1.", "double_blocks.2.", "double_blocks.3.", "double_blocks.4.", "double_blocks.5.", "double_blocks.6.", "double_blocks.7.", "double_blocks.8.", "double_blocks.9.", "double_blocks.10.", "double_blocks.11.", "double_blocks.12.", "double_blocks.13.", "double_blocks.14.", "double_blocks.15.", "double_blocks.16.", "double_blocks.17.", "double_blocks.18.", "double_blocks.19.", "single_blocks.0.", "single_blocks.1.", "single_blocks.2.", "single_blocks.3.", "single_blocks.4.", "single_blocks.5.", "single_blocks.6.", "single_blocks.7.", "single_blocks.8.", "single_blocks.9.", "single_blocks.10.", "single_blocks.11.", "single_blocks.12.", "single_blocks.13.", "single_blocks.14.", "single_blocks.15.", "single_blocks.16.", "single_blocks.17.", "single_blocks.18.", "single_blocks.19.", "single_blocks.20.", "single_blocks.21.", "single_blocks.22.", "single_blocks.23.", "single_blocks.24.", "single_blocks.25.", "single_blocks.26.", "single_blocks.27.", "single_blocks.28.", "single_blocks.29.", "single_blocks.30.", "single_blocks.31.", "single_blocks.32.", "single_blocks.33.", "single_blocks.34.", "single_blocks.35.", "single_blocks.36.", "single_blocks.37.", "single_blocks.38.", "single_blocks.39."]}, "output": ["SELECTEDBLOCKS"], "output_is_list": [false], "output_name": ["blocks"], "name": "HunyuanVideoBlockLoraSelect", "display_name": "Hunyuan Video Block Lora Select", "description": "Select individual block alpha values, value of 0 removes the block altogether", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "output_tooltips": ["The modified diffusion model."]}, "CustomControlNetWeightsFluxFromList": {"input": {"required": {"list_of_floats": ["FLOAT", {"forceInput": true}]}, "optional": {"uncond_multiplier": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cn_extras": ["CN_WEIGHTS_EXTRAS"], "autosize": ["ACNAUTOSIZE", {"padding": 0}]}}, "input_order": {"required": ["list_of_floats"], "optional": ["uncond_multiplier", "cn_extras", "autosize"]}, "output": ["CONTROL_NET_WEIGHTS", "TIMESTEP_KEYFRAME"], "output_is_list": [false, false], "output_name": ["CN_WEIGHTS", "TK_SHORTCUT"], "name": "CustomControlNetWeightsFluxFromList", "display_name": "Custom ControlNet Weights Flux From List", "description": "Creates controlnet weights from a list of floats for Advanced-ControlNet", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/controlnet", "output_node": false}, "CheckpointLoaderKJ": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], {"tooltip": "The name of the checkpoint (model) to load."}], "patch_cublaslinear": ["BOOLEAN", {"default": false, "tooltip": "Enable or disable the patching, won't take effect on already loaded models!"}], "sage_attention": [["disabled", "auto", "sageattn_qk_int8_pv_fp16_cuda", "sageattn_qk_int8_pv_fp16_triton", "sageattn_qk_int8_pv_fp8_cuda"], {"default": false, "tooltip": "Patch comfy attention to use sageattn."}]}}, "input_order": {"required": ["ckpt_name", "patch_cublaslinear", "sage_attention"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "VAE"], "name": "CheckpointLoaderKJ", "display_name": "CheckpointLoaderKJ", "description": "Experimental node for patching torch.nn.Linear with CublasLinear.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": true, "experimental": true}, "DiffusionModelLoaderKJ": {"input": {"required": {"model_name": [["IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors"], {"tooltip": "The name of the checkpoint (model) to load."}], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2", "fp16", "bf16", "fp32"]], "compute_dtype": [["default", "fp16", "bf16", "fp32"], {"default": "fp16", "tooltip": "The compute dtype to use for the model."}], "patch_cublaslinear": ["BOOLEAN", {"default": false, "tooltip": "Enable or disable the patching, won't take effect on already loaded models!"}], "sage_attention": [["disabled", "auto", "sageattn_qk_int8_pv_fp16_cuda", "sageattn_qk_int8_pv_fp16_triton", "sageattn_qk_int8_pv_fp8_cuda"], {"default": false, "tooltip": "Patch comfy attention to use sageattn."}], "enable_fp16_accumulation": ["BOOLEAN", {"default": false, "tooltip": "Enable torch.backends.cuda.matmul.allow_fp16_accumulation, requires pytorch 2.7.0 nightly."}]}}, "input_order": {"required": ["model_name", "weight_dtype", "compute_dtype", "patch_cublaslinear", "sage_attention", "enable_fp16_accumulation"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "DiffusionModelLoaderKJ", "display_name": "Diffusion Model Loader KJ", "description": "Node for patching torch.nn.Linear with CublasLinear.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": true, "experimental": true}, "TorchCompileModelFluxAdvanced": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "double_blocks": ["STRING", {"default": "0-18", "multiline": true}], "single_blocks": ["STRING", {"default": "0-37", "multiline": true}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}, "optional": {"dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "double_blocks", "single_blocks", "dynamic"], "optional": ["dynamo_cache_size_limit"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelFluxAdvanced", "display_name": "TorchCompileModelFluxAdvanced", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileModelHyVideo": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}], "compile_single_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile single blocks"}], "compile_double_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile double blocks"}], "compile_txt_in": ["BOOLEAN", {"default": false, "tooltip": "Compile txt_in layers"}], "compile_vector_in": ["BOOLEAN", {"default": false, "tooltip": "Compile vector_in layers"}], "compile_final_layer": ["BOOLEAN", {"default": false, "tooltip": "Compile final layer"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit", "compile_single_blocks", "compile_double_blocks", "compile_txt_in", "compile_vector_in", "compile_final_layer"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelHyVideo", "display_name": "TorchCompileModelHyVideo", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileVAE": {"input": {"required": {"vae": ["VAE"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "compile_encoder": ["BOOLEAN", {"default": true, "tooltip": "Compile encoder"}], "compile_decoder": ["BOOLEAN", {"default": true, "tooltip": "Compile decoder"}]}}, "input_order": {"required": ["vae", "backend", "fullgraph", "mode", "compile_encoder", "compile_decoder"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "TorchCompileVAE", "display_name": "TorchCompileVAE", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileControlNet": {"input": {"required": {"controlnet": ["CONTROL_NET"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}]}}, "input_order": {"required": ["controlnet", "backend", "fullgraph", "mode"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "TorchCompileControlNet", "display_name": "TorchCompileControlNet", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "PatchModelPatcherOrder": {"input": {"required": {"model": ["MODEL"], "patch_order": [["object_patch_first", "weight_patch_first"], {"default": "weight_patch_first", "tooltip": "Patch the comfy patch_model function to load weight patches (LoRAs) before compiling the model"}], "full_load": [["enabled", "disabled", "auto"], {"default": "auto", "tooltip": "Disabling may help with memory issues when loading large models, when changing this you should probably force model reload to avoid issues!"}]}}, "input_order": {"required": ["model", "patch_order", "full_load"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PatchModelPatcherOrder", "display_name": "Patch Model Patcher Order", "description": "Patch the comfy patch_model function patching order, useful for torch.compile (used as object_patch) as it should come last if you want to use LoRAs with compile", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "TorchCompileLTXModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileLTXModel", "display_name": "TorchCompileLTXModel", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileCosmosModel": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "tooltip": "Set the dynamo cache size limit"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileCosmosModel", "display_name": "TorchCompileCosmosModel", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "TorchCompileModelWanVideo": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}], "compile_transformer_blocks_only": ["BOOLEAN", {"default": false, "tooltip": "Compile only transformer blocks"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit", "compile_transformer_blocks_only"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "TorchCompileModelWanVideo", "display_name": "TorchCompileModelWanVideo", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/torchcompile", "output_node": false, "experimental": true}, "PathchSageAttentionKJ": {"input": {"required": {"model": ["MODEL"], "sage_attention": [["disabled", "auto", "sageattn_qk_int8_pv_fp16_cuda", "sageattn_qk_int8_pv_fp16_triton", "sageattn_qk_int8_pv_fp8_cuda"], {"default": false, "tooltip": "Global patch comfy attention to use sageattn, once patched to revert back to normal you would need to run this node again with disabled option."}]}}, "input_order": {"required": ["model", "sage_attention"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "PathchSageAttentionKJ", "display_name": "Patch Sage Attention KJ", "description": "Experimental node for patching attention mode. This doesn't use the model patching system and thus can't be disabled without running the node again with 'disabled' option.", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "LeapfusionHunyuanI2VPatcher": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT"], "index": ["INT", {"default": 0, "min": -1, "max": 1000, "step": 1, "tooltip": "The index of the latent to be replaced. 0 for first frame and -1 for last"}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The start percentage of steps to apply"}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The end percentage of steps to apply"}], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.001}]}}, "input_order": {"required": ["model", "latent", "index", "start_percent", "end_percent", "strength"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "LeapfusionHunyuanI2VPatcher", "display_name": "Leapfusion Hunyuan I2V Patcher", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "VAELoaderKJ": {"input": {"required": {"vae_name": [["ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "device": [["main_device", "cpu"]], "weight_dtype": [["bf16", "fp16", "fp32"]]}}, "input_order": {"required": ["vae_name", "device", "weight_dtype"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAELoaderKJ", "display_name": "VAELoader KJ", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/vae", "output_node": false}, "ScheduledCFGGuidance": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 100.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "positive", "negative", "cfg", "start_percent", "end_percent"]}, "output": ["GUIDER"], "output_is_list": [false], "output_name": ["GUIDER"], "name": "ScheduledCFGGuidance", "display_name": "Scheduled CFG Guidance", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false}, "ApplyRifleXRoPE_HunuyanVideo": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT", {"tooltip": "Only used to get the latent count"}], "k": ["INT", {"default": 4, "min": 1, "max": 100, "step": 1, "tooltip": "Index of intrinsic frequency"}]}}, "input_order": {"required": ["model", "latent", "k"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyRifleXRoPE_HunuyanVideo", "display_name": "Apply RifleXRoPE HunuyanVideo", "description": "Extends the potential frame count of HunyuanVideo using this method: https://github.com/thu-ml/RIFLEx", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "ApplyRifleXRoPE_WanVideo": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT", {"tooltip": "Only used to get the latent count"}], "k": ["INT", {"default": 6, "min": 1, "max": 100, "step": 1, "tooltip": "Index of intrinsic frequency"}]}}, "input_order": {"required": ["model", "latent", "k"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyRifleXRoPE_WanVideo", "display_name": "Apply RifleXRoPE WanVideo", "description": "Extends the potential frame count of HunyuanVideo using this method: https://github.com/thu-ml/RIFLEx", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "WanVideoTeaCacheKJ": {"input": {"required": {"model": ["MODEL"], "rel_l1_thresh": ["FLOAT", {"default": 0.275, "min": 0.0, "max": 10.0, "step": 0.001, "tooltip": "Threshold for to determine when to apply the cache, compromise between speed and accuracy. When using coefficients a good value range is something between 0.2-0.4 for all but 1.3B model, which should be about 10 times smaller, same as when not using coefficients."}], "start_percent": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The start percentage of the steps to use with TeaCache."}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The end percentage of the steps to use with TeaCache."}], "cache_device": [["main_device", "offload_device"], {"default": "offload_device", "tooltip": "Device to cache to"}], "coefficients": [["disabled", "1.3B", "14B", "i2v_480", "i2v_720"], {"default": "i2v_480", "tooltip": "Coefficients for rescaling the relative l1 distance, if disabled the threshold value should be about 10 times smaller than the value used with coefficients."}]}}, "input_order": {"required": ["model", "rel_l1_thresh", "start_percent", "end_percent", "cache_device", "coefficients"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "WanVideoTeaCacheKJ", "display_name": "WanVideo Tea Cache (native)", "description": "\nPatch WanVideo model to use TeaCache. Speeds up inference by caching the output and  \napplying it instead of doing the step.  Best results are achieved by choosing the  \nappropriate coefficients for the model. Early steps should never be skipped, with too  \naggressive values this can happen and the motion suffers. Starting later can help with that too.   \nWhen NOT using coefficients, the threshold value should be  \nabout 10 times smaller than the value used with coefficients.  \n\nOfficial recommended values https://github.com/ali-vilab/TeaCache/tree/main/TeaCache4Wan2.1:\n\n\n<pre style='font-family:monospace'>\n+-------------------+--------+---------+--------+\n|       Model       |  Low   | Medium  |  High  |\n+-------------------+--------+---------+--------+\n| Wan2.1 t2v 1.3B  |  0.05  |  0.07   |  0.08  |\n| Wan2.1 t2v 14B   |  0.14  |  0.15   |  0.20  |\n| Wan2.1 i2v 480P  |  0.13  |  0.19   |  0.26  |\n| Wan2.1 i2v 720P  |  0.18  |  0.20   |  0.30  |\n+-------------------+--------+---------+--------+\n</pre> \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/teacache", "output_node": false, "experimental": true}, "WanVideoEnhanceAVideoKJ": {"input": {"required": {"model": ["MODEL"], "latent": ["LATENT", {"tooltip": "Only used to get the latent count"}], "weight": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 10.0, "step": 0.001, "tooltip": "Strength of the enhance effect"}]}}, "input_order": {"required": ["model", "latent", "weight"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "WanVideoEnhanceAVideoKJ", "display_name": "WanVideo Enhance A Video (native)", "description": "https://github.com/NUS-HPC-AI-Lab/Enhance-A-Video", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/experimental", "output_node": false, "experimental": true}, "SkipLayerGuidanceWanVideo": {"input": {"required": {"model": ["MODEL"], "blocks": ["STRING", {"default": "10", "multiline": false}], "start_percent": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["model", "blocks", "start_percent", "end_percent"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "SkipLayerGuidanceWanVideo", "display_name": "Skip Layer Guidance WanVideo", "description": "Simplified skip layer guidance that only skips the uncond on selected blocks", "python_module": "custom_nodes.comfyui-kjnodes", "category": "advanced/guidance", "output_node": false, "experimental": true}, "TimerNodeKJ": {"input": {"required": {"any_input": ["*", {}], "mode": [["start", "stop"]], "name": ["STRING", {"default": "Timer"}]}, "optional": {"timer": ["TIMER"]}}, "input_order": {"required": ["any_input", "mode", "name"], "optional": ["timer"]}, "output": ["*", "TIMER", "INT"], "output_is_list": [false, false, false], "output_name": ["any_output", "timer", "time"], "name": "TimerNodeKJ", "display_name": "Timer Node KJ", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/misc", "output_node": false}, "HunyuanVideoEncodeKeyframesToCond": {"input": {"required": {"model": ["MODEL"], "positive": ["CONDITIONING"], "vae": ["VAE"], "start_frame": ["IMAGE"], "end_frame": ["IMAGE"], "num_frames": ["INT", {"default": 33, "min": 2, "max": 4096, "step": 1}], "tile_size": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "overlap": ["INT", {"default": 64, "min": 0, "max": 4096, "step": 32}], "temporal_size": ["INT", {"default": 64, "min": 8, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to encode at a time."}], "temporal_overlap": ["INT", {"default": 8, "min": 4, "max": 4096, "step": 4, "tooltip": "Only used for video VAEs: Amount of frames to overlap."}]}, "optional": {"negative": ["CONDITIONING"]}}, "input_order": {"required": ["model", "positive", "vae", "start_frame", "end_frame", "num_frames", "tile_size", "overlap", "temporal_size", "temporal_overlap"], "optional": ["negative"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["model", "positive", "negative", "latent"], "name": "HunyuanVideoEncodeKeyframesToCond", "display_name": "HunyuanVideo Encode Keyframes To Cond", "description": "", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/videomodels", "output_node": false}, "CreateInstanceDiffusionTracking": {"input": {"required": {"coordinates": ["STRING", {"forceInput": true}], "width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "bbox_width": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "bbox_height": ["INT", {"default": 512, "min": 16, "max": 4096, "step": 1}], "class_name": ["STRING", {"default": "class_name"}], "class_id": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "prompt": ["STRING", {"default": "prompt", "multiline": true}]}, "optional": {"size_multiplier": ["FLOAT", {"default": [1.0], "forceInput": true}], "fit_in_frame": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["coordinates", "width", "height", "bbox_width", "bbox_height", "class_name", "class_id", "prompt"], "optional": ["size_multiplier", "fit_in_frame"]}, "output": ["TRACKING", "STRING", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["tracking", "prompt", "width", "height", "bbox_width", "bbox_height"], "name": "CreateInstanceDiffusionTracking", "display_name": "CreateInstanceDiffusionTracking", "description": "\nCreates tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n  \nInstanceDiffusion prompt format:  \n\"class_id.class_name\": \"prompt\",  \nfor example:  \n\"1.head\": \"((head))\",  \n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "AppendInstanceDiffusionTracking": {"input": {"required": {"tracking_1": ["TRACKING", {"forceInput": true}], "tracking_2": ["TRACKING", {"forceInput": true}]}, "optional": {"prompt_1": ["STRING", {"default": "", "forceInput": true}], "prompt_2": ["STRING", {"default": "", "forceInput": true}]}}, "input_order": {"required": ["tracking_1", "tracking_2"], "optional": ["prompt_1", "prompt_2"]}, "output": ["TRACKING", "STRING"], "output_is_list": [false, false], "output_name": ["tracking", "prompt"], "name": "AppendInstanceDiffusionTracking", "display_name": "AppendInstanceDiffusionTracking", "description": "\nAppends tracking data to be used with InstanceDiffusion:  \nhttps://github.com/logtd/ComfyUI-InstanceDiffusion  \n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "DrawInstanceDiffusionTracking": {"input": {"required": {"image": ["IMAGE"], "tracking": ["TRACKING", {"forceInput": true}], "box_line_width": ["INT", {"default": 2, "min": 1, "max": 10, "step": 1}], "draw_text": ["BOOLEAN", {"default": true}], "font": [["FreeMono.ttf", "FreeMonoBoldOblique.otf", "TTNorms-Black.otf"]], "font_size": ["INT", {"default": 20}]}}, "input_order": {"required": ["image", "tracking", "box_line_width", "draw_text", "font", "font_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "DrawInstanceDiffusionTracking", "display_name": "DrawInstanceDiffusionTracking", "description": "\nDraws the tracking data from  \nCreateInstanceDiffusionTracking -node.\n\n", "python_module": "custom_nodes.comfyui-kjnodes", "category": "KJNodes/InstanceDiffusion", "output_node": false}, "LoadImageFromUrlOrPath": {"input": {"required": {"url_or_path": ["STRING", {"multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["url_or_path"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "LoadImageFromUrlOrPath", "display_name": "LoadImageFromUrlOrPath", "description": "", "python_module": "custom_nodes.ComfyUI-load-image-from-url", "category": "image", "output_node": false}, "Miaoshouai_Tagger": {"input": {"required": {"model": [["promptgen_base_v1.5", "promptgen_large_v1.5", "promptgen_base_v2.0", "promptgen_large_v2.0"], {"default": "promptgen_base_v2.0"}], "folder_path": ["STRING", {"multiline": false, "default": "Path to your image folder"}], "caption_method": [["tags", "simple", "detailed", "extra", "mixed", "extra_mixed", "analyze"], {"default": "extra_mixed"}], "max_new_tokens": ["INT", {"default": 1024, "min": 1, "max": 4096}], "num_beams": ["INT", {"default": 4, "min": 1, "max": 64}], "random_prompt": [["never", "always"], {"default": "never"}]}, "optional": {"images": ["IMAGE"], "filenames": ["STRING", {"forceInput": true}], "captions": ["STRING", {"forceInput": true}], "prefix_caption": ["STRING", {"multiline": true, "default": ""}], "suffix_caption": ["STRING", {"multiline": true, "default": ""}], "replace_tags": ["STRING", {"multiline": true, "default": "replace_tags eg:search1:replace1;search2:replace2"}]}}, "input_order": {"required": ["model", "folder_path", "caption_method", "max_new_tokens", "num_beams", "random_prompt"], "optional": ["images", "filenames", "captions", "prefix_caption", "suffix_caption", "replace_tags"]}, "output": ["IMAGE", "STRING", "STRING", "STRING", "INT"], "output_is_list": [true, true, true, false, false], "output_name": ["images", "filenames", "captions", "folder_path", "batch_size"], "name": "Miaoshouai_Tagger", "display_name": "\ud83d\udc3eMiaoshouAI Tagger", "description": "", "python_module": "custom_nodes.ComfyUI-Miaoshouai-Tagger", "category": "MiaoshouAI Tagger", "output_node": false}, "Miaoshouai_SaveTags": {"input": {"required": {"filenames": ["STRING", {"forceInput": true}], "captions": ["STRING", {"forceInput": true}], "save_folder": ["STRING", {"default": "Your save directory"}], "filename_prefix": ["STRING", {"default": ""}], "mode": [["overwrite", "append"], {"default": "overwrite"}]}}, "input_order": {"required": ["filenames", "captions", "save_folder", "filename_prefix", "mode"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["captions"], "name": "Miaoshouai_SaveTags", "display_name": "\ud83d\udc3eMiaoshouAI Save Tags", "description": "", "python_module": "custom_nodes.ComfyUI-Miaoshouai-Tagger", "category": "MiaoshouAI Tagger", "output_node": true}, "Miaoshouai_Flux_CLIPTextEncode": {"input": {"required": {"clip": ["CLIP"], "caption": ["STRING", {"forceInput": true, "dynamicPrompts": true}], "guidance": ["FLOAT", {"default": 3.5, "min": 0.0, "max": 100.0, "step": 0.1}]}}, "input_order": {"required": ["clip", "caption", "guidance"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["CONDITIONING", "EMPTY CONDITIONING", "t5xxl", "clip_l", "analyze"], "name": "Miaoshouai_Flux_CLIPTextEncode", "display_name": "\ud83d\udc3eMiaoshouAI Flux Clip Text Encode", "description": "", "python_module": "custom_nodes.ComfyUI-Miaoshouai-Tagger", "category": "MiaoshouAI Tagger", "output_node": false}, "Miaoshouai_Caption_Analyzer": {"input": {"required": {"analyze": ["STRING", {"forceInput": true, "dynamicPrompts": true}], "subject_index": ["INT", {"default": 0, "min": 0, "max": 2, "step": 1}], "camera_angle": ["BOOLEAN", {"default": false}], "art_style": ["BOOLEAN", {"default": false}], "location": ["BOOLEAN", {"default": false}], "text": ["BOOLEAN", {"default": false}], "distance_to_camera": ["BOOLEAN", {"default": false}], "background": ["BOOLEAN", {"default": false}], "position_in_image": ["BOOLEAN", {"default": false}], "gender": ["BOOLEAN", {"default": false}], "age": ["BOOLEAN", {"default": false}], "hair_style": ["BOOLEAN", {"default": false}], "hair_color": ["BOOLEAN", {"default": false}], "facial_expression": ["BOOLEAN", {"default": false}], "eye_direction": ["BOOLEAN", {"default": false}], "facing_direction": ["BOOLEAN", {"default": false}], "race": ["BOOLEAN", {"default": false}], "ear": ["BOOLEAN", {"default": false}], "expression": ["BOOLEAN", {"default": false}], "body": ["BOOLEAN", {"default": false}], "accessory": ["BOOLEAN", {"default": false}], "pants": ["BOOLEAN", {"default": false}], "clothing": ["BOOLEAN", {"default": false}], "shoes": ["BOOLEAN", {"default": false}], "action": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["analyze", "subject_index", "camera_angle", "art_style", "location", "text", "distance_to_camera", "background", "position_in_image", "gender", "age", "hair_style", "hair_color", "facial_expression", "eye_direction", "facing_direction", "race", "ear", "expression", "body", "accessory", "pants", "clothing", "shoes", "action"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["selected analyze"], "name": "Miaoshouai_Caption_Analyzer", "display_name": "\ud83d\udc3eMiaoshouAI Caption Analyzer (Beta)", "description": "", "python_module": "custom_nodes.ComfyUI-Miaoshouai-Tagger", "category": "MiaoshouAI Tagger", "output_node": false}, "ApplyControlNet": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"vae": ["VAE"]}}, "input_order": {"required": ["positive", "negative", "control_net", "image", "strength", "start_percent", "end_percent"], "optional": ["vae"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["positive", "negative"], "name": "ApplyControlNet", "display_name": "\ud83d\udd8c\ufe0f Apply ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia/ControlNets", "output_node": false}, "InpaintConditioningNode": {"input": {"required": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "vae": ["VAE"], "pixels": ["IMAGE"], "mask": ["MASK"], "noise_mask": ["BOOLEAN", {"default": true, "tooltip": "Add a noise mask to the latent so sampling will only happen within the mask. Might improve results or completely break things depending on the model."}]}}, "input_order": {"required": ["positive", "negative", "vae", "pixels", "mask", "noise_mask"]}, "output": ["CONDITIONING", "CONDITIONING", "LATENT"], "output_is_list": [false, false, false], "output_name": ["positive", "negative", "latent"], "name": "InpaintConditioningNode", "display_name": "\ud83d\udd8c\ufe0f Inpaint Conditioning", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": false}, "LoadImagesFromFolderNode": {"input": {"required": {"directory": ["STRING", {"default": ""}]}, "optional": {"max_images": ["INT", {"default": 0, "min": 0, "step": 1}], "skip_images": ["INT", {"default": 0, "min": 0, "step": 1}], "reload": ["BOOLEAN", {"default": false, "label_on": "enabled", "label_off": "disabled"}]}}, "input_order": {"required": ["directory"], "optional": ["max_images", "skip_images", "reload"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["IMAGE"], "name": "LoadImagesFromFolderNode", "display_name": "\ud83d\udd8c\ufe0f Load Images from Folder", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": false}, "MultiControlnet": {"input": {"optional": {"multicontrolnet_stack": ["MULTICONTROLNET_STACK"], "switch_1": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "controlnet_1": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "controlnet_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "switch_2": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "controlnet_2": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "controlnet_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_2": ["IMAGE"], "switch_3": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "controlnet_3": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "controlnet_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_3": ["IMAGE"]}}, "input_order": {"optional": ["multicontrolnet_stack", "switch_1", "controlnet_1", "controlnet_strength_1", "start_percent_1", "end_percent_1", "image_1", "switch_2", "controlnet_2", "controlnet_strength_2", "start_percent_2", "end_percent_2", "image_2", "switch_3", "controlnet_3", "controlnet_strength_3", "start_percent_3", "end_percent_3", "image_3"]}, "output": ["MULTICONTROLNET_STACK"], "output_is_list": [false], "output_name": ["multicontrolnet_stack"], "name": "MultiControlnet", "display_name": "\ud83d\udd8c\ufe0f Multi-Controlnet", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia/ControlNets", "output_node": false}, "MultiControlnetApply": {"input": {"required": {"base_positive": ["CONDITIONING"], "base_negative": ["CONDITIONING"], "switch": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "multicontrolnet_stack": ["MULTICONTROLNET_STACK"]}}, "input_order": {"required": ["base_positive", "base_negative", "switch", "multicontrolnet_stack"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_positive", "base_negative", "show_help"], "name": "MultiControlnetApply", "display_name": "\ud83d\udd8c\ufe0f Multi-Controlnet Apply", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia/ControlNets", "output_node": false}, "MultiControlnetUnion": {"input": {"required": {"add_more_switches": ["BOOLEAN", {"default": false, "label_on": "Yes", "label_off": "No"}], "controlnet": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]]}, "optional": {"multicontrolnet_stack": ["MULTICONTROLNET_STACK"], "switch_1": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "controlnet_type_1": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]], "controlnet_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "switch_2": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "controlnet_type_2": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]], "controlnet_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_2": ["IMAGE"], "switch_3": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}], "controlnet_type_3": [["auto", "openpose", "depth", "hed/pidi/scribble/ted", "canny/lineart/anime_lineart/mlsd", "normal", "segment", "tile", "repaint"]], "controlnet_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_3": ["IMAGE"]}}, "input_order": {"required": ["add_more_switches", "controlnet"], "optional": ["multicontrolnet_stack", "switch_1", "controlnet_type_1", "controlnet_strength_1", "start_percent_1", "end_percent_1", "image_1", "switch_2", "controlnet_type_2", "controlnet_strength_2", "start_percent_2", "end_percent_2", "image_2", "switch_3", "controlnet_type_3", "controlnet_strength_3", "start_percent_3", "end_percent_3", "image_3"]}, "output": ["MULTICONTROLNET_STACK"], "output_is_list": [false], "output_name": ["multicontrolnet_stack"], "name": "MultiControlnetUnion", "display_name": "\ud83d\udd8c\ufe0f Multi-ControlnetUnion", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia/ControlNets", "output_node": false}, "RemoveBackgroundNode": {"input": {"required": {"image": ["IMAGE"], "RemoveBackground_model": [["BiRefNet", "BiRefNet_lite", "BiRefNet_lite-2K", "RMBG 2.0 (NO COMMERCIAL USE)"], {"default": "BiRefNet"}], "background_color": [["transparency", "green", "white", "red", "yellow", "blue", "black", "pink", "purple", "brown", "violet", "wheat", "whitesmoke", "yellowgreen", "turquoise", "tomato", "thistle", "teal", "tan", "steelblue", "springgreen", "snow", "slategrey", "slateblue", "skyblue", "orange"], {"default": "transparency"}], "device": [["auto", "cuda", "cpu"], {"default": "auto"}], "update_model": ["BOOLEAN", {"default": false, "label_on": "Yes", "label_off": "No"}]}}, "input_order": {"required": ["image", "RemoveBackground_model", "background_color", "device", "update_model"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["image", "mask"], "name": "RemoveBackgroundNode", "display_name": "\ud83d\udd8c\ufe0f Remove Background", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": false}, "SaveImageNode": {"input": {"required": {"images": ["IMAGE", {"tooltip": "The images to save."}], "filename_prefix": ["STRING", {"default": "ComfyUI", "tooltip": "The prefix for the file to save. This may include formatting information such as %date:yyyy-MM-dd% or %Empty Latent Image.width% to include values from nodes."}], "file_format": [["PNG", "JPG", "WebP"], {"default": "PNG", "tooltip": "The format to save the image."}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "filename_prefix", "file_format"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageNode", "display_name": "\ud83d\udd8c\ufe0f Save Image", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": true}, "SaveCaptionsImages": {"input": {"required": {"captions": ["STRING", {"forceInput": true, "multiline": true}], "images": ["IMAGE", {"multiline": true}], "save_path": ["STRING", {"multiline": false}], "prefix_file": ["STRING", {"multiline": false}], "delimiter_file": ["STRING", {"default": "_"}], "caption_extension": ["STRING", {"default": "txt"}], "image_extension": [["png", "jpg", "jpeg", "gif", "tiff", "webp", "bmp"]], "image_quality": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}], "lossless_webp": [["false", "true"]], "overwrite": ["BOOLEAN", {"default": false, "label_on": "On", "label_off": "Off"}]}}, "input_order": {"required": ["captions", "images", "save_path", "prefix_file", "delimiter_file", "caption_extension", "image_extension", "image_quality", "lossless_webp", "overwrite"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveCaptionsImages", "display_name": "\ud83d\udd8c\ufe0f Save Captions & Images", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": true}, "SDXLTextEncoderSimpleNode": {"input": {"required": {"width": ["INT", {"default": 4096, "min": 0, "max": 16384}], "height": ["INT", {"default": 4096, "min": 0, "max": 16384}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384}], "target_width": ["INT", {"default": 4096, "min": 0, "max": 16384}], "target_height": ["INT", {"default": 4096, "min": 0, "max": 16384}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "crop_w", "crop_h", "target_width", "target_height", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "SDXLTextEncoderSimpleNode", "display_name": "\ud83d\udd8c\ufe0f SDXL Text Encoder Simple", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": false}, "StyleModelApplySimple": {"input": {"required": {"clip_vision": ["CLIP_VISION", {"tooltip": "The CLIP Vision model used for encoding the image."}], "style_model": ["STYLE_MODEL", {"tooltip": "The style model to be applied."}], "image": ["IMAGE", {"tooltip": "The image to encode and apply style."}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.001, "tooltip": "The intensity of the style application."}], "strength_type": [["multiply", "attn_bias"], {"default": "multiply", "tooltip": "Method to apply the style."}], "crop": [["center", "none"], {"default": "center", "tooltip": "Crop method for the CLIP Vision encoder."}], "conditioning": ["CONDITIONING", {"tooltip": "The initial conditioning to modify with the style."}]}}, "input_order": {"required": ["clip_vision", "style_model", "image", "strength", "strength_type", "crop", "conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "StyleModelApplySimple", "display_name": "\ud83d\udd8c\ufe0f Style Model Apply (Simple)", "description": "Encodes an image with CLIP Vision and applies a style model to modify the conditioning.", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia/Style Model", "output_node": false}, "TextFieldNode": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "TextFieldNode", "display_name": "\ud83d\udd8c\ufe0f Text Field", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": false}, "TileCheckpointPatchNode": {"input": {"required": {"model": ["MODEL"], "vae": ["VAE"], "tiling": [["enable", "x_only", "y_only", "disable"]], "copy_option": [["Make a copy", "Modify in place"]]}}, "input_order": {"required": ["model", "vae", "tiling", "copy_option"]}, "output": ["MODEL", "VAE"], "output_is_list": [false, false], "output_name": ["MODEL", "VAE"], "name": "TileCheckpointPatchNode", "display_name": "\ud83d\udd8c\ufe0f Tile Checkpoint Patch", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia/Tile", "output_node": false}, "UpscaleImageWithModel": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]], "upscale_by": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 8.0, "step": 0.01}], "image": ["IMAGE"], "tile_size": ["INT", {"default": 512, "min": 128, "max": 8192, "step": 8}]}}, "input_order": {"required": ["model_name", "upscale_by", "image", "tile_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UpscaleImageWithModel", "display_name": "\ud83d\udd8c\ufe0f Upscale Image with Model", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": false}, "VTracerImageVectorizerNode": {"input": {"required": {"image": ["IMAGE"], "colormode": [["color", "binary"], {"default": "color"}], "hierarchical": [["stacked", "cutout"], {"default": "stacked"}], "mode": [["spline", "polygon", "none"], {"default": "spline"}], "filter_speckle": ["INT", {"default": 4, "min": 1, "max": 10}], "color_precision": ["INT", {"default": 6, "min": 1, "max": 10}], "layer_difference": ["INT", {"default": 16, "min": 1, "max": 30}], "corner_threshold": ["INT", {"default": 60, "min": 1, "max": 120}], "length_threshold": ["FLOAT", {"default": 4.0, "min": 3.5, "max": 10.0}], "max_iterations": ["INT", {"default": 10, "min": 1, "max": 20}], "splice_threshold": ["INT", {"default": 45, "min": 1, "max": 90}], "path_precision": ["INT", {"default": 3, "min": 1, "max": 8}], "save_format": [["SVG", "PDF"], {"default": "SVG"}], "filename_prefix": ["STRING", {"default": "ComfyUI"}]}}, "input_order": {"required": ["image", "colormode", "hierarchical", "mode", "filter_speckle", "color_precision", "layer_difference", "corner_threshold", "length_threshold", "max_iterations", "splice_threshold", "path_precision", "save_format", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "VTracerImageVectorizerNode", "display_name": "\ud83d\udd8c\ufe0f VTracer (Image vectorizer)", "description": "", "python_module": "custom_nodes.ComfyUI-NeuralMedia", "category": "ComfyUI-NeuralMedia", "output_node": true}, "CutPNGNode": {"input": {"required": {"image": ["IMAGE"], "model_path": ["STRING", {"default": "E:\\ComfyUI_windows_portable\\ComfyUI\\custom_nodes\\CutPNGNode\\RMBG-1.4.pt"}], "x": ["INT", {"default": 0, "min": 0}], "y": ["INT", {"default": 0, "min": 0}], "width": ["INT", {"default": 256, "min": 1}], "height": ["INT", {"default": 256, "min": 1}]}}, "input_order": {"required": ["image", "model_path", "x", "y", "width", "height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CutPNGNode", "display_name": "Cut PNG (Background Remove)", "description": "", "python_module": "custom_nodes.ComfyUI-Pathway-CutPNG-Node", "category": "Image Processing", "output_node": false}, "TrellisVideoPlayerNode": {"input": {"required": {"video_path": ["STRING", {"default": ""}]}}, "input_order": {"required": ["video_path"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "TrellisVideoPlayerNode", "display_name": "Trellis Video Player", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": true}, "TrellisModelViewerNode": {"input": {"required": {"model_path": ["STRING", {"default": ""}]}}, "input_order": {"required": ["model_path"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "TrellisModelViewerNode", "display_name": "Trellis Model Viewer", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": true}, "TrellisProcessWebSocket": {"input": {"required": {"image": ["IMAGE"], "server_url": ["STRING", {"default": "ws://35.164.116.189:38183"}], "seed": ["INT", {"default": 1, "min": 1, "max": 2147483647}], "sparse_steps": ["INT", {"default": 12, "min": 1, "max": 50}], "sparse_cfg_strength": ["FLOAT", {"default": 7.5, "min": 0.0, "max": 10.0, "step": 0.1}], "slat_steps": ["INT", {"default": 12, "min": 1, "max": 50}], "slat_cfg_strength": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 10.0, "step": 0.1}], "simplify": ["FLOAT", {"default": 0.95, "min": 0.9, "max": 0.98, "step": 0.01}], "texture_size": ["INT", {"default": 1024, "min": 512, "max": 2048, "step": 512}]}, "optional": {"custom_output_dir": ["STRING", {"default": "Otherrides_3d"}]}}, "input_order": {"required": ["image", "server_url", "seed", "sparse_steps", "sparse_cfg_strength", "slat_steps", "slat_cfg_strength", "simplify", "texture_size"], "optional": ["custom_output_dir"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["model_path", "video_path"], "name": "TrellisProcessWebSocket", "display_name": "Trellis Process (WebSocket)", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "Trellis3DPreview": {"input": {"required": {"model_path": ["STRING", {"default": ""}]}}, "input_order": {"required": ["model_path"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["model_path"], "name": "Trellis3DPreview", "display_name": "Trellis 3D Preview", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "TrellisStatusNode": {"input": {"required": {"session_id": ["STRING", {"default": ""}], "task_id": ["STRING", {"default": ""}], "server_url": ["STRING", {"default": "ws://18.199.134.45:46173"}], "poll_interval": ["FLOAT", {"default": 2.0, "min": 0.5, "max": 10.0, "step": 0.5}]}}, "input_order": {"required": ["session_id", "task_id", "server_url", "poll_interval"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["status"], "name": "TrellisStatusNode", "display_name": "Trellis Status Monitor", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "TrellisSessionManager": {"input": {"required": {"action": [["create", "load", "save"], {"default": "create"}], "session_name": ["STRING", {"default": "default_session"}]}, "optional": {"session_id": ["STRING", {"default": ""}], "task_id": ["STRING", {"default": ""}]}}, "input_order": {"required": ["action", "session_name"], "optional": ["session_id", "task_id"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["session_id", "task_id"], "name": "TrellisSessionManager", "display_name": "Trellis Session Manager", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "TrellisMultiImageNode": {"input": {"required": {"images": ["IMAGE"], "server_url": ["STRING", {"default": "ws://18.199.134.45:46173"}], "seed": ["INT", {"default": 1, "min": 1, "max": 2147483647}], "sparse_steps": ["INT", {"default": 12, "min": 1, "max": 50}], "sparse_cfg_strength": ["FLOAT", {"default": 7.5, "min": 0.0, "max": 10.0, "step": 0.1}], "slat_steps": ["INT", {"default": 12, "min": 1, "max": 50}], "slat_cfg_strength": ["FLOAT", {"default": 3.0, "min": 0.0, "max": 10.0, "step": 0.1}], "simplify": ["FLOAT", {"default": 0.95, "min": 0.9, "max": 0.98, "step": 0.01}], "texture_size": ["INT", {"default": 1024, "min": 512, "max": 2048, "step": 512}]}}, "input_order": {"required": ["images", "server_url", "seed", "sparse_steps", "sparse_cfg_strength", "slat_steps", "slat_cfg_strength", "simplify", "texture_size"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["glb_path", "video_path", "session_id", "task_id"], "name": "TrellisMultiImageNode", "display_name": "Trellis Multi-Image Process", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "TrellisModelLoader": {"input": {"required": {"glb_path": ["STRING", {"default": ""}]}}, "input_order": {"required": ["glb_path"]}, "output": ["GLB_MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "TrellisModelLoader", "display_name": "Trellis GLB Model Loader", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "OtherridesImageBatchLoader": {"input": {"required": {"input_mode": [["folder", "files"], {"default": "folder"}], "max_batch_size": ["INT", {"default": 6, "min": 1, "max": 12, "step": 1}], "sort_images": [["name", "date_newest", "date_oldest", "random"], {"default": "name"}], "include_subfolders": [["yes", "no"], {"default": "yes"}], "folder_path": ["STRING", {"default": "Otherrides_assets"}]}}, "input_order": {"required": ["input_mode", "max_batch_size", "sort_images", "include_subfolders", "folder_path"]}, "output": ["IMAGE", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["images", "batch_count", "image_paths"], "name": "OtherridesImageBatchLoader", "display_name": "Otherrides OG-Batch Image Loader", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Otherrides", "output_node": false}, "OtherridesImageBatchProcessor": {"input": {"required": {"images": ["IMAGE"], "batch_count": ["INT", {"default": 0, "min": 0, "max": 100}], "image_paths": ["STRING", {"default": "[]"}], "index": ["INT", {"default": 0, "min": 0, "max": 100}]}}, "input_order": {"required": ["images", "batch_count", "image_paths", "index"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "image_path"], "name": "OtherridesImageBatchProcessor", "display_name": "Otherrides OG- Batch Image Processor", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Otherrides", "output_node": false}, "OtherridesFileBrowser": {"input": {"required": {}}, "input_order": {"required": []}, "output": [], "output_is_list": [], "output_name": [], "name": "OtherridesFileBrowser", "display_name": "OtherridesFileBrowser", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "hidden", "output_node": false}, "OtherridesFolderBrowser_01": {"input": {"required": {"folder": [["", "3d", "Otherrides_assets", "Otherrides_assets/turnarounds"], {"default": "Otherrides_assets"}], "subfolder": ["STRING", {"default": ""}]}}, "input_order": {"required": ["folder", "subfolder"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["folder_path"], "name": "OtherridesFolderBrowser_01", "display_name": "Otherrides OG-Folder Browser", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Otherrides", "output_node": false}, "OtherridesFolderBrowser_2": {"input": {"required": {"folder": [["", "3d", "Otherrides_assets", "Otherrides_assets/turnarounds"], {"default": "Otherrides_assets"}], "subfolder": ["STRING", {"default": ""}]}}, "input_order": {"required": ["folder", "subfolder"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["folder_path"], "name": "OtherridesFolderBrowser_2", "display_name": "Otherrides Improved Folder Browser", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Otherrides", "output_node": false}, "OtherridesImageBatchLoader_widget": {"input": {"required": {"input_mode": [["folder", "files"], {"default": "folder"}], "max_batch_size": ["INT", {"default": 6, "min": 1, "max": 12, "step": 1}], "sort_images": [["name", "date_newest", "date_oldest", "random"], {"default": "name"}], "include_subfolders": [["yes", "no"], {"default": "yes"}]}, "optional": {"folder_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_mode", "max_batch_size", "sort_images", "include_subfolders"], "optional": ["folder_path"]}, "output": ["IMAGE", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["images", "batch_count", "image_paths"], "name": "OtherridesImageBatchLoader_widget", "display_name": "Otherrides Bulk Image Loader widget", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Otherrides", "output_node": false}, "SimpleFilePicker": {"input": {"required": {"select_type": [["folder", "file"], {"default": "folder"}], "path": ["STRING", {"default": ""}]}}, "input_order": {"required": ["select_type", "path"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["select_path"], "name": "SimpleFilePicker", "display_name": "Simple File Picker", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Otherrides", "output_node": false}, "TrellisFilePicker": {"input": {"required": {"select_type": [["folder", "file"], {"default": "folder"}], "path": ["STRING", {"default": ""}]}}, "input_order": {"required": ["select_type", "path"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["selected_path"], "name": "TrellisFilePicker", "display_name": "Trellis File Picker", "description": "", "python_module": "custom_nodes.ComfyUI-Trellis", "category": "Trellis", "output_node": false}, "CR Image Output": {"input": {"required": {"images": ["IMAGE"], "output_type": [["Preview", "Save", "UI (no batch)"]], "filename_prefix": ["STRING", {"default": "CR"}], "prefix_presets": [["None", "yyyyMMdd"]], "file_format": [["png", "jpg", "webp", "tif"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}, "optional": {"trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "output_type", "filename_prefix", "prefix_presets", "file_format"], "hidden": ["prompt", "extra_pnginfo"], "optional": ["trigger"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["trigger"], "name": "CR Image Output", "display_name": "\ud83d\udcbe CR Image Output", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": true}, "CR Latent Batch Size": {"input": {"required": {"latent": ["LATENT"], "batch_size": ["INT", {"default": 2, "min": 1, "max": 999, "step": 1}]}}, "input_order": {"required": ["latent", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "CR Latent Batch Size", "display_name": "\u2699\ufe0f CR Latent Batch Size", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Conditioning Mixer": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"], "mix_method": [["Combine", "Average", "Concatenate"]], "average_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_1", "conditioning_2", "mix_method", "average_strength"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Conditioning Mixer", "display_name": "\u2699\ufe0f CR Conditioning Mixer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Select Model": {"input": {"required": {"ckpt_name1": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "ckpt_name2": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "ckpt_name3": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "ckpt_name4": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "ckpt_name5": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "select_model": ["INT", {"default": 1, "min": 1, "max": 5}]}}, "input_order": {"required": ["ckpt_name1", "ckpt_name2", "ckpt_name3", "ckpt_name4", "ckpt_name5", "select_model"]}, "output": ["MODEL", "CLIP", "VAE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "ckpt_name", "show_help"], "name": "CR Select Model", "display_name": "\ud83d\udd2e CR Select Model", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["seed", "show_help"], "name": "CR Seed", "display_name": "\ud83c\udf31 CR Seed", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": true}, "CR Prompt Text": {"input": {"required": {"prompt": ["STRING", {"default": "prompt", "multiline": true}]}}, "input_order": {"required": ["prompt"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["prompt", "show_help"], "name": "CR Prompt Text", "display_name": "\u2699\ufe0f CR Prompt Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Combine Prompt": {"input": {"required": {}, "optional": {"part1": ["STRING", {"default": "", "multiline": true}], "part2": ["STRING", {"default": "", "multiline": true}], "part3": ["STRING", {"default": "", "multiline": true}], "part4": ["STRING", {"default": "", "multiline": true}], "separator": ["STRING", {"default": ",", "multiline": false}]}}, "input_order": {"required": [], "optional": ["part1", "part2", "part3", "part4", "separator"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["prompt", "show_help"], "name": "CR Combine Prompt", "display_name": "\u2699\ufe0f CR Combine Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR VAE Decode": {"input": {"required": {"samples": ["LATENT"], "vae": ["VAE"], "tiled": ["BOOLEAN", {"default": false}], "circular": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["samples", "vae", "tiled", "circular"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR VAE Decode", "display_name": "\u2699\ufe0f CR VAE Decode", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udce6 Core", "output_node": false}, "CR Text List": {"input": {"required": {"multiline_text": ["STRING", {"multiline": true, "default": "text"}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}}, "input_order": {"required": ["multiline_text", "start_index", "max_rows"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Text List", "display_name": "\ud83d\udcdc CR Text List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Prompt List": {"input": {"required": {"prepend_text": ["STRING", {"multiline": false, "default": ""}], "multiline_text": ["STRING", {"multiline": true, "default": "body_text"}], "append_text": ["STRING", {"multiline": false, "default": ""}], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}}, "input_order": {"required": ["prepend_text", "multiline_text", "append_text", "start_index", "max_rows"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [true, true, false], "output_name": ["prompt", "body_text", "show_help"], "name": "CR Prompt List", "display_name": "\ud83d\udcdc CR Prompt List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Simple List": {"input": {"required": {"list_values": ["STRING", {"multiline": true, "default": "text"}]}}, "input_order": {"required": ["list_values"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["LIST", "show_help"], "name": "CR Simple List", "display_name": "\ud83d\udcdc CR Simple List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Float Range List": {"input": {"required": {"start": ["FLOAT", {"default": 0.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "end": ["FLOAT", {"default": 1.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "step": ["FLOAT", {"default": 1.0, "min": -99999.99, "max": 99999.99, "step": 0.01}], "operation": [["none", "sin", "cos", "tan"]], "decimal_places": ["INT", {"default": 2, "min": 0, "max": 10}], "ignore_first_value": ["BOOLEAN", {"default": true}], "max_values_per_loop": ["INT", {"default": 128, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 999}], "ping_pong": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["start", "end", "step", "operation", "decimal_places", "ignore_first_value", "max_values_per_loop", "loops", "ping_pong"]}, "output": ["FLOAT", "STRING"], "output_is_list": [true, false], "output_name": ["FLOAT", "show_help"], "name": "CR Float Range List", "display_name": "\ud83d\udcdc CR Float Range List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Integer Range List": {"input": {"required": {"start": ["INT", {"default": 0, "min": -99999, "max": 99999}], "end": ["INT", {"default": 0, "min": -99999, "max": 99999}], "step": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 999}], "ping_pong": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["start", "end", "step", "loops", "ping_pong"]}, "output": ["INT", "STRING"], "output_is_list": [true, false], "output_name": ["INT", "show_help"], "name": "CR Integer Range List", "display_name": "\ud83d\udcdc CR Integer Range List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Load Text List": {"input": {"required": {"input_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["input_file_path", "file_name", "file_extension"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Load Text List", "display_name": "\ud83d\udcdc CR Load Text List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Binary To Bit List": {"input": {"required": {"bit_string": ["STRING", {"multiline": true, "default": ""}]}}, "input_order": {"required": ["bit_string"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Binary To Bit List", "display_name": "\ud83d\udcdc CR Binary To Bit List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Text Cycler": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": ""}], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["text", "repeats", "loops"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_text"], "name": "CR Text Cycler", "display_name": "\ud83d\udcdc CR Text Cycler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Value Cycler": {"input": {"required": {"values": ["STRING", {"multiline": true, "default": ""}], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["values", "repeats", "loops"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [true, true, false], "output_name": ["FLOAT", "INT", "show_text"], "name": "CR Value Cycler", "display_name": "\ud83d\udcdc CR Value Cycler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List", "output_node": false}, "CR Load Image List": {"input": {"required": {"input_folder": [["3d", "Otherrides_assets"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_images": ["INT", {"default": 1, "min": 1, "max": 9999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "start_index", "max_images"], "optional": ["input_path"]}, "output": ["IMAGE", "STRING"], "output_is_list": [true, false], "output_name": ["IMAGE", "show_help"], "name": "CR Load Image List", "display_name": "\u2328\ufe0f CR Load Image List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Load Image List Plus": {"input": {"required": {"input_folder": [["3d", "Otherrides_assets"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 99999}], "max_images": ["INT", {"default": 1, "min": 1, "max": 99999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "start_index", "max_images"], "optional": ["input_path"]}, "output": ["IMAGE", "MASK", "INT", "STRING", "INT", "INT", "INT", "STRING"], "output_is_list": [true, true, true, true, false, false, false, false], "output_name": ["IMAGE", "MASK", "index", "filename", "width", "height", "list_length", "show_help"], "name": "CR Load Image List Plus", "display_name": "\u2328\ufe0f CR Load Image List Plus", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Load GIF As List": {"input": {"required": {"input_folder": [["3d", "Otherrides_assets"]], "gif_filename": ["STRING", {"multiline": false, "default": "text"}], "start_frame": ["INT", {"default": 0, "min": 0, "max": 99999}], "max_frames": ["INT", {"default": 1, "min": 1, "max": 99999}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["input_folder", "gif_filename", "start_frame", "max_frames"], "optional": ["input_path"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [true, true, false], "output_name": ["IMAGE", "MASK", "show_help"], "name": "CR Load GIF As List", "display_name": "\u2328\ufe0f CR Load GIF As List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Font File List": {"input": {"required": {"source_folder": [["system", "Comfyroll", "from folder"]], "start_index": ["INT", {"default": 0, "min": 0, "max": 9999}], "max_rows": ["INT", {"default": 1000, "min": 1, "max": 9999}]}, "optional": {"folder_path": ["STRING", {"default": "C:\\Windows\\Fonts", "multiline": false}]}}, "input_order": {"required": ["source_folder", "start_index", "max_rows"], "optional": ["folder_path"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["LIST", "show_help"], "name": "CR Font File List", "display_name": "\u2328\ufe0f CR Font File List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\u2328\ufe0f IO", "output_node": false}, "CR Batch Images From List": {"input": {"required": {"image_list": ["IMAGE"]}}, "input_order": {"required": ["image_list"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image_batch", "show_help"], "name": "CR Batch Images From List", "display_name": "\ud83d\udee0\ufe0f CR Batch Images From List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Intertwine Lists": {"input": {"required": {"list1": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "list2": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}}, "input_order": {"required": ["list1", "list2"]}, "output": ["STRING", "STRING"], "output_is_list": [true, false], "output_name": ["STRING", "show_help"], "name": "CR Intertwine Lists", "display_name": "\ud83d\udee0\ufe0f CR Intertwine Lists", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Repeater": {"input": {"required": {"input_data": ["*"], "repeats": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["input_data", "repeats"]}, "output": ["*", "STRING"], "output_is_list": [true, false], "output_name": ["list", "show_help"], "name": "CR Repeater", "display_name": "\ud83d\udee0\ufe0f CR Repeater", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR XY Product": {"input": {"required": {"text_x": ["STRING", {"multiline": true}], "text_y": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text_x", "text_y"]}, "output": ["*", "*", "STRING"], "output_is_list": [true, true, false], "output_name": ["x_values", "y_values", "show_help"], "name": "CR XY Product", "display_name": "\ud83d\udee0\ufe0f CR XY Product", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Text List To String": {"input": {"required": {"text_list": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text_list"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text List To String", "display_name": "\ud83d\udee0\ufe0f CR Text List To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcdc List/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR SD1.5 Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 8192}], "height": ["INT", {"default": 512, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "1:1 square 512x512", "1:1 square 1024x1024", "2:3 portrait 512x768", "3:4 portrait 512x682", "3:2 landscape 768x512", "4:3 landscape 682x512", "16:9 cinema 910x512", "1.85:1 cinema 952x512", "2:1 cinema 1024x512", "2.39:1 anamorphic 1224x512"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR SD1.5 Aspect Ratio", "display_name": "\ud83d\udd33 CR SD1.5 Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR SDXL Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "1:1 square 1024x1024", "3:4 portrait 896x1152", "5:8 portrait 832x1216", "9:16 portrait 768x1344", "9:21 portrait 640x1536", "4:3 landscape 1152x896", "3:2 landscape 1216x832", "16:9 landscape 1344x768", "21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR SDXL Aspect Ratio", "display_name": "\ud83d\udd33 CR SDXL Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "SD1.5 - 1:1 square 512x512", "SD1.5 - 2:3 portrait 512x768", "SD1.5 - 3:4 portrait 512x682", "SD1.5 - 3:2 landscape 768x512", "SD1.5 - 4:3 landscape 682x512", "SD1.5 - 16:9 cinema 910x512", "SD1.5 - 1.85:1 cinema 952x512", "SD1.5 - 2:1 cinema 1024x512", "SDXL - 1:1 square 1024x1024", "SDXL - 3:4 portrait 896x1152", "SDXL - 5:8 portrait 832x1216", "SDXL - 9:16 portrait 768x1344", "SDXL - 9:21 portrait 640x1536", "SDXL - 4:3 landscape 1152x896", "SDXL - 3:2 landscape 1216x832", "SDXL - 16:9 landscape 1344x768", "SDXL - 21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio", "display_name": "\ud83d\udd33 CR Aspect Ratio", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio Banners": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "Large Rectangle - 336x280", "Medium Rectangle - 300x250", "Small Rectangle - 180x150", "Square - 250x250", "Small Square - 200x200", "Button - 125x125", "Half Page - 300x600", "Vertical Banner - 120x240", "Wide Skyscraper - 160x600", "Skyscraper - 120x600", "Billboard - 970x250", "Portrait - 300x1050", "Banner - 468x60", "Leaderboard - 728x90"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio Banners", "display_name": "\ud83d\udd33 CR Aspect Ratio Banners", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Aspect Ratio Social Media": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["custom", "Instagram Portrait - 1080x1350", "Instagram Square - 1080x1080", "Instagram Landscape - 1080x608", "Instagram Stories/Reels - 1080x1920", "Facebook Landscape - 1080x1350", "Facebook Marketplace - 1200x1200", "Facebook Stories - 1080x1920", "TikTok - 1080x1920", "YouTube Banner - 2560\u00d71440", "LinkedIn Profile Banner - 1584x396", "LinkedIn Page Cover - 1128x191", "LinkedIn Post - 1200x627", "Pinterest Pin Image - 1000x1500", "CivitAI Cover - 1600x400", "OpenArt App - 1500x1000"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR Aspect Ratio Social Media", "display_name": "\ud83d\udd33 CR Aspect Ratio Social Media", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR_Aspect Ratio For Print": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 8192}], "height": ["INT", {"default": 1024, "min": 64, "max": 8192}], "aspect_ratio": [["A4 - 2480x3508", "A5 - 1748x2480", "A6 - 1240x1748", "A7 - 874x1240", "A8 - 614x874", "A9 - 437x614", "A10 - 307x437", "B4 - 2953x4169", "B5 - 2079x2953", "B6 - 1476x2079", "B7 - 1039x1476", "B8 - 732x1039", "B9 - 520x732", "B10 - 366x520", "C4 - 2705x3827", "C5 - 1913x2705", "C6 - 1346x1913", "C7 - 957x1346", "C8 - 673x957", "C9 - 472x673", "C10 - 331x472", "Letter (8.5 x 11 inches) - 2550x3300", "Legal (8.5 x 14 inches) - 2550x4200"]], "swap_dimensions": [["Off", "On"]], "upscale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "prescale_factor": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 100.0, "step": 0.1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor", "prescale_factor", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "LATENT", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["width", "height", "upscale_factor", "prescale_factor", "batch_size", "empty_latent", "show_help"], "name": "CR_Aspect Ratio For Print", "display_name": "\ud83d\udd33 CR_Aspect Ratio For Print", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd33 Aspect Ratio", "output_node": false}, "CR Image Size": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 2048}], "height": ["INT", {"default": 512, "min": 64, "max": 2048}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000}]}}, "input_order": {"required": ["width", "height", "upscale_factor"]}, "output": ["INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["Width", "Height", "upscale_factor", "show_help"], "name": "CR Image Size", "display_name": "CR Image Size (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Aspect Ratio SDXL": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 64, "max": 2048}], "height": ["INT", {"default": 1024, "min": 64, "max": 2048}], "aspect_ratio": [["custom", "1:1 square 1024x1024", "3:4 portrait 896x1152", "5:8 portrait 832x1216", "9:16 portrait 768x1344", "9:21 portrait 640x1536", "4:3 landscape 1152x896", "3:2 landscape 1216x832", "16:9 landscape 1344x768", "21:9 landscape 1536x640"]], "swap_dimensions": [["Off", "On"]], "upscale_factor1": ["FLOAT", {"default": 1, "min": 1, "max": 2000}], "upscale_factor2": ["FLOAT", {"default": 1, "min": 1, "max": 2000}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["width", "height", "aspect_ratio", "swap_dimensions", "upscale_factor1", "upscale_factor2", "batch_size"]}, "output": ["INT", "INT", "FLOAT", "FLOAT", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["INT", "INT", "FLOAT", "FLOAT", "INT", "show_help"], "name": "CR Aspect Ratio SDXL", "display_name": "CR Aspect Ratio SDXL (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR SDXL Prompt Mixer": {"input": {"required": {}, "optional": {"prompt_positive": ["STRING", {"multiline": true, "default": "BASE_POSITIVE"}], "prompt_negative": ["STRING", {"multiline": true, "default": "BASE_NEGATIVE"}], "style_positive": ["STRING", {"multiline": true, "default": "REFINER_POSTIVE"}], "style_negative": ["STRING", {"multiline": true, "default": "REFINER_NEGATIVE"}], "preset": [["preset 1", "preset 2", "preset 3", "preset 4", "preset 5"]]}}, "input_order": {"required": [], "optional": ["prompt_positive", "prompt_negative", "style_positive", "style_negative", "preset"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r"], "name": "CR SDXL Prompt Mixer", "display_name": "CR SDXL Prompt Mixer (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Seed to Int": {"input": {"required": {"seed": ["SEED"]}}, "input_order": {"required": ["seed"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Seed to Int", "display_name": "CR Seed to Int (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc80 Legacy", "output_node": false}, "CR Apply ControlNet": {"input": {"required": {"conditioning": ["CONDITIONING"], "control_net": ["CONTROL_NET"], "image": ["IMAGE"], "switch": [["On", "Off"]], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "control_net", "image", "switch", "strength"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Apply ControlNet", "display_name": "\ud83d\udd79\ufe0f CR Apply ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Multi-ControlNet Stack": {"input": {"required": {}, "optional": {"switch_1": [["Off", "On"]], "controlnet_1": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "controlnet_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_1": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "switch_2": [["Off", "On"]], "controlnet_2": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "controlnet_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_2": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "switch_3": [["Off", "On"]], "controlnet_3": [["None", "Flux/Flux.1-dev-Controlnet-Upscaler.safetensors", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-depth-controlnet-v3.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "Flux/flux-hed-controlnet-v3.safetensors", "control-lora-canny-rank256.safetensors", "control-lora-depth-rank256.safetensors", "control-lora-recolor-rank256.safetensors", "control-lora-sketch-rank256.safetensors", "old/diffusion_pytorch_model.safetensors", "sd15/control_sd15_depth.pth"]], "controlnet_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "start_percent_3": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}], "image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "controlnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": [], "optional": ["switch_1", "controlnet_1", "controlnet_strength_1", "start_percent_1", "end_percent_1", "switch_2", "controlnet_2", "controlnet_strength_2", "start_percent_2", "end_percent_2", "switch_3", "controlnet_3", "controlnet_strength_3", "start_percent_3", "end_percent_3", "image_1", "image_2", "image_3", "controlnet_stack"]}, "output": ["CONTROL_NET_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["CONTROLNET_STACK", "show_help"], "name": "CR Multi-ControlNet Stack", "display_name": "\ud83d\udd79\ufe0f CR Multi-ControlNet Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Apply Multi-ControlNet": {"input": {"required": {"base_positive": ["CONDITIONING"], "base_negative": ["CONDITIONING"], "switch": [["Off", "On"]], "controlnet_stack": ["CONTROL_NET_STACK"]}}, "input_order": {"required": ["base_positive", "base_negative", "switch", "controlnet_stack"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_pos", "base_neg", "show_help"], "name": "CR Apply Multi-ControlNet", "display_name": "\ud83d\udd79\ufe0f CR Apply Multi-ControlNet", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd79\ufe0f ControlNet", "output_node": false}, "CR Load LoRA": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "switch": [["On", "Off"]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "switch", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Load LoRA", "display_name": "\ud83d\udc8a CR Load LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR LoRA Stack": {"input": {"required": {"switch_1": [["Off", "On"]], "lora_name_1": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "switch_2": [["Off", "On"]], "lora_name_2": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "switch_3": [["Off", "On"]], "lora_name_3": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "model_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["switch_1", "lora_name_1", "model_weight_1", "clip_weight_1", "switch_2", "lora_name_2", "model_weight_2", "clip_weight_2", "switch_3", "lora_name_3", "model_weight_3", "clip_weight_3"], "optional": ["lora_stack"]}, "output": ["LORA_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["LORA_STACK", "show_help"], "name": "CR LoRA Stack", "display_name": "\ud83d\udc8a CR LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Random LoRA Stack": {"input": {"required": {"exclusive_mode": [["Off", "On"]], "stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "force_randomize_after_stride": [["Off", "On"]], "lora_name_1": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "switch_1": [["Off", "On"]], "chance_1": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_2": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "switch_2": [["Off", "On"]], "chance_2": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name_3": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "switch_3": [["Off", "On"]], "chance_3": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "model_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["exclusive_mode", "stride", "force_randomize_after_stride", "lora_name_1", "switch_1", "chance_1", "model_weight_1", "clip_weight_1", "lora_name_2", "switch_2", "chance_2", "model_weight_2", "clip_weight_2", "lora_name_3", "switch_3", "chance_3", "model_weight_3", "clip_weight_3"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "CR Random LoRA Stack", "display_name": "\ud83d\udc8a CR Random LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Random Weight LoRA": {"input": {"required": {"stride": ["INT", {"default": 1, "min": 1, "max": 1000}], "force_randomize_after_stride": [["Off", "On"]], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "switch": [["Off", "On"]], "weight_min": ["FLOAT", {"default": 0.0, "min": -10.0, "max": 10.0, "step": 0.01}], "weight_max": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_weight": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["stride", "force_randomize_after_stride", "lora_name", "switch", "weight_min", "weight_max", "clip_weight"], "optional": ["lora_stack"]}, "output": ["LORA_STACK"], "output_is_list": [false], "output_name": ["LORA_STACK"], "name": "CR Random Weight LoRA", "display_name": "\ud83d\udc8a CR Random Weight LoRA", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Apply LoRA Stack": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_stack": ["LORA_STACK"]}}, "input_order": {"required": ["model", "clip", "lora_stack"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Apply LoRA Stack", "display_name": "\ud83d\udc8a CR Apply LoRA Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udc8a LoRA", "output_node": false}, "CR Apply Model Merge": {"input": {"required": {"model_stack": ["MODEL_STACK"], "merge_method": [["Recursive", "Weighted"]], "normalise_ratios": [["Yes", "No"]], "weight_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model_stack", "merge_method", "normalise_ratios", "weight_factor"]}, "output": ["MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "model_mix_info", "show_help"], "name": "CR Apply Model Merge", "display_name": "\u26cf\ufe0f CR Apply Model Merge", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge", "output_node": false}, "CR Model Merge Stack": {"input": {"required": {"switch_1": [["Off", "On"]], "ckpt_name1": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "model_ratio1": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio1": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "switch_2": [["Off", "On"]], "ckpt_name2": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "model_ratio2": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio2": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "switch_3": [["Off", "On"]], "ckpt_name3": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "model_ratio3": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "clip_ratio3": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}, "optional": {"model_stack": ["MODEL_STACK"]}}, "input_order": {"required": ["switch_1", "ckpt_name1", "model_ratio1", "clip_ratio1", "switch_2", "ckpt_name2", "model_ratio2", "clip_ratio2", "switch_3", "ckpt_name3", "model_ratio3", "clip_ratio3"], "optional": ["model_stack"]}, "output": ["MODEL_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL_STACK", "show_help"], "name": "CR Model Merge Stack", "display_name": "\u26cf\ufe0f CR Model Merge Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\u26cf\ufe0f Model Merge", "output_node": false}, "CR Data Bus In": {"input": {"required": {}, "optional": {"pipe": ["*"], "any1": ["*"], "any2": ["*"], "any3": ["*"], "any4": ["*"]}}, "input_order": {"required": [], "optional": ["pipe", "any1", "any2", "any3", "any4"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Data Bus In", "display_name": "\ud83d\ude8c CR Data Bus In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR Data Bus Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pipe", "any1", "any2", "any3", "any4", "show_help"], "name": "CR Data Bus Out", "display_name": "\ud83d\ude8c CR Data Bus Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR 8 Channel In": {"input": {"required": {}, "optional": {"pipe": ["*"], "ch1": ["*"], "ch2": ["*"], "ch3": ["*"], "ch4": ["*"], "ch5": ["*"], "ch6": ["*"], "ch7": ["*"], "ch8": ["*"]}}, "input_order": {"required": [], "optional": ["pipe", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7", "ch8"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR 8 Channel In", "display_name": "\ud83d\ude8c CR 8 Channel In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR 8 Channel Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "*", "*", "*", "*", "*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "ch1", "ch2", "ch3", "ch4", "ch5", "ch6", "ch7", "ch8", "show_help"], "name": "CR 8 Channel Out", "display_name": "\ud83d\ude8c CR 8 Channel Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\ude8c Bus", "output_node": false}, "CR Module Pipe Loader": {"input": {"required": {}, "optional": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "controlnet": ["CONTROL_NET"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": [], "optional": ["model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Module Pipe Loader", "display_name": "\u2708\ufe0f CR Module Pipe Loader", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Module Input": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "VAE", "CLIP", "CONTROL_NET", "IMAGE", "INT", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false], "output_name": ["pipe", "model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed", "show_help"], "name": "CR Module Input", "display_name": "\u2708\ufe0f CR Module Input", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Module Output": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "optional": {"model": ["MODEL"], "pos": ["CONDITIONING"], "neg": ["CONDITIONING"], "latent": ["LATENT"], "vae": ["VAE"], "clip": ["CLIP"], "controlnet": ["CONTROL_NET"], "image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["pipe"], "optional": ["model", "pos", "neg", "latent", "vae", "clip", "controlnet", "image", "seed"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Module Output", "display_name": "\u2708\ufe0f CR Module Output", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\u2708\ufe0f Module", "output_node": false}, "CR Image Pipe In": {"input": {"required": {}, "optional": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 64, "max": 2048}], "height": ["INT", {"default": 512, "min": 64, "max": 2048}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000}]}}, "input_order": {"required": [], "optional": ["image", "width", "height", "upscale_factor"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Image Pipe In", "display_name": "\ud83d\udee9 CR Image Pipe In", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Image Pipe Edit": {"input": {"required": {"pipe": ["PIPE_LINE"]}, "optional": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 64, "max": 2048, "forceInput": true}], "height": ["INT", {"default": 512, "min": 64, "max": 2048, "forceInput": true}], "upscale_factor": ["FLOAT", {"default": 1, "min": 1, "max": 2000, "forceInput": true}]}}, "input_order": {"required": ["pipe"], "optional": ["image", "width", "height", "upscale_factor"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["pipe", "show_help"], "name": "CR Image Pipe Edit", "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Edit", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Image Pipe Out": {"input": {"required": {"pipe": ["PIPE_LINE"]}}, "input_order": {"required": ["pipe"]}, "output": ["PIPE_LINE", "IMAGE", "INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["pipe", "image", "width", "height", "upscale_factor", "show_help"], "name": "CR Image Pipe Out", "display_name": "\ud83d\udee9\ufe0f CR Image Pipe Out", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe/\ud83d\udee9\ufe0f Image", "output_node": false}, "CR Pipe Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "pipe1": ["PIPE_LINE"], "pipe2": ["PIPE_LINE"]}}, "input_order": {"required": ["Input", "pipe1", "pipe2"]}, "output": ["PIPE_LINE", "STRING"], "output_is_list": [false, false], "output_name": ["PIPE_LINE", "show_help"], "name": "CR Pipe Switch", "display_name": "\ud83d\udd00\ufe0f CR Pipe Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udfb7 Pipe", "output_node": true}, "CR SDXL Prompt Mix Presets": {"input": {"required": {}, "optional": {"prompt_positive": ["STRING", {"multiline": true, "default": "prompt_pos"}], "prompt_negative": ["STRING", {"multiline": true, "default": "prompt_neg"}], "style_positive": ["STRING", {"multiline": true, "default": "style_pos"}], "style_negative": ["STRING", {"multiline": true, "default": "style_neg"}], "preset": [["default with no style text", "default with style text", "style boost 1", "style boost 2", "style text to refiner"]]}}, "input_order": {"required": [], "optional": ["prompt_positive", "prompt_negative", "style_positive", "style_negative", "preset"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["pos_g", "pos_l", "pos_r", "neg_g", "neg_l", "neg_r", "show_help"], "name": "CR SDXL Prompt Mix Presets", "display_name": "\ud83c\udf1f CR SDXL Prompt Mix Presets", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR SDXL Style Text": {"input": {"required": {"positive_style": ["STRING", {"default": "POS_STYLE", "multiline": true}], "negative_style": ["STRING", {"default": "NEG_STYLE", "multiline": true}]}}, "input_order": {"required": ["positive_style", "negative_style"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["positive_prompt_text_l", "negative_prompt_text_l", "show_help"], "name": "CR SDXL Style Text", "display_name": "\ud83c\udf1f CR SDXL Style Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR SDXL Base Prompt Encoder": {"input": {"required": {"base_clip": ["CLIP"], "pos_g": ["STRING", {"multiline": true, "default": "POS_G"}], "pos_l": ["STRING", {"multiline": true, "default": "POS_L"}], "neg_g": ["STRING", {"multiline": true, "default": "NEG_G"}], "neg_l": ["STRING", {"multiline": true, "default": "NEG_L"}], "preset": [["preset A", "preset B", "preset C"]], "base_width": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "base_height": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "crop_w": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 64}], "crop_h": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 64}], "target_width": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}], "target_height": ["INT", {"default": 4096.0, "min": 0, "max": 16384, "step": 64}]}}, "input_order": {"required": ["base_clip", "pos_g", "pos_l", "neg_g", "neg_l", "preset", "base_width", "base_height", "crop_w", "crop_h", "target_width", "target_height"]}, "output": ["CONDITIONING", "CONDITIONING", "STRING"], "output_is_list": [false, false, false], "output_name": ["base_positive", "base_negative", "show_help"], "name": "CR SDXL Base Prompt Encoder", "display_name": "\ud83c\udf1f CR SDXL Base Prompt Encoder", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83c\udf1f SDXL", "output_node": false}, "CR Multi Upscale Stack": {"input": {"required": {"switch_1": [["On", "Off"]], "upscale_model_1": [["None", "4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]], "rescale_factor_1": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "switch_2": [["On", "Off"]], "upscale_model_2": [["None", "4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]], "rescale_factor_2": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "switch_3": [["On", "Off"]], "upscale_model_3": [["None", "4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]], "rescale_factor_3": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}]}, "optional": {"upscale_stack": ["UPSCALE_STACK"]}}, "input_order": {"required": ["switch_1", "upscale_model_1", "rescale_factor_1", "switch_2", "upscale_model_2", "rescale_factor_2", "switch_3", "upscale_model_3", "rescale_factor_3"], "optional": ["upscale_stack"]}, "output": ["UPSCALE_STACK", "STRING"], "output_is_list": [false, false], "output_name": ["UPSCALE_STACK", "show_help"], "name": "CR Multi Upscale Stack", "display_name": "\ud83d\udd0d CR Multi Upscale Stack", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR Upscale Image": {"input": {"required": {"image": ["IMAGE"], "upscale_model": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]], "mode": [["rescale", "resize"]], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "resize_width": ["INT", {"default": 1024, "min": 1, "max": 48000, "step": 1}], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}]}}, "input_order": {"required": ["image", "upscale_model", "mode", "rescale_factor", "resize_width", "resampling_method", "supersample", "rounding_modulus"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Upscale Image", "display_name": "\ud83d\udd0d CR Upscale Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR Apply Multi Upscale": {"input": {"required": {"image": ["IMAGE"], "resampling_method": [["lanczos", "nearest", "bilinear", "bicubic"]], "supersample": [["true", "false"]], "rounding_modulus": ["INT", {"default": 8, "min": 8, "max": 1024, "step": 8}], "upscale_stack": ["UPSCALE_STACK"]}}, "input_order": {"required": ["image", "resampling_method", "supersample", "rounding_modulus", "upscale_stack"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Apply Multi Upscale", "display_name": "\ud83d\udd0d CR Apply Multi Upscale", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udd0d Upscale", "output_node": false}, "CR XY List": {"input": {"required": {"index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "list1": ["STRING", {"multiline": true, "default": "x"}], "x_prepend": ["STRING", {"multiline": false, "default": ""}], "x_append": ["STRING", {"multiline": false, "default": ""}], "x_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "list2": ["STRING", {"multiline": true, "default": "y"}], "y_prepend": ["STRING", {"multiline": false, "default": ""}], "y_append": ["STRING", {"multiline": false, "default": ""}], "y_annotation_prepend": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["index", "list1", "x_prepend", "x_append", "x_annotation_prepend", "list2", "y_prepend", "y_append", "y_annotation_prepend"]}, "output": ["STRING", "STRING", "STRING", "STRING", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["X", "Y", "x_annotation", "y_annotation", "trigger", "show_help"], "name": "CR XY List", "display_name": "\ud83d\udcc9 CR XY List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY Interpolate": {"input": {"required": {"x_columns": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "x_start_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "x_step": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "x_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "y_rows": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_start_value": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "y_step": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "y_annotation_prepend": ["STRING", {"multiline": false, "default": ""}], "index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["x_columns", "x_start_value", "x_step", "x_annotation_prepend", "y_rows", "y_start_value", "y_step", "y_annotation_prepend", "index", "gradient_profile"]}, "output": ["FLOAT", "FLOAT", "STRING", "STRING", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["X", "Y", "x_annotation", "y_annotation", "trigger", "show_help"], "name": "CR XY Interpolate", "display_name": "\ud83d\udcc9 CR XY Interpolate", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY From Folder": {"input": {"required": {"image_folder": [["Flux", "Otherides-2d", "Otherrides_3d", "trellis_downloads", "trellis_models", "trellis_viewers"]], "start_index": ["INT", {"default": 1, "min": 0, "max": 10000}], "end_index": ["INT", {"default": 1, "min": 1, "max": 10000}], "max_columns": ["INT", {"default": 1, "min": 1, "max": 10000}], "x_annotation": ["STRING", {"multiline": true}], "y_annotation": ["STRING", {"multiline": true}], "font_size": ["INT", {"default": 50, "min": 1}], "gap": ["INT", {"default": 0, "min": 0}]}, "optional": {"trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image_folder", "start_index", "end_index", "max_columns", "x_annotation", "y_annotation", "font_size", "gap"], "optional": ["trigger"]}, "output": ["IMAGE", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "trigger", "show_help"], "name": "CR XY From Folder", "display_name": "\ud83d\udcc9 CR XY From Folder", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR XY Save Grid Image": {"input": {"required": {"mode": [["Save", "Preview"]], "output_folder": [["Flux", "Otherides-2d", "Otherrides_3d", "trellis_downloads", "trellis_models", "trellis_viewers"]], "image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "CR"}], "file_format": [["webp", "jpg", "png", "tif"]]}, "optional": {"output_path": ["STRING", {"default": "", "multiline": false}], "trigger": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["mode", "output_folder", "image", "filename_prefix", "file_format"], "optional": ["output_path", "trigger"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR XY Save Grid Image", "display_name": "\ud83d\udcc9 CR XY Save Grid Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": true}, "CR XY Index": {"input": {"required": {"x_columns": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "y_rows": ["INT", {"default": 5.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["x_columns", "y_rows", "index"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["x", "y", "show_help"], "name": "CR XY Index", "display_name": "\ud83d\udcc9 CR XY Index", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\u2728 Essential/\ud83d\udcc9 XY Grid", "output_node": false}, "CR Halftone Grid": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "dot_style": [["Accent", "afmhot", "autumn", "binary", "Blues", "bone", "BrBG", "brg", "BuGn", "BuPu", "bwr", "cividis", "CMRmap", "cool", "coolwarm", "copper", "cubehelix", "Dark2", "flag", "gist_earth", "gist_gray", "gist_heat", "gist_rainbow", "gist_stern", "gist_yarg", "GnBu", "gnuplot", "gnuplot2", "gray", "Greens", "Greys", "hot", "hsv", "inferno", "jet", "magma", "nipy_spectral", "ocean", "Oranges", "OrRd", "Paired", "Pastel1", "Pastel2", "pink", "PiYG", "plasma", "PRGn", "prism", "PuBu", "PuBuGn", "PuOr", "PuRd", "Purples", "rainbow", "RdBu", "RdGy", "RdPu", "RdYlBu", "RdYlGn", "Reds", "seismic", "Set1", "Set2", "Set3", "Spectral", "spring", "summer", "tab10", "tab20", "tab20b", "tab20c", "terrain", "turbo", "twilight", "twilight_shifted", "viridis", "winter", "Wistia", "YlGn", "YlGnBu", "YlOrBr", "YlOrRd"]], "reverse_dot_style": [["No", "Yes"]], "dot_frequency": ["INT", {"default": 50, "min": 1, "max": 200, "step": 1}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_pos": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}], "y_pos": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "dot_style", "reverse_dot_style", "dot_frequency", "background_color", "x_pos", "y_pos"], "optional": ["bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Halftone Grid", "display_name": "\ud83d\udfeb CR Halftone Grid", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Color Bars": {"input": {"required": {"mode": [["2-color"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "orientation": [["vertical", "horizontal", "diagonal", "alt_diagonal"]], "bar_frequency": ["INT", {"default": 5, "min": 1, "max": 200, "step": 1}], "offset": ["FLOAT", {"default": 0, "min": 0, "max": 20, "step": 0.05}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "color_1", "color_2", "orientation", "bar_frequency", "offset"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Bars", "display_name": "\ud83d\udfeb CR Color Bars", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Style Bars": {"input": {"required": {"mode": [["color bars", "sin wave", "gradient bars"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "bar_style": [["Accent", "afmhot", "autumn", "binary", "Blues", "bone", "BrBG", "brg", "BuGn", "BuPu", "bwr", "cividis", "CMRmap", "cool", "coolwarm", "copper", "cubehelix", "Dark2", "flag", "gist_earth", "gist_gray", "gist_heat", "gist_rainbow", "gist_stern", "gist_yarg", "GnBu", "gnuplot", "gnuplot2", "gray", "Greens", "Greys", "hot", "hsv", "inferno", "jet", "magma", "nipy_spectral", "ocean", "Oranges", "OrRd", "Paired", "Pastel1", "Pastel2", "pink", "PiYG", "plasma", "PRGn", "prism", "PuBu", "PuBuGn", "PuOr", "PuRd", "Purples", "rainbow", "RdBu", "RdGy", "RdPu", "RdYlBu", "RdYlGn", "Reds", "seismic", "Set1", "Set2", "Set3", "Spectral", "spring", "summer", "tab10", "tab20", "tab20b", "tab20c", "terrain", "turbo", "twilight", "twilight_shifted", "viridis", "winter", "Wistia", "YlGn", "YlGnBu", "YlOrBr", "YlOrRd"]], "orientation": [["vertical", "horizontal"]], "bar_frequency": ["INT", {"default": 5, "min": 1, "max": 200, "step": 1}]}}, "input_order": {"required": ["mode", "width", "height", "bar_style", "orientation", "bar_frequency"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Style Bars", "display_name": "\ud83d\udfea CR Style Bars", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Checker Pattern": {"input": {"required": {"mode": [["regular", "stepped"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "grid_frequency": ["INT", {"default": 8, "min": 1, "max": 200, "step": 1}], "step": ["INT", {"default": 2, "min": 2, "max": 200, "step": 1}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "color_1", "color_2", "grid_frequency", "step"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Checker Pattern", "display_name": "\ud83d\udfe6 CR Checker Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Polygons": {"input": {"required": {"mode": [["hexagons", "triangles"]], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "rows": ["INT", {"default": 5, "min": 1, "max": 512}], "columns": ["INT", {"default": 5, "min": 1, "max": 512}], "face_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "line_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "line_width": ["INT", {"default": 2, "min": 0, "max": 512}]}, "optional": {"face_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "line_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["mode", "width", "height", "rows", "columns", "face_color", "background_color", "line_color", "line_width"], "optional": ["face_color_hex", "bg_color_hex", "line_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Polygons", "display_name": "\ud83d\udfe9 CR Polygons", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Color Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "start_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "end_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "gradient_distance": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.05}], "linear_transition": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}], "orientation": [["vertical", "horizontal"]]}, "optional": {"start_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "start_color", "end_color", "gradient_distance", "linear_transition", "orientation"], "optional": ["start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Gradient", "display_name": "\ud83d\udfe8 CR Color Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Radial Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "start_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "end_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "gradient_distance": ["FLOAT", {"default": 1, "min": 0, "max": 2, "step": 0.05}], "radial_center_x": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}], "radial_center_y": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.05}]}, "optional": {"start_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "end_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "start_color", "end_color", "gradient_distance", "radial_center_x", "radial_center_y"], "optional": ["start_color_hex", "end_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_Help"], "name": "CR Radial Gradient", "display_name": "\ud83d\udfe8 CR Radial Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Starburst Lines": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_lines": ["INT", {"default": 6, "min": 1, "max": 500}], "line_length": ["FLOAT", {"default": 5, "min": 0, "max": 100, "step": 0.1}], "line_width": ["INT", {"default": 5, "min": 1, "max": 512}], "line_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "center_x": ["INT", {"default": 0, "min": 0, "max": 1024}], "center_y": ["INT", {"default": 0, "min": 0, "max": 1024}], "rotation": ["FLOAT", {"default": 0, "min": 0, "max": 720}]}, "optional": {"line_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_lines", "line_length", "line_width", "line_color", "background_color", "center_x", "center_y", "rotation"], "optional": ["line_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Starburst Lines", "display_name": "\ud83d\udfe7 CR Starburst Lines", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Starburst Colors": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_triangles": ["INT", {"default": 6, "min": 1, "max": 512}], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "center_x": ["INT", {"default": 0, "min": 0, "max": 512}], "center_y": ["INT", {"default": 0, "min": 0, "max": 512}], "rotation": ["FLOAT", {"default": 0, "min": 0, "max": 720}], "bbox_factor": ["FLOAT", {"default": 2, "min": 0, "max": 2, "step": 0.01}]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_triangles", "color_1", "color_2", "center_x", "center_y", "rotation", "bbox_factor"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Starburst Colors", "display_name": "\ud83d\udfe7 CR Starburst Colors", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Simple Binary Pattern": {"input": {"required": {"binary_pattern": ["STRING", {"multiline": true, "default": "10101"}], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}]}}, "input_order": {"required": ["binary_pattern", "width", "height"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Simple Binary Pattern", "display_name": "\ud83d\udfe5 CR Simple Binary Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Binary Pattern": {"input": {"required": {"binary_pattern": ["STRING", {"multiline": true, "default": "10101"}], "width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_0": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color_1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "jitter_distance": ["INT", {"default": 0, "min": 0, "max": 1024}], "bias": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color0_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["binary_pattern", "width", "height", "background_color", "color_0", "color_1", "outline_thickness", "outline_color", "jitter_distance", "bias"], "optional": ["bg_color_hex", "color0_hex", "color1_hex", "outline_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Binary Pattern", "display_name": "\ud83d\udfe5 CR Binary Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf08 Pattern", "output_node": false}, "CR Draw Shape": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "shape": [["circle", "oval", "square", "diamond", "triangle", "hexagon", "octagon", "quarter circle", "half circle", "quarter circle", "starburst", "star", "cross", "diagonal regions"]], "shape_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "back_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 3600.0, "step": 0.1}]}, "optional": {"shape_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "shape", "shape_color", "back_color", "x_offset", "y_offset", "zoom", "rotation"], "optional": ["shape_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Shape", "display_name": "\ud83d\udfe1 CR Draw Shape", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Draw Pie": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "pie_start": ["FLOAT", {"default": 30.0, "min": 0.0, "max": 9999.0, "step": 0.1}], "pie_stop": ["FLOAT", {"default": 330.0, "min": 0.0, "max": 9999.0, "step": 0.1}], "shape_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "back_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.05}], "rotation": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 3600.0, "step": 0.1}]}, "optional": {"shape_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "pie_start", "pie_stop", "shape_color", "back_color", "x_offset", "y_offset", "zoom", "rotation"], "optional": ["shape_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Pie", "display_name": "\ud83d\udfe2 CR Draw Pie", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Random Shape Pattern": {"input": {"required": {"width": ["INT", {"default": 512, "min": 64, "max": 4096}], "height": ["INT", {"default": 512, "min": 64, "max": 4096}], "num_rows": ["INT", {"default": 5, "min": 1, "max": 128}], "num_cols": ["INT", {"default": 5, "min": 1, "max": 128}], "color1": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "color2": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"color1_hex": ["STRING", {"multiline": false, "default": "#000000"}], "color2_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["width", "height", "num_rows", "num_cols", "color1", "color2"], "optional": ["color1_hex", "color2_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Random Shape Pattern", "display_name": "\ud83d\udd35 CR Random Shape Pattern", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udfe3 Shape", "output_node": false}, "CR Overlay Text": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "font_name", "font_size", "font_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["font_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Overlay Text", "display_name": "\ud83d\udd24 CR Overlay Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Draw Text": {"input": {"required": {"image_width": ["INT", {"default": 512, "min": 64, "max": 2048}], "image_height": ["INT", {"default": 512, "min": 64, "max": 2048}], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image_width", "image_height", "text", "font_name", "font_size", "font_color", "background_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["font_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Draw Text", "display_name": "\ud83d\udd24\ufe0f CR Draw Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Mask Text": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}, "optional": {"bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "font_name", "font_size", "background_color", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"], "optional": ["bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Mask Text", "display_name": "\ud83d\udd24\ufe0f CR Mask Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Composite Text": {"input": {"required": {"image_text": ["IMAGE"], "image_background": ["IMAGE"], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "align": [["center", "top", "bottom"]], "justify": [["center", "left", "right"]], "margins": ["INT", {"default": 0, "min": -1024, "max": 1024}], "line_spacing": ["INT", {"default": 0, "min": -1024, "max": 1024}], "position_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "position_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "rotation_options": [["text center", "image center"]]}}, "input_order": {"required": ["image_text", "image_background", "text", "font_name", "font_size", "align", "justify", "margins", "line_spacing", "position_x", "position_y", "rotation_angle", "rotation_options"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Composite Text", "display_name": "\ud83d\udd24\ufe0f CR Composite Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Simple Text Watermark": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"multiline": false, "default": "@ your name"}], "align": [["center", "top left", "top center", "top right", "bottom left", "bottom center", "bottom right"]], "opacity": ["FLOAT", {"default": 0.3, "min": 0.0, "max": 1.0, "step": 0.01}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 1, "max": 1024}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "x_margin": ["INT", {"default": 20, "min": -1024, "max": 1024}], "y_margin": ["INT", {"default": 20, "min": -1024, "max": 1024}]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "text", "align", "opacity", "font_name", "font_size", "font_color", "x_margin", "y_margin"], "optional": ["font_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Simple Text Watermark", "display_name": "\ud83d\udd24\ufe0f CR Simple Text Watermark", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Select Font": {"input": {"required": {"font_name": [[]]}}, "input_order": {"required": ["font_name"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["font_name", "show_help"], "name": "CR Select Font", "display_name": "\ud83d\udd24\ufe0f CR Select Font", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udd24 Text", "output_node": false}, "CR Halftone Filter": {"input": {"required": {"image": ["IMAGE"], "dot_size": ["INT", {"default": 5, "min": 1, "max": 30, "step": 1}], "dot_shape": [["ellipse", "rectangle"], {"default": "ellipse"}], "resolution": [["normal", "hi-res (2x output size)"], {"default": "normal"}], "angle_c": ["INT", {"default": 75, "min": 0, "max": 360, "step": 1}], "angle_m": ["INT", {"default": 45, "min": 0, "max": 360, "step": 1}], "angle_y": ["INT", {"default": 15, "min": 0, "max": 360, "step": 1}], "angle_k": ["INT", {"default": 0, "min": 0, "max": 360, "step": 1}], "greyscale": ["BOOLEAN", {"default": true}], "antialias": ["BOOLEAN", {"default": true}], "antialias_scale": ["INT", {"default": 2, "min": 1, "max": 4, "step": 1}], "border_blending": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "dot_size", "dot_shape", "resolution", "angle_c", "angle_m", "angle_y", "angle_k", "greyscale", "antialias", "antialias_scale", "border_blending"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Halftone Filter", "display_name": "\ud83c\udfa8 Halftone Filter", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Color Tint": {"input": {"required": {"image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 1.0, "step": 0.1}], "mode": [["custom", "white", "black", "sepia", "red", "green", "blue", "cyan", "magenta", "yellow", "purple", "orange", "warm", "cool", "lime", "navy", "vintage", "rose", "teal", "maroon", "peach", "lavender", "olive"]]}, "optional": {"tint_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "strength", "mode"], "optional": ["tint_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Color Tint", "display_name": "\ud83c\udfa8 CR Color Tint", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Vignette Filter": {"input": {"required": {"image": ["IMAGE"], "vignette_shape": [["circle", "oval", "square", "diamond"]], "feather_amount": ["INT", {"default": 100, "min": 0, "max": 1024}], "x_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "y_offset": ["INT", {"default": 0, "min": -2048, "max": 2048}], "zoom": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}], "reverse": [["no", "yes"]]}}, "input_order": {"required": ["image", "vignette_shape", "feather_amount", "x_offset", "y_offset", "zoom", "reverse"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "MASK", "show_help"], "name": "CR Vignette Filter", "display_name": "\ud83c\udfa8 CR Vignette Filter", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udfa8 Filter", "output_node": false}, "CR Page Layout": {"input": {"required": {"layout_options": [["header", "footer", "header and footer", "no header or footer"]], "image_panel": ["IMAGE"], "header_height": ["INT", {"default": 0, "min": 0, "max": 1024}], "header_text": ["STRING", {"multiline": true, "default": "text"}], "header_align": [["left", "center", "right"]], "footer_height": ["INT", {"default": 0, "min": 0, "max": 1024}], "footer_text": ["STRING", {"multiline": true, "default": "text"}], "footer_align": [["left", "center", "right"]], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "header_font_size": ["INT", {"default": 150, "min": 0, "max": 1024}], "footer_font_size": ["INT", {"default": 50, "min": 0, "max": 1024}], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["layout_options", "image_panel", "header_height", "header_text", "header_align", "footer_height", "footer_text", "footer_align", "font_name", "font_color", "header_font_size", "footer_font_size", "border_thickness", "border_color", "background_color"], "optional": ["font_color_hex", "border_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Page Layout", "display_name": "\ud83c\udf01 CR Page Layout", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Panel": {"input": {"required": {"image_1": ["IMAGE"], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "layout_direction": [["horizontal", "vertical"]]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image_1", "border_thickness", "border_color", "outline_thickness", "outline_color", "layout_direction"], "optional": ["image_2", "image_3", "image_4", "border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Panel", "display_name": "\ud83c\udf01 CR Image Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Grid Panel": {"input": {"required": {"images": ["IMAGE"], "border_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "max_columns": ["INT", {"default": 5, "min": 0, "max": 256}]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["images", "border_thickness", "border_color", "outline_thickness", "outline_color", "max_columns"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Grid Panel", "display_name": "\ud83c\udf01 CR Image Grid Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Image Border": {"input": {"required": {"image": ["IMAGE"], "top_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "bottom_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "left_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "right_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 1024}], "outline_color": [["white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "top_thickness", "bottom_thickness", "left_thickness", "right_thickness", "border_color", "outline_thickness", "outline_color"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Image Border", "display_name": "\ud83c\udf01 CR Image Border", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Feathered Border": {"input": {"required": {"image": ["IMAGE"], "top_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "bottom_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "left_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "right_thickness": ["INT", {"default": 0, "min": 0, "max": 4096}], "border_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "feather_amount": ["INT", {"default": 0, "min": 0, "max": 1024}]}, "optional": {"border_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "top_thickness", "bottom_thickness", "left_thickness", "right_thickness", "border_color", "feather_amount"], "optional": ["border_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Feathered Border", "display_name": "\ud83c\udf01 CR Feathered Border", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Simple Text Panel": {"input": {"required": {"panel_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "panel_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "font_size": ["INT", {"default": 100, "min": 0, "max": 1024}], "font_outline_thickness": ["INT", {"default": 0, "min": 0, "max": 50}], "font_outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "align": [["top", "center", "bottom"]], "justify": [["left", "center", "right"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["panel_width", "panel_height", "text", "font_name", "font_color", "font_size", "font_outline_thickness", "font_outline_color", "background_color", "align", "justify"], "optional": ["font_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Text Panel", "display_name": "\ud83c\udf01 CR Simple Text Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Color Panel": {"input": {"required": {"panel_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "panel_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "fill_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"fill_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["panel_width", "panel_height", "fill_color"], "optional": ["fill_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Color Panel", "display_name": "\ud83c\udf01 CR Color Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Overlay Transparent Image": {"input": {"required": {"back_image": ["IMAGE"], "overlay_image": ["IMAGE"], "transparency": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.1}], "offset_x": ["INT", {"default": 0, "min": -4096, "max": 4096}], "offset_y": ["INT", {"default": 0, "min": -4096, "max": 4096}], "rotation_angle": ["FLOAT", {"default": 0.0, "min": -360.0, "max": 360.0, "step": 0.1}], "overlay_scale_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.001}]}}, "input_order": {"required": ["back_image", "overlay_image", "transparency", "offset_x", "offset_y", "rotation_angle", "overlay_scale_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CR Overlay Transparent Image", "display_name": "\ud83c\udf01 CR Overlay Transparent Image", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Half Drop Panel": {"input": {"required": {"image": ["IMAGE"], "pattern": [["none", "half drop", "quarter drop", "custom drop %"]]}, "optional": {"drop_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "pattern"], "optional": ["drop_percentage"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Half Drop Panel", "display_name": "\ud83c\udf01 CR Half Drop Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Diamond Panel": {"input": {"required": {"image": ["IMAGE"], "pattern": [["none", "diamond"]]}}, "input_order": {"required": ["image", "pattern"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Diamond Panel", "display_name": "\ud83c\udf01 CR Diamond Panel", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83c\udf01 Layout", "output_node": false}, "CR Simple Meme Template": {"input": {"required": {"image": ["IMAGE"], "preset": [["custom", "One Does Not Simply ... MEME IN COMFY", "This is fine.", "Good Morning ... No Such Thing!"]], "text_top": ["STRING", {"multiline": true, "default": "text_top"}], "text_bottom": ["STRING", {"multiline": true, "default": "text_bottom"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "max_font_size": ["INT", {"default": 150, "min": 20, "max": 2048}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "font_outline": [["none", "thin", "thick", "extra thick"]], "bar_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "bar_options": [["no bars", "top", "bottom", "top and bottom"]]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bar_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "preset", "text_top", "text_bottom", "font_name", "max_font_size", "font_color", "font_outline", "bar_color", "bar_options"], "optional": ["font_color_hex", "bar_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Meme Template", "display_name": "\ud83d\udcf1 CR Simple Meme Template", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Simple Banner": {"input": {"required": {"image": ["IMAGE"], "banner_text": ["STRING", {"multiline": true, "default": "text"}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "max_font_size": ["INT", {"default": 150, "min": 20, "max": 2048}], "font_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "outline_thickness": ["INT", {"default": 0, "min": 0, "max": 500}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "margin_size": ["INT", {"default": 0, "min": 0, "max": 500}]}, "optional": {"font_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["image", "banner_text", "font_name", "max_font_size", "font_color", "outline_thickness", "outline_color", "margin_size"], "optional": ["font_color_hex", "outline_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Banner", "display_name": "\ud83d\udcf1 CR Simple Banner", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Comic Panel Templates": {"input": {"required": {"page_width": ["INT", {"default": 512, "min": 8, "max": 4096}], "page_height": ["INT", {"default": 512, "min": 8, "max": 4096}], "template": [["custom", "G22", "G33", "H2", "H3", "H12", "H13", "H21", "H23", "H31", "H32", "V2", "V3", "V12", "V13", "V21", "V23", "V31", "V32"]], "reading_direction": [["left to right", "right to left"]], "border_thickness": ["INT", {"default": 5, "min": 0, "max": 1024}], "outline_thickness": ["INT", {"default": 2, "min": 0, "max": 1024}], "outline_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "panel_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]], "background_color": [["custom", "white", "black", "red", "green", "blue", "yellow", "cyan", "magenta", "orange", "purple", "pink", "brown", "gray", "lightgray", "darkgray", "olive", "lime", "teal", "navy", "maroon", "fuchsia", "aqua", "silver", "gold", "turquoise", "lavender", "violet", "coral", "indigo"]]}, "optional": {"images": ["IMAGE"], "custom_panel_layout": ["STRING", {"multiline": false, "default": "H123"}], "outline_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "panel_color_hex": ["STRING", {"multiline": false, "default": "#000000"}], "bg_color_hex": ["STRING", {"multiline": false, "default": "#000000"}]}}, "input_order": {"required": ["page_width", "page_height", "template", "reading_direction", "border_thickness", "outline_thickness", "outline_color", "panel_color", "background_color"], "optional": ["images", "custom_panel_layout", "outline_color_hex", "panel_color_hex", "bg_color_hex"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Comic Panel Templates", "display_name": "\ud83d\udcf1 CR Comic Panel Templates", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Simple Image Compare": {"input": {"required": {"text1": ["STRING", {"multiline": true, "default": "text"}], "text2": ["STRING", {"multiline": true, "default": "text"}], "footer_height": ["INT", {"default": 100, "min": 0, "max": 1024}], "font_name": [["AlumniSansCollegiateOne-Regular.ttf", "Caveat-VariableFont_wght.ttf", "comic.ttf", "impact.ttf", "NotoSansArabic-Regular.ttf", "Oswald-Bold.ttf", "PixelifySans-Bold.ttf", "Quicksand-Bold.ttf", "Roboto-Regular.ttf", "YoungSerif-Regular.ttf"]], "font_size": ["INT", {"default": 50, "min": 0, "max": 1024}], "mode": [["normal", "dark"]], "border_thickness": ["INT", {"default": 20, "min": 0, "max": 1024}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["text1", "text2", "footer_height", "font_name", "font_size", "mode", "border_thickness"], "optional": ["image1", "image2"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "show_help"], "name": "CR Simple Image Compare", "display_name": "\ud83d\udcf1 CR Simple Image Compare", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": false}, "CR Thumbnail Preview": {"input": {"required": {"image": ["IMAGE"], "rescale_factor": ["FLOAT", {"default": 0.25, "min": 0.1, "max": 1.0, "step": 0.01}], "max_columns": ["INT", {"default": 5, "min": 0, "max": 256}]}}, "input_order": {"required": ["image", "rescale_factor", "max_columns"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Thumbnail Preview", "display_name": "\ud83d\udcf1 CR Thumbnail Preview", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": true}, "CR Seamless Checker": {"input": {"required": {"image": ["IMAGE"], "rescale_factor": ["FLOAT", {"default": 0.25, "min": 0.1, "max": 1.0, "step": 0.01}], "grid_options": [["2x2", "3x3", "4x4", "5x5", "6x6"]]}}, "input_order": {"required": ["image", "rescale_factor", "grid_options"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Seamless Checker", "display_name": "\ud83d\udcf1 CR Seamless Checker", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udc7e Graphics/\ud83d\udcf1 Template", "output_node": true}, "CR Image Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image1", "image2"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Image Input Switch", "display_name": "\ud83d\udd00 CR Image Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Image Input Switch (4 way)": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 4}]}, "optional": {"image1": ["IMAGE"], "image2": ["IMAGE"], "image3": ["IMAGE"], "image4": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image1", "image2", "image3", "image4"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Image Input Switch (4 way)", "display_name": "\ud83d\udd00 CR Image Input Switch (4 way)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Latent Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"latent1": ["LATENT"], "latent2": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["latent1", "latent2"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Latent Input Switch", "display_name": "\ud83d\udd00 CR Latent Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Conditioning Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"conditioning1": ["CONDITIONING"], "conditioning2": ["CONDITIONING"]}}, "input_order": {"required": ["Input"], "optional": ["conditioning1", "conditioning2"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Conditioning Input Switch", "display_name": "\ud83d\udd00 CR Conditioning Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Clip Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"clip1": ["CLIP"], "clip2": ["CLIP"]}}, "input_order": {"required": ["Input"], "optional": ["clip1", "clip2"]}, "output": ["CLIP", "STRING"], "output_is_list": [false, false], "output_name": ["CLIP", "show_help"], "name": "CR Clip Input Switch", "display_name": "\ud83d\udd00 CR Clip Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Model Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"model1": ["MODEL"], "model2": ["MODEL"]}}, "input_order": {"required": ["Input"], "optional": ["model1", "model2"]}, "output": ["MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL", "show_help"], "name": "CR Model Input Switch", "display_name": "\ud83d\udd00 CR Model Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR ControlNet Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "control_net1": ["CONTROL_NET"], "control_net2": ["CONTROL_NET"]}, "optional": {"control_net1": ["CONTROL_NET"], "control_net2": ["CONTROL_NET"]}}, "input_order": {"required": ["Input", "control_net1", "control_net2"], "optional": ["control_net1", "control_net2"]}, "output": ["CONTROL_NET", "STRING"], "output_is_list": [false, false], "output_name": ["CONTROL_NET", "show_help"], "name": "CR ControlNet Input Switch", "display_name": "\ud83d\udd00 CR ControlNet Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR VAE Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"VAE1": ["VAE", {"forceInput": true}], "VAE2": ["VAE", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["VAE1", "VAE2"]}, "output": ["VAE", "STRING"], "output_is_list": [false, false], "output_name": ["VAE", "show_help"], "name": "CR VAE Input Switch", "display_name": "\ud83d\udd00 CR VAE Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Text Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["text1", "text2"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Input Switch", "display_name": "\ud83d\udd00 CR Text Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Text Input Switch (4 way)": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 4}]}, "optional": {"text1": ["STRING", {"forceInput": true}], "text2": ["STRING", {"forceInput": true}], "text3": ["STRING", {"forceInput": true}], "text4": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["Input"], "optional": ["text1", "text2", "text3", "text4"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Input Switch (4 way)", "display_name": "\ud83d\udd00 CR Text Input Switch (4 way)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Switch Model and CLIP": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "model1": ["MODEL"], "clip1": ["CLIP"], "model2": ["MODEL"], "clip2": ["CLIP"]}}, "input_order": {"required": ["Input", "model1", "clip1", "model2", "clip2"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Switch Model and CLIP", "display_name": "\ud83d\udd00 CR Switch Model and CLIP", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Logic", "output_node": false}, "CR Batch Process Switch": {"input": {"required": {"Input": [["image", "image batch"]]}, "optional": {"image": ["IMAGE"], "image_batch": ["IMAGE"]}}, "input_order": {"required": ["Input"], "optional": ["image", "image_batch"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Batch Process Switch", "display_name": "\ud83d\udd02 CR Batch Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Img2Img Process Switch": {"input": {"required": {"Input": [["txt2img", "img2img"]]}, "optional": {"txt2img": ["LATENT"], "img2img": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["txt2img", "img2img"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Img2Img Process Switch", "display_name": "\ud83d\udd02 CR Img2Img Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Hires Fix Process Switch": {"input": {"required": {"Input": [["latent_upscale", "image_upscale"]]}, "optional": {"latent_upscale": ["LATENT"], "image_upscale": ["LATENT"]}}, "input_order": {"required": ["Input"], "optional": ["latent_upscale", "image_upscale"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "STRING"], "name": "CR Hires Fix Process Switch", "display_name": "\ud83d\udd02 CR Hires Fix Process Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd02 Process", "output_node": false}, "CR Index": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000}], "print_to_console": [["Yes", "No"]]}}, "input_order": {"required": ["index", "print_to_console"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Index", "display_name": "\ud83d\udd22 CR Index", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Increment": {"input": {"required": {"index": ["INT", {"default": 1, "min": -10000, "max": 10000, "forceInput": true}], "interval": ["INT", {"default": 1, "min": -10000, "max": 10000}]}}, "input_order": {"required": ["index", "interval"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "interval", "show_help"], "name": "CR Index Increment", "display_name": "\ud83d\udd22 CR Index Increment", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Multiply": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000, "forceInput": true}], "factor": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "factor"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "factor", "show_help"], "name": "CR Index Multiply", "display_name": "\ud83d\udd22 CR Index Multiply", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Index Reset": {"input": {"required": {"index": ["INT", {"default": 1, "min": 0, "max": 10000, "forceInput": true}], "reset_to": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "reset_to"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "reset_to", "show_help"], "name": "CR Index Reset", "display_name": "\ud83d\udd22 CR Index Reset", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR Trigger": {"input": {"required": {"index": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "trigger_value": ["INT", {"default": 1, "min": 0, "max": 10000}]}}, "input_order": {"required": ["index", "trigger_value"]}, "output": ["INT", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["index", "trigger", "show_help"], "name": "CR Trigger", "display_name": "\ud83d\udd22 CR Trigger", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd22 Index", "output_node": false}, "CR String To Number": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text", "forceInput": true}], "round_integer": [["round", "round down", "round up"]]}}, "input_order": {"required": ["text", "round_integer"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR String To Number", "display_name": "\ud83d\udd27 CR String To Number", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR String To Combo": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["any", "show_help"], "name": "CR String To Combo", "display_name": "\ud83d\udd27 CR String To Combo", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Float To String": {"input": {"required": {"float_": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1000000.0, "forceInput": true}]}}, "input_order": {"required": ["float_"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Float To String", "display_name": "\ud83d\udd27 CR Float To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Float To Integer": {"input": {"required": {"_float": ["FLOAT", {"default": 0.0, "forceInput": true}]}}, "input_order": {"required": ["_float"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Float To Integer", "display_name": "\ud83d\udd27 CR Float To Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Integer To String": {"input": {"required": {"int_": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615, "forceInput": true}]}}, "input_order": {"required": ["int_"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Integer To String", "display_name": "\ud83d\udd27 CR Integer To String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR String To Boolean": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["BOOLEAN", "STRING"], "output_is_list": [false, false], "output_name": ["BOOLEAN", "show_help"], "name": "CR String To Boolean", "display_name": "\ud83d\udd27 CR String To Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd27 Conversion", "output_node": false}, "CR Random Hex Color": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["hex_color1", "hex_color2", "hex_color3", "hex_color4", "show_help"], "name": "CR Random Hex Color", "display_name": "\ud83c\udfb2 CR Random Hex Color", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random RGB": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["rgb_1", "rgb_2", "rgb_3", "rgb_4", "show_help"], "name": "CR Random RGB", "display_name": "\ud83c\udfb2 CR Random RGB", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Multiline Values": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "value_type": [["binary", "decimal", "natural", "hexadecimal", "alphabetic", "alphanumeric", "custom"]], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}], "string_length": ["INT", {"default": 5, "min": 1, "max": 1024}], "custom_values": ["STRING", {"multiline": false, "default": "123ABC"}], "prepend_text": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["seed", "value_type", "rows", "string_length", "custom_values", "prepend_text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Multiline Values", "display_name": "\ud83c\udfb2 CR Random Multiline Values", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Multiline Colors": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "value_type": [["rgb", "hex color", "matplotlib xkcd"]], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}]}}, "input_order": {"required": ["seed", "value_type", "rows"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Multiline Colors", "display_name": "\ud83c\udfb2 CR Random Multiline Colors", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random RGB Gradient": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}]}}, "input_order": {"required": ["seed", "rows"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random RGB Gradient", "display_name": "\ud83c\udfb2 CR Random RGB Gradient", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Random Panel Codes": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "rows": ["INT", {"default": 5, "min": 1, "max": 2048}], "string_length": ["INT", {"default": 5, "min": 1, "max": 1024}], "values": ["STRING", {"multiline": false, "default": "123"}]}}, "input_order": {"required": ["seed", "rows", "string_length", "values"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Random Panel Codes", "display_name": "\ud83c\udfb2 CR Random Panel Codes", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83c\udfb2 Random", "output_node": false}, "CR Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["text", "show_help"], "name": "CR Text", "display_name": "\ud83d\udd24 CR Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Multiline Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}], "convert_from_csv": ["BOOLEAN", {"default": false}], "csv_quote_char": ["STRING", {"default": "'", "choices": ["'", "\""]}], "remove_chars": ["BOOLEAN", {"default": false}], "chars_to_remove": ["STRING", {"multiline": false, "default": ""}], "split_string": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["text", "convert_from_csv", "csv_quote_char", "remove_chars", "chars_to_remove", "split_string"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["multiline_text", "show_help"], "name": "CR Multiline Text", "display_name": "\ud83d\udd24 CR Multiline Text", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Split String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "text"}]}, "optional": {"delimiter": ["STRING", {"multiline": false, "default": ","}]}}, "input_order": {"required": ["text"], "optional": ["delimiter"]}, "output": ["*", "*", "*", "*", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["string_1", "string_2", "string_3", "string_4", "show_help"], "name": "CR Split String", "display_name": "\ud83d\udd24 CR Split String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Concatenate": {"input": {"required": {}, "optional": {"text1": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "text2": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": [], "optional": ["text1", "text2", "separator"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Concatenate", "display_name": "\ud83d\udd24 CR Text Concatenate", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Replace": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "forceInput": true}]}, "optional": {"find1": ["STRING", {"multiline": false, "default": ""}], "replace1": ["STRING", {"multiline": false, "default": ""}], "find2": ["STRING", {"multiline": false, "default": ""}], "replace2": ["STRING", {"multiline": false, "default": ""}], "find3": ["STRING", {"multiline": false, "default": ""}], "replace3": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["find1", "replace1", "find2", "replace2", "find3", "replace3"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Replace", "display_name": "\ud83d\udd24 CR Text Replace", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Length": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Text Length", "display_name": "\ud83d\udd24 CR Text Length", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Operation": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "operation": [["uppercase", "lowercase", "capitalize", "invert_case", "reverse", "trim", "remove_spaces"]]}}, "input_order": {"required": ["text", "operation"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Operation", "display_name": "\ud83d\udd24 CR Text Operation", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Text Blacklist": {"input": {"required": {"text": ["STRING", {"multiline": true, "default": "", "forceInput": true}], "blacklist_words": ["STRING", {"multiline": true, "default": ""}]}, "optional": {"replacement_text": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text", "blacklist_words"], "optional": ["replacement_text"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Blacklist", "display_name": "\ud83d\udd24 Text Blacklist", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": false}, "CR Save Text To File": {"input": {"required": {"multiline_text": ["STRING", {"multiline": true, "default": ""}], "output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["multiline_text", "output_file_path", "file_name", "file_extension"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["show_help"], "name": "CR Save Text To File", "display_name": "\ud83d\udd24 CR Save Text To File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd24 Text", "output_node": true}, "CR Set Value On Boolean": {"input": {"required": {"boolean": ["BOOLEAN", {"default": true, "forceInput": true}], "value_if_true": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "value_if_false": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["boolean", "value_if_true", "value_if_false"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Set Value On Boolean", "display_name": "\u2699\ufe0f CR Set Value On Boolean", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Value On Binary": {"input": {"required": {"binary": ["INT", {"default": 1, "min": 0, "max": 1, "forceInput": true}], "value_if_1": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "value_if_0": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["binary", "value_if_1", "value_if_0"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Set Value On Binary", "display_name": "\u2699\ufe0f CR Set Value On Binary", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Value on String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}, "optional": {"test_string": ["STRING", {"multiline": false, "default": ""}], "value_if_true": ["STRING", {"multiline": false, "default": ""}], "value_if_false": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["test_string", "value_if_true", "value_if_false"]}, "output": ["*", "BOOLEAN", "STRING"], "output_is_list": [false, false, false], "output_name": ["STRING", "BOOLEAN", "show_help"], "name": "CR Set Value on String", "display_name": "\u2699\ufe0f CR Set Value on String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Set Switch From String": {"input": {"required": {"text": ["STRING", {"multiline": false, "default": "", "forceInput": true}]}, "optional": {"switch_1": ["STRING", {"multiline": false, "default": ""}], "switch_2": ["STRING", {"multiline": false, "default": ""}], "switch_3": ["STRING", {"multiline": false, "default": ""}], "switch_4": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": ["text"], "optional": ["switch_1", "switch_2", "switch_3", "switch_4"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["switch", "show_help"], "name": "CR Set Switch From String", "display_name": "\u2699\ufe0f CR Set Switch From String", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\ud83d\udd00 Conditional", "output_node": false}, "CR Value": {"input": {"required": {"value": ["FLOAT", {"default": 1.0}]}}, "input_order": {"required": ["value"]}, "output": ["FLOAT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["FLOAT", "INT", "show_help"], "name": "CR Value", "display_name": "\u2699\ufe0f CR Value", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Integer Multiple": {"input": {"required": {"integer": ["INT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "multiple": ["FLOAT", {"default": 8, "min": 1, "max": 18446744073709551615}]}}, "input_order": {"required": ["integer", "multiple"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Integer Multiple", "display_name": "\u2699\ufe0f CR Integer Multiple", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Clamp Value": {"input": {"required": {"a": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "range_min": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}], "range_max": ["FLOAT", {"default": 1, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["a", "range_min", "range_max"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["a", "show_help"], "name": "CR Clamp Value", "display_name": "\u2699\ufe0f CR Clamp Value", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Math Operation": {"input": {"required": {"a": ["FLOAT", {"default": 1.0}], "operation": [["sin", "cos", "tan", "sqrt", "exp", "log", "neg", "abs"]], "decimal_places": ["INT", {"default": 2, "min": 0, "max": 10}]}}, "input_order": {"required": ["a", "operation", "decimal_places"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["a", "show_help"], "name": "CR Math Operation", "display_name": "\u2699\ufe0f CR Math Operation", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Get Parameter From Prompt": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "default": "prompt", "forceInput": true}], "search_string": ["STRING", {"multiline": false, "default": "!findme"}]}}, "input_order": {"required": ["prompt", "search_string"]}, "output": ["STRING", "*", "FLOAT", "BOOLEAN", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["prompt", "text", "float", "boolean", "show_help"], "name": "CR Get Parameter From Prompt", "display_name": "\u2699\ufe0f CR Get Parameter From Prompt", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Select Resize Method": {"input": {"required": {"method": [["Fit", "Crop"]]}}, "input_order": {"required": ["method"]}, "output": ["*", "STRING"], "output_is_list": [false, false], "output_name": ["method", "show_help"], "name": "CR Select Resize Method", "display_name": "\u2699\ufe0f CR Select Resize Method", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Select ISO Size": {"input": {"required": {"iso_size": [["A0 - 9933x14043", "A1 - 7016x9933", "A2 - 4960x7016", "A3 - 3508x4960", "A4 - 2480x3508", "A5 - 1748x2480", "A6 - 1240x1748", "A7 - 874x1240", "A8 - 614x874", "A9 - 437x614", "A10 - 307x437", "A11 - 213x307", "A12 - 154x213", "A13 - 106x154", "B0 - 11811x16701", "B1 - 8350x11811", "B2 - 5906x8350", "B3 - 4169x5906", "B4 - 2953x4169", "B5 - 2079x2953", "B6 - 1476x2079", "B7 - 1039x1476", "B8 - 732x1039", "B9 - 520x732", "B10 - 366x520", "C0 - 10831x15319", "C1 - 7654x10831", "C2 - 5409x7654", "C3 - 3827x5409", "C4 - 2705x3827", "C5 - 1913x2705", "C6 - 1346x1913", "C7 - 957x1346", "C8 - 673x957", "C9 - 472x673", "C10 - 331x472"]]}}, "input_order": {"required": ["iso_size"]}, "output": ["INT", "INT", "STRING"], "output_is_list": [false, false, false], "output_name": ["width", "height", "show_help"], "name": "CR Select ISO Size", "display_name": "\u2699\ufe0f CR Select ISO Size", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83d\udee0\ufe0f Utils/\u2699\ufe0f Other", "output_node": false}, "CR Simple Schedule": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, item_alias, [attr_value1, attr_value2]"}], "schedule_type": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "schedule_format": [["CR", "Deforum"]]}}, "input_order": {"required": ["schedule", "schedule_type", "schedule_alias", "schedule_format"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_help"], "name": "CR Simple Schedule", "display_name": "\ud83d\udccb CR Simple Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Central Schedule": {"input": {"required": {"schedule_1": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type1": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias1": ["STRING", {"multiline": false, "default": ""}], "schedule_2": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type2": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias2": ["STRING", {"multiline": false, "default": ""}], "schedule_3": ["STRING", {"multiline": true, "default": "schedule"}], "schedule_type3": [["Value", "Text", "Prompt", "Prompt Weight", "Model", "LoRA", "ControlNet", "Style", "Upscale", "Camera", "Job"]], "schedule_alias3": ["STRING", {"multiline": false, "default": ""}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["schedule_1", "schedule_type1", "schedule_alias1", "schedule_2", "schedule_type2", "schedule_alias2", "schedule_3", "schedule_type3", "schedule_alias3", "schedule_format"], "optional": ["schedule"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Central Schedule", "display_name": "\ud83d\udccb CR Central Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Combine Schedules": {"input": {"required": {}, "optional": {"schedule_1": ["SCHEDULE"], "schedule_2": ["SCHEDULE"], "schedule_3": ["SCHEDULE"], "schedule_4": ["SCHEDULE"]}}, "input_order": {"required": [], "optional": ["schedule_1", "schedule_2", "schedule_3", "schedule_4"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Combine Schedules", "display_name": "\ud83d\udccb CR Combine Schedules", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Output Schedule To File": {"input": {"required": {"output_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["output_file_path", "file_name", "file_extension", "schedule"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR Output Schedule To File", "display_name": "\ud83d\udccb CR Output Schedule To File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": true}, "CR Load Schedule From File": {"input": {"required": {"input_file_path": ["STRING", {"multiline": false, "default": ""}], "file_name": ["STRING", {"multiline": false, "default": ""}], "file_extension": [["txt", "csv"]]}}, "input_order": {"required": ["input_file_path", "file_name", "file_extension"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Load Schedule From File", "display_name": "\ud83d\udccb CR Load Schedule From File", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Schedule Input Switch": {"input": {"required": {"Input": ["INT", {"default": 1, "min": 1, "max": 2}], "schedule1": ["SCHEDULE"], "schedule2": ["SCHEDULE"]}}, "input_order": {"required": ["Input", "schedule1", "schedule2"]}, "output": ["SCHEDULE", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_help"], "name": "CR Schedule Input Switch", "display_name": "\ud83d\udccb CR Schedule Input Switch", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": true}, "CR Bit Schedule": {"input": {"required": {"binary_string": ["STRING", {"multiline": true, "default": ""}], "interval": ["INT", {"default": 1, "min": 1, "max": 99999}], "loops": ["INT", {"default": 1, "min": 1, "max": 99999}]}}, "input_order": {"required": ["binary_string", "interval", "loops"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["SCHEDULE", "show_text"], "name": "CR Bit Schedule", "display_name": "\ud83d\udccb CR Bit Schedule", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udccb Schedule", "output_node": false}, "CR Simple Value Scheduler": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, value"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["schedule", "current_frame"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Simple Value Scheduler", "display_name": "\ud83d\udcd1 CR Simple Value Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Simple Text Scheduler": {"input": {"required": {"schedule": ["STRING", {"multiline": true, "default": "frame_number, text"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["schedule", "current_frame"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Simple Text Scheduler", "display_name": "\ud83d\udcd1 CR Simple Text Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Value Scheduler": {"input": {"required": {"mode": [["Default Value", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_value": ["FLOAT", {"default": 1.0, "min": -9999.0, "max": 9999.0, "step": 0.01}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_value", "schedule_format"], "optional": ["schedule"]}, "output": ["INT", "FLOAT", "STRING"], "output_is_list": [false, false, false], "output_name": ["INT", "FLOAT", "show_help"], "name": "CR Value Scheduler", "display_name": "\ud83d\udcd1 CR Value Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Text Scheduler": {"input": {"required": {"mode": [["Default Text", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_text": ["STRING", {"multiline": false, "default": "default text"}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_text", "schedule_format"], "optional": ["schedule"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Text Scheduler", "display_name": "\ud83d\udcd1 CR Text Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Load Scheduled Models": {"input": {"required": {"mode": [["Load default Model", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_model": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "schedule_format": [["CR", "Deforum"]]}, "optional": {"model_list": ["MODEL_LIST"], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "current_frame", "schedule_alias", "default_model", "schedule_format"], "optional": ["model_list", "schedule"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "show_help"], "name": "CR Load Scheduled Models", "display_name": "\ud83d\udcd1 CR Load Scheduled Models", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Load Scheduled LoRAs": {"input": {"required": {"mode": [["Off", "Load default LoRA", "Schedule"]], "model": ["MODEL"], "clip": ["CLIP"], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "schedule_alias": ["STRING", {"default": "", "multiline": false}], "default_lora": [["0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "schedule_format": [["CR", "Deforum"]]}, "optional": {"lora_list": ["LORA_LIST"], "schedule": ["SCHEDULE"]}}, "input_order": {"required": ["mode", "model", "clip", "current_frame", "schedule_alias", "default_lora", "strength_model", "strength_clip", "schedule_format"], "optional": ["lora_list", "schedule"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Load Scheduled LoRAs", "display_name": "\ud83d\udcd1 CR Load Scheduled LoRAs", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Prompt Scheduler": {"input": {"required": {"mode": [["Default Prompt", "Keyframe List", "Schedule"]], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "default_prompt": ["STRING", {"multiline": false, "default": "default prompt"}], "schedule_format": [["CR", "Deforum"]], "interpolate_prompt": [["Yes", "No"]]}, "optional": {"schedule": ["SCHEDULE"], "schedule_alias": ["STRING", {"default prompt": "", "multiline": false}], "keyframe_list": ["STRING", {"multiline": true, "default": "keyframe list"}], "prepend_text": ["STRING", {"multiline": true, "default": "prepend text"}], "append_text": ["STRING", {"multiline": true, "default": "append text"}]}}, "input_order": {"required": ["mode", "current_frame", "default_prompt", "schedule_format", "interpolate_prompt"], "optional": ["schedule", "schedule_alias", "keyframe_list", "prepend_text", "append_text"]}, "output": ["STRING", "STRING", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_prompt", "next_prompt", "weight", "show_help"], "name": "CR Prompt Scheduler", "display_name": "\ud83d\udcd1 CR Prompt Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Simple Prompt Scheduler": {"input": {"required": {"keyframe_list": ["STRING", {"multiline": true, "default": "frame_number, text"}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "keyframe_format": [["CR", "Deforum"]]}}, "input_order": {"required": ["keyframe_list", "current_frame", "keyframe_format"]}, "output": ["STRING", "STRING", "FLOAT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_prompt", "next_prompt", "weight", "show_help"], "name": "CR Simple Prompt Scheduler", "display_name": "\ud83d\udcd1 CR Simple Prompt Scheduler", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcd1 Schedulers", "output_node": false}, "CR Keyframe List": {"input": {"required": {"keyframe_list": ["STRING", {"multiline": true, "default": "keyframes"}], "keyframe_format": [["Deforum", "CR"]]}}, "input_order": {"required": ["keyframe_list", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Keyframe List", "display_name": "\ud83d\udcdd CR Keyframe List", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt", "output_node": false}, "CR Encode Scheduled Prompts": {"input": {"required": {"clip": ["CLIP"], "current_prompt": ["STRING", {"multiline": true}], "next_prompt": ["STRING", {"multiline": true}], "weight": ["FLOAT", {"default": 0.0, "min": -9999.0, "max": 9999.0, "step": 0.01}]}}, "input_order": {"required": ["clip", "current_prompt", "next_prompt", "weight"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "show_help"], "name": "CR Encode Scheduled Prompts", "display_name": "\ud83d\udcdd CR Encode Scheduled Prompts", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udcdd Prompt", "output_node": false}, "CR Gradient Float": {"input": {"required": {"start_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "end_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.01}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["start_value", "end_value", "start_frame", "frame_duration", "current_frame", "gradient_profile"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "show_help"], "name": "CR Gradient Float", "display_name": "\ud83d\udd22 CR Gradient Float", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Gradient Integer": {"input": {"required": {"start_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "end_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "gradient_profile": [["Lerp"]]}}, "input_order": {"required": ["start_value", "end_value", "start_frame", "frame_duration", "current_frame", "gradient_profile"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Gradient Integer", "display_name": "\ud83d\udd22 CR Gradient Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Increment Float": {"input": {"required": {"start_value": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 0.001}], "step": ["FLOAT", {"default": 0.1, "min": -9999.0, "max": 9999.0, "step": 0.001}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["start_value", "step", "start_frame", "frame_duration", "current_frame"]}, "output": ["FLOAT", "STRING"], "output_is_list": [false, false], "output_name": ["FLOAT", "show_help"], "name": "CR Increment Float", "display_name": "\ud83d\udd22 CR Increment Float", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": true}, "CR Increment Integer": {"input": {"required": {"start_value": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "step": ["INT", {"default": 1.0, "min": -9999.0, "max": 9999.0, "step": 1.0}], "start_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "frame_duration": ["INT", {"default": 1.0, "min": 0.0, "max": 9999.0, "step": 1.0}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["start_value", "step", "start_frame", "frame_duration", "current_frame"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["INT", "show_help"], "name": "CR Increment Integer", "display_name": "\ud83d\udd22 CR Increment Integer", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": true}, "CR Interpolate Latents": {"input": {"required": {"latent1": ["LATENT"], "latent2": ["LATENT"], "weight": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "method": [["lerp"]]}}, "input_order": {"required": ["latent1", "latent2", "weight", "method"]}, "output": ["LATENT", "STRING"], "output_is_list": [false, false], "output_name": ["LATENT", "show_help"], "name": "CR Interpolate Latents", "display_name": "\ud83d\udd22 CR Interpolate Latents", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udd22 Interpolate", "output_node": false}, "CR Debatch Frames": {"input": {"required": {"frames": ["IMAGE"]}}, "input_order": {"required": ["frames"]}, "output": ["IMAGE"], "output_is_list": [true], "output_name": ["debatched_frames"], "name": "CR Debatch Frames", "display_name": "\ud83d\udee0\ufe0f CR Debatch Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Current Frame": {"input": {"required": {"index": ["INT", {"default": 1, "min": -10000, "max": 10000}], "print_to_console": [["Yes", "No"]]}}, "input_order": {"required": ["index", "print_to_console"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["index"], "name": "CR Current Frame", "display_name": "\ud83d\udee0\ufe0f CR Current Frame", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udee0\ufe0f Utils", "output_node": false}, "CR Load Animation Frames": {"input": {"required": {"image_sequence_folder": [["3d", "Otherrides_assets"]], "start_index": ["INT", {"default": 1, "min": 1, "max": 10000}], "max_frames": ["INT", {"default": 1, "min": 1, "max": 10000}]}}, "input_order": {"required": ["image_sequence_folder", "start_index", "max_frames"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Load Animation Frames", "display_name": "\u2328\ufe0f CR Load Animation Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": false}, "CR Load Flow Frames": {"input": {"required": {"input_folder": [["3d", "Otherrides_assets"]], "sort_by": [["Index", "Alphabetic"]], "current_frame": ["INT", {"default": 0, "min": 0, "max": 10000, "forceInput": true}], "skip_start_frames": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {"input_path": ["STRING", {"default": "", "multiline": false}], "file_pattern": ["STRING", {"default": "*.png", "multiline": false}]}}, "input_order": {"required": ["input_folder", "sort_by", "current_frame", "skip_start_frames"], "optional": ["input_path", "file_pattern"]}, "output": ["IMAGE", "IMAGE", "INT", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["current_image", "previous_image", "current_frame", "show_help"], "name": "CR Load Flow Frames", "display_name": "\u2328\ufe0f CR Load Flow Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": false}, "CR Output Flow Frames": {"input": {"required": {"output_folder": [["Flux", "Otherides-2d", "Otherrides_3d", "trellis_models", "trellis_viewers"]], "current_image": ["IMAGE"], "filename_prefix": ["STRING", {"default": "CR"}], "current_frame": ["INT", {"default": 0, "min": 0, "max": 9999999, "forceInput": true}]}, "optional": {"interpolated_img": ["IMAGE"], "output_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["output_folder", "current_image", "filename_prefix", "current_frame"], "optional": ["interpolated_img", "output_path"]}, "output": [], "output_is_list": [], "output_name": [], "name": "CR Output Flow Frames", "display_name": "\u2328\ufe0f CR Output Flow Frames", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\u2328\ufe0f IO", "output_node": true}, "CR Prompt List Keyframes": {"input": {"required": {"prompt_list": ["PROMPT_LIST"], "keyframe_format": [["Deforum"]]}}, "input_order": {"required": ["prompt_list", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Prompt List Keyframes", "display_name": "CR Prompt List Keyframes (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Simple Prompt List": {"input": {"required": {"prompt_1": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_2": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_3": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_4": ["STRING", {"multiline": true, "default": "prompt"}], "prompt_5": ["STRING", {"multiline": true, "default": "prompt"}]}, "optional": {"simple_prompt_list": ["SIMPLE_PROMPT_LIST"]}}, "input_order": {"required": ["prompt_1", "prompt_2", "prompt_3", "prompt_4", "prompt_5"], "optional": ["simple_prompt_list"]}, "output": ["SIMPLE_PROMPT_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["SIMPLE_PROMPT_LIST", "show_help"], "name": "CR Simple Prompt List", "display_name": "CR Simple Prompt List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Simple Prompt List Keyframes": {"input": {"required": {"simple_prompt_list": ["SIMPLE_PROMPT_LIST"], "keyframe_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "transition_type": [["Default"]], "transition_speed": [["Default"]], "transition_profile": [["Default"]], "keyframe_format": [["Deforum"]]}}, "input_order": {"required": ["simple_prompt_list", "keyframe_interval", "loops", "transition_type", "transition_speed", "transition_profile", "keyframe_format"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["keyframe_list", "show_help"], "name": "CR Simple Prompt List Keyframes", "display_name": "CR Simple Prompt List Keyframes (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Models": {"input": {"required": {"mode": [["Off", "Sequential"]], "model": ["MODEL"], "clip": ["CLIP"], "model_list": ["MODEL_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "model", "clip", "model_list", "frame_interval", "loops", "current_frame"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "show_help"], "name": "CR Cycle Models", "display_name": "CR Cycle Models (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle LoRAs": {"input": {"required": {"mode": [["Off", "Sequential"]], "model": ["MODEL"], "clip": ["CLIP"], "lora_list": ["LORA_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "model", "clip", "lora_list", "frame_interval", "loops", "current_frame"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "show_help"], "name": "CR Cycle LoRAs", "display_name": "CR Cycle LoRAs (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Text": {"input": {"required": {"mode": [["Sequential"]], "text_list": ["TEXT_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "text_list", "frame_interval", "loops", "current_frame"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Cycle Text", "display_name": "CR Cycle Text (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Text Simple": {"input": {"required": {"mode": [["Sequential"]], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"text_1": ["STRING", {"multiline": false, "default": ""}], "text_2": ["STRING", {"multiline": false, "default": ""}], "text_3": ["STRING", {"multiline": false, "default": ""}], "text_4": ["STRING", {"multiline": false, "default": ""}], "text_5": ["STRING", {"multiline": false, "default": ""}], "text_list_simple": ["TEXT_LIST_SIMPLE"]}}, "input_order": {"required": ["mode", "frame_interval", "loops", "current_frame"], "optional": ["text_1", "text_2", "text_3", "text_4", "text_5", "text_list_simple"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["STRING", "show_help"], "name": "CR Cycle Text Simple", "display_name": "CR Cycle Text Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Images": {"input": {"required": {"mode": [["Sequential"]], "image_list": ["IMAGE_LIST"], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}}, "input_order": {"required": ["mode", "image_list", "frame_interval", "loops", "current_frame"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Cycle Images", "display_name": "CR Cycle Images (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Cycle Images Simple": {"input": {"required": {"mode": [["Sequential"]], "frame_interval": ["INT", {"default": 30, "min": 0, "max": 999, "step": 1}], "loops": ["INT", {"default": 1, "min": 1, "max": 1000}], "current_frame": ["INT", {"default": 0.0, "min": 0.0, "max": 9999.0, "step": 1.0}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"], "image_list_simple": ["IMAGE_LIST_SIMPLE"]}}, "input_order": {"required": ["mode", "frame_interval", "loops", "current_frame"], "optional": ["image_1", "image_2", "image_3", "image_4", "image_5", "image_list_simple"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE", "show_help"], "name": "CR Cycle Images Simple", "display_name": "CR Cycle Images Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Model List": {"input": {"required": {"ckpt_name1": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "alias1": ["STRING", {"multiline": false, "default": ""}], "ckpt_name2": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "alias2": ["STRING", {"multiline": false, "default": ""}], "ckpt_name3": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "alias3": ["STRING", {"multiline": false, "default": ""}], "ckpt_name4": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "alias4": ["STRING", {"multiline": false, "default": ""}], "ckpt_name5": [["None", "FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]], "alias5": ["STRING", {"multiline": false, "default": ""}]}, "optional": {"model_list": ["MODEL_LIST"]}}, "input_order": {"required": ["ckpt_name1", "alias1", "ckpt_name2", "alias2", "ckpt_name3", "alias3", "ckpt_name4", "alias4", "ckpt_name5", "alias5"], "optional": ["model_list"]}, "output": ["MODEL_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["MODEL_LIST", "show_text"], "name": "CR Model List", "display_name": "CR Model List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR LoRA List": {"input": {"required": {"lora_name1": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "alias1": ["STRING", {"multiline": false, "default": ""}], "model_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_1": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name2": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "alias2": ["STRING", {"multiline": false, "default": ""}], "model_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_2": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_name3": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "alias3": ["STRING", {"multiline": false, "default": ""}], "model_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "clip_strength_3": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}, "optional": {"lora_list": ["lora_LIST"]}}, "input_order": {"required": ["lora_name1", "alias1", "model_strength_1", "clip_strength_1", "lora_name2", "alias2", "model_strength_2", "clip_strength_2", "lora_name3", "alias3", "model_strength_3", "clip_strength_3"], "optional": ["lora_list"]}, "output": ["LORA_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["LORA_LIST", "show_text"], "name": "CR LoRA List", "display_name": "CR LoRA List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Text List Simple": {"input": {"required": {}, "optional": {"text_1": ["STRING", {"multiline": false, "default": ""}], "text_2": ["STRING", {"multiline": false, "default": ""}], "text_3": ["STRING", {"multiline": false, "default": ""}], "text_4": ["STRING", {"multiline": false, "default": ""}], "text_5": ["STRING", {"multiline": false, "default": ""}], "text_list_simple": ["TEXT_LIST_SIMPLE"]}}, "input_order": {"required": [], "optional": ["text_1", "text_2", "text_3", "text_4", "text_5", "text_list_simple"]}, "output": ["TEXT_LIST_SIMPLE", "STRING"], "output_is_list": [false, false], "output_name": ["TEXT_LIST_SIMPLE", "show_help"], "name": "CR Text List Simple", "display_name": "CR Text List Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Image List": {"input": {"required": {}, "optional": {"image_1": ["IMAGE"], "alias1": ["STRING", {"multiline": false, "default": ""}], "image_2": ["IMAGE"], "alias2": ["STRING", {"multiline": false, "default": ""}], "image_3": ["IMAGE"], "alias3": ["STRING", {"multiline": false, "default": ""}], "image_4": ["IMAGE"], "alias4": ["STRING", {"multiline": false, "default": ""}], "image_5": ["IMAGE"], "alias5": ["STRING", {"multiline": false, "default": ""}], "image_list": ["image_LIST"]}}, "input_order": {"required": [], "optional": ["image_1", "alias1", "image_2", "alias2", "image_3", "alias3", "image_4", "alias4", "image_5", "alias5", "image_list"]}, "output": ["IMAGE_LIST", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE_LIST", "show_help"], "name": "CR Image List", "display_name": "CR Image List (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "CR Image List Simple": {"input": {"required": {}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"], "image_list_simple": ["IMAGE_LIST_SIMPLE"]}}, "input_order": {"required": [], "optional": ["image_1", "image_2", "image_3", "image_4", "image_5", "image_list_simple"]}, "output": ["IMAGE_LIST_SIMPLE", "STRING"], "output_is_list": [false, false], "output_name": ["IMAGE_LIST_SIMPLE", "show_help"], "name": "CR Image List Simple", "display_name": "CR Image List Simple (Legacy)", "description": "", "python_module": "custom_nodes.ComfyUI_Comfyroll_CustomNodes", "category": "\ud83e\udde9 Comfyroll Studio/\ud83c\udfa5 Animation/\ud83d\udc80 Legacy", "output_node": false}, "MediaPipe-FaceMeshPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"max_faces": ["INT", {"default": 10, "min": 1, "max": 50, "step": 1}], "min_confidence": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 1, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["max_faces", "min_confidence", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MediaPipe-FaceMeshPreprocessor", "display_name": "MediaPipe Face Mesh", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "AnimeFace_SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"remove_background_using_abg": ["BOOLEAN", {"default": true}], "resolution": ["INT", {"default": 512, "min": 512, "max": 512, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["remove_background_using_abg", "resolution"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "ABG_CHARACTER_MASK (MASK)"], "name": "AnimeFace_SemSegPreprocessor", "display_name": "Anime Face Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "AnyLineArtPreprocessor_aux": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"merge_with_lineart": [["lineart_standard", "lineart_realisitic", "lineart_anime", "manga_line"], {"default": "lineart_standard"}], "resolution": ["INT", {"default": 1280, "min": 64, "max": 16384, "step": 8}], "lineart_lower_bound": ["FLOAT", {"default": 0, "min": 0, "max": 1, "step": 0.01}], "lineart_upper_bound": ["FLOAT", {"default": 1, "min": 0, "max": 1, "step": 0.01}], "object_min_size": ["INT", {"default": 36, "min": 1, "max": 16384, "step": 1}], "object_connectivity": ["INT", {"default": 1, "min": 1, "max": 16384, "step": 1}]}}, "input_order": {"required": ["image"], "optional": ["merge_with_lineart", "resolution", "lineart_lower_bound", "lineart_upper_bound", "object_min_size", "object_connectivity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "AnyLineArtPreprocessor_aux", "display_name": "AnyLine Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "BinaryPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"bin_threshold": ["INT", {"default": 100, "min": 0, "max": 255, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["bin_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BinaryPreprocessor", "display_name": "Binary Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "CannyEdgePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"low_threshold": ["INT", {"default": 100, "min": 0, "max": 255, "step": 1}], "high_threshold": ["INT", {"default": 200, "min": 0, "max": 255, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["low_threshold", "high_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CannyEdgePreprocessor", "display_name": "Canny Edge", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "ColorPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ColorPreprocessor", "display_name": "Color Pallete", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/T2IAdapter-only", "output_node": false}, "DensePosePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"model": [["densepose_r50_fpn_dl.torchscript", "densepose_r101_fpn_dl.torchscript"], {"default": "densepose_r50_fpn_dl.torchscript"}], "cmap": [["Viridis (MagicAnimate)", "Parula (CivitAI)"], {"default": "Viridis (MagicAnimate)"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["model", "cmap", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DensePosePreprocessor", "display_name": "DensePose Estimator", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "DepthAnythingPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"ckpt_name": [["depth_anything_vitl14.pth", "depth_anything_vitb14.pth", "depth_anything_vits14.pth"], {"default": "depth_anything_vitl14.pth"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["ckpt_name", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DepthAnythingPreprocessor", "display_name": "Depth Anything", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "Zoe_DepthAnythingPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"environment": [["indoor", "outdoor"], {"default": "indoor"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["environment", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Zoe_DepthAnythingPreprocessor", "display_name": "Zoe Depth Anything", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "DepthAnythingV2Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"ckpt_name": [["depth_anything_v2_vitg.pth", "depth_anything_v2_vitl.pth", "depth_anything_v2_vitb.pth", "depth_anything_v2_vits.pth"], {"default": "depth_anything_v2_vitl.pth"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["ckpt_name", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DepthAnythingV2Preprocessor", "display_name": "Depth Anything V2 - Relative", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "DiffusionEdge_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"environment": [["indoor", "urban", "natrual"], {"default": "indoor"}], "patch_batch_size": ["INT", {"default": 4, "min": 1, "max": 16, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["environment", "patch_batch_size", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DiffusionEdge_Preprocessor", "display_name": "Diffusion Edge (batch size \u2191 => speed \u2191, VRAM \u2191)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "DSINE-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"fov": ["FLOAT", {"default": 60.0, "min": 0, "max": 365.0, "step": 0.01}], "iterations": ["INT", {"default": 5, "min": 1, "max": 20, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["fov", "iterations", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "DSINE-NormalMapPreprocessor", "display_name": "DSINE Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "DWPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"detect_hand": [["enable", "disable"], {"default": "enable"}], "detect_body": [["enable", "disable"], {"default": "enable"}], "detect_face": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "bbox_detector": [["yolox_l.torchscript.pt", "yolox_l.onnx", "yolo_nas_l_fp16.onnx", "yolo_nas_m_fp16.onnx", "yolo_nas_s_fp16.onnx"], {"default": "yolox_l.onnx"}], "pose_estimator": [["dw-ll_ucoco_384_bs5.torchscript.pt", "dw-ll_ucoco_384.onnx", "dw-ll_ucoco.onnx"], {"default": "dw-ll_ucoco_384_bs5.torchscript.pt"}], "scale_stick_for_xinsr_cn": [["disable", "enable"], {"default": "disable"}]}}, "input_order": {"required": ["image"], "optional": ["detect_hand", "detect_body", "detect_face", "resolution", "bbox_detector", "pose_estimator", "scale_stick_for_xinsr_cn"]}, "output": ["IMAGE", "POSE_KEYPOINT"], "output_is_list": [false, false], "output_name": ["IMAGE", "POSE_KEYPOINT"], "name": "DWPreprocessor", "display_name": "DWPose Estimator", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "AnimalPosePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"bbox_detector": [["yolox_l.torchscript.pt", "yolox_l.onnx", "yolo_nas_l_fp16.onnx", "yolo_nas_m_fp16.onnx", "yolo_nas_s_fp16.onnx"], {"default": "yolox_l.torchscript.pt"}], "pose_estimator": [["rtmpose-m_ap10k_256_bs5.torchscript.pt", "rtmpose-m_ap10k_256.onnx"], {"default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["bbox_detector", "pose_estimator", "resolution"]}, "output": ["IMAGE", "POSE_KEYPOINT"], "output_is_list": [false, false], "output_name": ["IMAGE", "POSE_KEYPOINT"], "name": "AnimalPosePreprocessor", "display_name": "AnimalPose Estimator (AP10K)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "HEDPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "HEDPreprocessor", "display_name": "HED Soft-Edge Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "FakeScribblePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FakeScribblePreprocessor", "display_name": "Fake Scribble Lines (aka scribble_hed)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "InpaintPreprocessor": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"]}, "optional": {"black_pixel_for_xinsir_cn": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask"], "optional": ["black_pixel_for_xinsir_cn"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "InpaintPreprocessor", "display_name": "Inpaint Preprocessor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/others", "output_node": false}, "LeReS-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"rm_nearest": ["FLOAT", {"default": 0, "min": 0, "max": 100.0, "step": 0.01}], "rm_background": ["FLOAT", {"default": 0, "min": 0, "max": 100.0, "step": 0.01}], "boost": [["disable", "enable"], {"default": "disable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["rm_nearest", "rm_background", "boost", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LeReS-DepthMapPreprocessor", "display_name": "LeReS Depth Map (enable boost for leres++)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "LineArtPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"coarse": [["disable", "enable"], {"default": "disable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["coarse", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LineArtPreprocessor", "display_name": "Realistic Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "AnimeLineArtPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AnimeLineArtPreprocessor", "display_name": "Anime Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "LineartStandardPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"guassian_sigma": ["FLOAT", {"default": 6.0, "min": 0, "max": 100.0, "step": 0.01}], "intensity_threshold": ["INT", {"default": 8, "min": 0, "max": 16, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["guassian_sigma", "intensity_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "LineartStandardPreprocessor", "display_name": "Standard Lineart", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "Manga2Anime_LineArt_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Manga2Anime_LineArt_Preprocessor", "display_name": "Manga Lineart (aka lineart_anime_denoise)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "MeshGraphormer-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"mask_bbox_padding": ["INT", {"default": 30, "min": 0, "max": 100}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "mask_type": [["based_on_depth", "tight_bboxes", "original"], {"default": "based_on_depth"}], "mask_expand": ["INT", {"default": 5, "min": -16384, "max": 16384, "step": 1}], "rand_seed": ["INT", {"default": 88, "min": 0, "max": 18446744073709551615, "step": 1}], "detect_thr": ["FLOAT", {"default": 0.6, "min": 0.1, "max": 1, "step": 0.01}], "presence_thr": ["FLOAT", {"default": 0.6, "min": 0.1, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["image"], "optional": ["mask_bbox_padding", "resolution", "mask_type", "mask_expand", "rand_seed", "detect_thr", "presence_thr"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "INPAINTING_MASK"], "name": "MeshGraphormer-DepthMapPreprocessor", "display_name": "MeshGraphormer Hand Refiner", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"], "bbox_detector": ["BBOX_DETECTOR"]}, "optional": {"bbox_threshold": ["FLOAT", {"default": 0.5, "min": 0.1, "max": 1, "step": 0.01}], "bbox_dilation": ["INT", {"default": 10, "min": -512, "max": 512, "step": 1}], "bbox_crop_factor": ["FLOAT", {"default": 3.0, "min": 1.0, "max": 10.0, "step": 0.01}], "drop_size": ["INT", {"default": 10, "min": 1, "max": 16384, "step": 1}], "mask_bbox_padding": ["INT", {"default": 30, "min": 0, "max": 100, "step": 1}], "mask_type": [["based_on_depth", "tight_bboxes", "original"], {"default": "based_on_depth"}], "mask_expand": ["INT", {"default": 5, "min": -16384, "max": 16384, "step": 1}], "rand_seed": ["INT", {"default": 88, "min": 0, "max": 18446744073709551615, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image", "bbox_detector"], "optional": ["bbox_threshold", "bbox_dilation", "bbox_crop_factor", "drop_size", "mask_bbox_padding", "mask_type", "mask_expand", "rand_seed", "resolution"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "INPAINTING_MASK"], "name": "MeshGraphormer+ImpactDetector-DepthMapPreprocessor", "display_name": "MeshGraphormer Hand Refiner With External Detector", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "Metric3D-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"backbone": [["vit-small", "vit-large", "vit-giant2"], {"default": "vit-small"}], "fx": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "fy": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["backbone", "fx", "fy", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Metric3D-DepthMapPreprocessor", "display_name": "Metric3D Depth Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "Metric3D-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"backbone": [["vit-small", "vit-large", "vit-giant2"], {"default": "vit-small"}], "fx": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "fy": ["INT", {"default": 1000, "min": 1, "max": 16384, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["backbone", "fx", "fy", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Metric3D-NormalMapPreprocessor", "display_name": "Metric3D Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "MiDaS-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"a": ["FLOAT", {"default": 6.283185307179586, "min": 0.0, "max": 15.707963267948966, "step": 0.01}], "bg_threshold": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["a", "bg_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MiDaS-NormalMapPreprocessor", "display_name": "MiDaS Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "MiDaS-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"a": ["FLOAT", {"default": 6.283185307179586, "min": 0.0, "max": 15.707963267948966, "step": 0.01}], "bg_threshold": ["FLOAT", {"default": 0.1, "min": 0, "max": 1, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["a", "bg_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "MiDaS-DepthMapPreprocessor", "display_name": "MiDaS Depth Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "M-LSDPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"score_threshold": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 2.0, "step": 0.01}], "dist_threshold": ["FLOAT", {"default": 0.1, "min": 0.01, "max": 20.0, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["score_threshold", "dist_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "M-LSDPreprocessor", "display_name": "M-LSD Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "BAE-NormalMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "BAE-NormalMapPreprocessor", "display_name": "BAE Normal Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "OneFormer-COCO-SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "OneFormer-COCO-SemSegPreprocessor", "display_name": "OneFormer COCO Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "OneFormer-ADE20K-SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "OneFormer-ADE20K-SemSegPreprocessor", "display_name": "OneFormer ADE20K Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "OpenposePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"detect_hand": [["enable", "disable"], {"default": "enable"}], "detect_body": [["enable", "disable"], {"default": "enable"}], "detect_face": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "scale_stick_for_xinsr_cn": [["disable", "enable"], {"default": "disable"}]}}, "input_order": {"required": ["image"], "optional": ["detect_hand", "detect_body", "detect_face", "resolution", "scale_stick_for_xinsr_cn"]}, "output": ["IMAGE", "POSE_KEYPOINT"], "output_is_list": [false, false], "output_name": ["IMAGE", "POSE_KEYPOINT"], "name": "OpenposePreprocessor", "display_name": "OpenPose Pose", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Faces and Poses Estimators", "output_node": false}, "PiDiNetPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"], {"default": "enable"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PiDiNetPreprocessor", "display_name": "PiDiNet Soft-Edge Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "SavePoseKpsAsJsonFile": {"input": {"required": {"pose_kps": ["POSE_KEYPOINT"], "filename_prefix": ["STRING", {"default": "PoseKeypoint"}]}}, "input_order": {"required": ["pose_kps", "filename_prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SavePoseKpsAsJsonFile", "display_name": "Save Pose Keypoints", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": true}, "FacialPartColoringFromPoseKps": {"input": {"required": {"pose_kps": ["POSE_KEYPOINT"], "mode": [["point", "polygon"], {"default": "polygon"}], "skin": ["STRING", {"default": "rgb(0, 153, 255)", "multiline": false}], "left_eye": ["STRING", {"default": "rgb(0, 204, 153)", "multiline": false}], "right_eye": ["STRING", {"default": "rgb(255, 153, 0)", "multiline": false}], "nose": ["STRING", {"default": "rgb(255, 102, 255)", "multiline": false}], "upper_lip": ["STRING", {"default": "rgb(102, 0, 51)", "multiline": false}], "inner_mouth": ["STRING", {"default": "rgb(255, 204, 255)", "multiline": false}], "lower_lip": ["STRING", {"default": "rgb(255, 0, 102)", "multiline": false}]}}, "input_order": {"required": ["pose_kps", "mode", "skin", "left_eye", "right_eye", "nose", "upper_lip", "inner_mouth", "lower_lip"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "FacialPartColoringFromPoseKps", "display_name": "Colorize Facial Parts from PoseKPS", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "UpperBodyTrackingFromPoseKps": {"input": {"required": {"pose_kps": ["POSE_KEYPOINT"], "id_include": ["STRING", {"default": "", "multiline": false}], "Head_width_height": ["STRING", {"default": "256, 256", "multiline": false}], "Neck_width_height": ["STRING", {"default": "100, 100", "multiline": false}], "Shoulder_width_height": ["STRING", {"default": "", "multiline": false}], "Torso_width_height": ["STRING", {"default": "350, 450", "multiline": false}], "RArm_width_height": ["STRING", {"default": "128, 256", "multiline": false}], "RForearm_width_height": ["STRING", {"default": "128, 256", "multiline": false}], "LArm_width_height": ["STRING", {"default": "128, 256", "multiline": false}], "LForearm_width_height": ["STRING", {"default": "128, 256", "multiline": false}]}}, "input_order": {"required": ["pose_kps", "id_include", "Head_width_height", "Neck_width_height", "Shoulder_width_height", "Torso_width_height", "RArm_width_height", "RForearm_width_height", "LArm_width_height", "LForearm_width_height"]}, "output": ["TRACKING", "STRING"], "output_is_list": [false, false], "output_name": ["tracking", "prompt"], "name": "UpperBodyTrackingFromPoseKps", "display_name": "Upper Body Tracking From PoseKps (InstanceDiffusion)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "RenderPeopleKps": {"input": {"required": {"kps": ["POSE_KEYPOINT"], "render_body": ["BOOLEAN", {"default": true}], "render_hand": ["BOOLEAN", {"default": true}], "render_face": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["kps", "render_body", "render_hand", "render_face"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RenderPeopleKps", "display_name": "Render Pose JSON (Human)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "RenderAnimalKps": {"input": {"required": {"kps": ["POSE_KEYPOINT"]}}, "input_order": {"required": ["kps"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "RenderAnimalKps", "display_name": "Render Pose JSON (Animal)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Pose Keypoint Postprocess", "output_node": false}, "PyraCannyPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"low_threshold": ["INT", {"default": 64, "min": 0, "max": 255, "step": 1}], "high_threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["low_threshold", "high_threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PyraCannyPreprocessor", "display_name": "PyraCanny", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "ImageLuminanceDetector": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"gamma_correction": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 2.0, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["gamma_correction", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageLuminanceDetector", "display_name": "Image Luminance", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Recolor", "output_node": false}, "ImageIntensityDetector": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"gamma_correction": ["FLOAT", {"default": 1.0, "min": 0.1, "max": 2.0, "step": 0.01}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["gamma_correction", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageIntensityDetector", "display_name": "Image Intensity", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Recolor", "output_node": false}, "ScribblePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ScribblePreprocessor", "display_name": "Scribble Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "Scribble_XDoG_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"threshold": ["INT", {"default": 32, "min": 1, "max": 64, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["threshold", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Scribble_XDoG_Preprocessor", "display_name": "Scribble XDoG Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "Scribble_PiDiNet_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe": [["enable", "disable"]], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Scribble_PiDiNet_Preprocessor", "display_name": "Scribble PiDiNet Lines", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "SAMPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SAMPreprocessor", "display_name": "SAM Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/others", "output_node": false}, "ShufflePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image"], "optional": ["resolution", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ShufflePreprocessor", "display_name": "Content Shuffle", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/T2IAdapter-only", "output_node": false}, "TEEDPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"safe_steps": ["INT", {"default": 2, "min": 0, "max": 10, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["safe_steps", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TEEDPreprocessor", "display_name": "TEEDPreprocessor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Line Extractors", "output_node": false}, "TilePreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"pyrUp_iters": ["INT", {"default": 3, "min": 1, "max": 10, "step": 1}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["pyrUp_iters", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TilePreprocessor", "display_name": "Tile", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/tile", "output_node": false}, "TTPlanet_TileGF_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"scale_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 8.0, "step": 0.01}], "blur_strength": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.01}], "radius": ["INT", {"default": 7, "min": 1, "max": 20, "step": 1}], "eps": ["FLOAT", {"default": 0.01, "min": 0.001, "max": 0.1, "step": 0.001}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["scale_factor", "blur_strength", "radius", "eps", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TTPlanet_TileGF_Preprocessor", "display_name": "TTPlanet Tile GuidedFilter", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/tile", "output_node": false}, "TTPlanet_TileSimple_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"scale_factor": ["FLOAT", {"default": 1.0, "min": 1.0, "max": 8.0, "step": 0.01}], "blur_strength": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["image"], "optional": ["scale_factor", "blur_strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "TTPlanet_TileSimple_Preprocessor", "display_name": "TTPlanet Tile Simple", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/tile", "output_node": false}, "UniFormer-SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "UniFormer-SemSegPreprocessor", "display_name": "UniFormer Segmentor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "SemSegPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "SemSegPreprocessor", "display_name": "Semantic Segmentor (legacy, alias for UniFormer)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Semantic Segmentation", "output_node": false}, "Unimatch_OptFlowPreprocessor": {"input": {"required": {"image": ["IMAGE"], "ckpt_name": [["gmflow-scale1-mixdata.pth", "gmflow-scale2-mixdata.pth", "gmflow-scale2-regrefine6-mixdata.pth"], {"default": "gmflow-scale2-regrefine6-mixdata.pth"}], "backward_flow": ["BOOLEAN", {"default": false}], "bidirectional_flow": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "ckpt_name", "backward_flow", "bidirectional_flow"]}, "output": ["OPTICAL_FLOW", "IMAGE"], "output_is_list": [false, false], "output_name": ["OPTICAL_FLOW", "PREVIEW_IMAGE"], "name": "Unimatch_OptFlowPreprocessor", "display_name": "Unimatch Optical Flow", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Optical Flow", "output_node": false}, "MaskOptFlow": {"input": {"required": {"optical_flow": ["OPTICAL_FLOW"], "mask": ["MASK"]}}, "input_order": {"required": ["optical_flow", "mask"]}, "output": ["OPTICAL_FLOW", "IMAGE"], "output_is_list": [false, false], "output_name": ["OPTICAL_FLOW", "PREVIEW_IMAGE"], "name": "MaskOptFlow", "display_name": "Mask Optical Flow (DragNUWA)", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Optical Flow", "output_node": false}, "Zoe-DepthMapPreprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Zoe-DepthMapPreprocessor", "display_name": "Zoe Depth Map", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors/Normal and Depth Estimators", "output_node": false}, "AIO_Preprocessor": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"preprocessor": [["none", "MediaPipe-FaceMeshPreprocessor", "AnimeFace_SemSegPreprocessor", "AnyLineArtPreprocessor_aux", "BinaryPreprocessor", "CannyEdgePreprocessor", "ColorPreprocessor", "DensePosePreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "DepthAnythingV2Preprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "LeReS-DepthMapPreprocessor", "LineArtPreprocessor", "AnimeLineArtPreprocessor", "LineartStandardPreprocessor", "Manga2Anime_LineArt_Preprocessor", "MeshGraphormer-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "M-LSDPreprocessor", "BAE-NormalMapPreprocessor", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "OpenposePreprocessor", "PiDiNetPreprocessor", "PyraCannyPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "SAMPreprocessor", "ShufflePreprocessor", "TEEDPreprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "Zoe-DepthMapPreprocessor"], {"default": "none"}], "resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["preprocessor", "resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "AIO_Preprocessor", "display_name": "AIO Aux Preprocessor", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ControlNetPreprocessorSelector": {"input": {"required": {"preprocessor": [["none", "MediaPipe-FaceMeshPreprocessor", "AnimeFace_SemSegPreprocessor", "AnyLineArtPreprocessor_aux", "BinaryPreprocessor", "CannyEdgePreprocessor", "ColorPreprocessor", "DensePosePreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "DepthAnythingV2Preprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "LeReS-DepthMapPreprocessor", "LineArtPreprocessor", "AnimeLineArtPreprocessor", "LineartStandardPreprocessor", "Manga2Anime_LineArt_Preprocessor", "MeshGraphormer-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "M-LSDPreprocessor", "BAE-NormalMapPreprocessor", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "OpenposePreprocessor", "PiDiNetPreprocessor", "PyraCannyPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "SAMPreprocessor", "ShufflePreprocessor", "TEEDPreprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "Zoe-DepthMapPreprocessor"]]}}, "input_order": {"required": ["preprocessor"]}, "output": [["none", "MediaPipe-FaceMeshPreprocessor", "AnimeFace_SemSegPreprocessor", "AnyLineArtPreprocessor_aux", "BinaryPreprocessor", "CannyEdgePreprocessor", "ColorPreprocessor", "DensePosePreprocessor", "DepthAnythingPreprocessor", "Zoe_DepthAnythingPreprocessor", "DepthAnythingV2Preprocessor", "DSINE-NormalMapPreprocessor", "DWPreprocessor", "AnimalPosePreprocessor", "HEDPreprocessor", "FakeScribblePreprocessor", "LeReS-DepthMapPreprocessor", "LineArtPreprocessor", "AnimeLineArtPreprocessor", "LineartStandardPreprocessor", "Manga2Anime_LineArt_Preprocessor", "MeshGraphormer-DepthMapPreprocessor", "Metric3D-DepthMapPreprocessor", "Metric3D-NormalMapPreprocessor", "MiDaS-NormalMapPreprocessor", "MiDaS-DepthMapPreprocessor", "M-LSDPreprocessor", "BAE-NormalMapPreprocessor", "OneFormer-COCO-SemSegPreprocessor", "OneFormer-ADE20K-SemSegPreprocessor", "OpenposePreprocessor", "PiDiNetPreprocessor", "PyraCannyPreprocessor", "ImageLuminanceDetector", "ImageIntensityDetector", "ScribblePreprocessor", "Scribble_XDoG_Preprocessor", "Scribble_PiDiNet_Preprocessor", "SAMPreprocessor", "ShufflePreprocessor", "TEEDPreprocessor", "TilePreprocessor", "TTPlanet_TileGF_Preprocessor", "TTPlanet_TileSimple_Preprocessor", "UniFormer-SemSegPreprocessor", "SemSegPreprocessor", "Zoe-DepthMapPreprocessor"]], "output_is_list": [false], "output_name": ["preprocessor"], "name": "ControlNetPreprocessorSelector", "display_name": "Preprocessor Selector", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "PixelPerfectResolution": {"input": {"required": {"original_image": ["IMAGE"], "image_gen_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "image_gen_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "resize_mode": [["Just Resize", "Crop and Resize", "Resize and Fill"], {"default": "Just Resize"}]}}, "input_order": {"required": ["original_image", "image_gen_width", "image_gen_height", "resize_mode"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["RESOLUTION (INT)"], "name": "PixelPerfectResolution", "display_name": "Pixel Perfect Resolution", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ImageGenResolutionFromImage": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"], "name": "ImageGenResolutionFromImage", "display_name": "Generation Resolution From Image", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ImageGenResolutionFromLatent": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["IMAGE_GEN_WIDTH (INT)", "IMAGE_GEN_HEIGHT (INT)"], "name": "ImageGenResolutionFromLatent", "display_name": "Generation Resolution From Latent", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "HintImageEnchance": {"input": {"required": {"hint_image": ["IMAGE"], "image_gen_width": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "image_gen_height": ["INT", {"default": 512, "min": 64, "max": 8192, "step": 8}], "resize_mode": [["Just Resize", "Crop and Resize", "Resize and Fill"], {"default": "Just Resize"}]}}, "input_order": {"required": ["hint_image", "image_gen_width", "image_gen_height", "resize_mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "HintImageEnchance", "display_name": "Enchance And Resize Hint Images", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ExecuteAllControlNetPreprocessors": {"input": {"required": {"image": ["IMAGE"]}, "optional": {"resolution": ["INT", {"default": 512, "min": 64, "max": 16384, "step": 64}]}}, "input_order": {"required": ["image"], "optional": ["resolution"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ExecuteAllControlNetPreprocessors", "display_name": "Execute All ControlNet Preprocessors", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "ControlNetAuxSimpleAddText": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["image", "text"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ControlNetAuxSimpleAddText", "display_name": "ControlNetAuxSimpleAddText", "description": "", "python_module": "custom_nodes.comfyui_controlnet_aux", "category": "ControlNet Preprocessors", "output_node": false}, "CLIPTextEncodeSDXL+": {"input": {"required": {"width": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "height": ["INT", {"default": 1024.0, "min": 0, "max": 16384}], "size_cond_factor": ["INT", {"default": 4, "min": 1, "max": 16}], "text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": ""}], "clip": ["CLIP"]}}, "input_order": {"required": ["width", "height", "size_cond_factor", "text", "clip"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "CLIPTextEncodeSDXL+", "display_name": "\ud83d\udd27 SDXL CLIPTextEncode", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/conditioning", "output_node": false}, "ConditioningCombineMultiple+": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"]}, "optional": {"conditioning_3": ["CONDITIONING"], "conditioning_4": ["CONDITIONING"], "conditioning_5": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_1", "conditioning_2"], "optional": ["conditioning_3", "conditioning_4", "conditioning_5"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "ConditioningCombineMultiple+", "display_name": "\ud83d\udd27 Cond Combine Multiple", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/conditioning", "output_node": false}, "SD3NegativeConditioning+": {"input": {"required": {"conditioning": ["CONDITIONING"], "end": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["conditioning", "end"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "SD3NegativeConditioning+", "display_name": "\ud83d\udd27 SD3 Negative Conditioning", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/conditioning", "output_node": false}, "ImageEnhanceDifference+": {"input": {"required": {"image1": ["IMAGE"], "image2": ["IMAGE"], "exponent": ["FLOAT", {"default": 0.75, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image1", "image2", "exponent"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageEnhanceDifference+", "display_name": "\ud83d\udd27 Image Enhance Difference", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image analysis", "output_node": false}, "ImageBatchMultiple+": {"input": {"required": {"image_1": ["IMAGE"], "method": [["nearest-exact", "bilinear", "area", "bicubic", "lanczos"], {"default": "lanczos"}]}, "optional": {"image_2": ["IMAGE"], "image_3": ["IMAGE"], "image_4": ["IMAGE"], "image_5": ["IMAGE"]}}, "input_order": {"required": ["image_1", "method"], "optional": ["image_2", "image_3", "image_4", "image_5"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageBatchMultiple+", "display_name": "\ud83d\udd27 Images Batch Multiple", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageExpandBatch+": {"input": {"required": {"image": ["IMAGE"], "size": ["INT", {"default": 16, "min": 1, "step": 1}], "method": [["expand", "repeat all", "repeat first", "repeat last"]]}}, "input_order": {"required": ["image", "size", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageExpandBatch+", "display_name": "\ud83d\udd27 Image Expand Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageFromBatch+": {"input": {"required": {"image": ["IMAGE"], "start": ["INT", {"default": 0, "min": 0, "step": 1}], "length": ["INT", {"default": -1, "min": -1, "step": 1}]}}, "input_order": {"required": ["image", "start", "length"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFromBatch+", "display_name": "\ud83d\udd27 Image From Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageListToBatch+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageListToBatch+", "display_name": "\ud83d\udd27 Image List To Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image batch", "output_node": false}, "ImageCompositeFromMaskBatch+": {"input": {"required": {"image_from": ["IMAGE"], "image_to": ["IMAGE"], "mask": ["MASK"]}}, "input_order": {"required": ["image_from", "image_to", "mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCompositeFromMaskBatch+", "display_name": "\ud83d\udd27 Image Composite From Mask Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageComposite+": {"input": {"required": {"destination": ["IMAGE"], "source": ["IMAGE"], "x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}]}, "optional": {"mask": ["MASK"]}}, "input_order": {"required": ["destination", "source", "x", "y", "offset_x", "offset_y"], "optional": ["mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageComposite+", "display_name": "\ud83d\udd27 Image Composite", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageCrop+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 256, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 256, "min": 0, "max": 16384, "step": 8}], "position": [["top-left", "top-center", "top-right", "right-center", "bottom-right", "bottom-center", "bottom-left", "left-center", "center"]], "x_offset": ["INT", {"default": 0, "min": -99999, "step": 1}], "y_offset": ["INT", {"default": 0, "min": -99999, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "position", "x_offset", "y_offset"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "x", "y"], "name": "ImageCrop+", "display_name": "\ud83d\udd27 Image Crop", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageFlip+": {"input": {"required": {"image": ["IMAGE"], "axis": [["x", "y", "xy"]]}}, "input_order": {"required": ["image", "axis"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageFlip+", "display_name": "\ud83d\udd27 Image Flip", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageRandomTransform+": {"input": {"required": {"image": ["IMAGE"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "repeat": ["INT", {"default": 1, "min": 1, "max": 256, "step": 1}], "variation": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image", "seed", "repeat", "variation"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRandomTransform+", "display_name": "\ud83d\udd27 Image Random Transform", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageRemoveAlpha+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageRemoveAlpha+", "display_name": "\ud83d\udd27 Image Remove Alpha", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "ImageRemoveBackground+": {"input": {"required": {"rembg_session": ["REMBG_SESSION"], "image": ["IMAGE"]}}, "input_order": {"required": ["rembg_session", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageRemoveBackground+", "display_name": "\ud83d\udd27 Image Remove Background", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageResize+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 0, "max": 16384, "step": 1}], "interpolation": [["nearest", "bilinear", "bicubic", "area", "nearest-exact", "lanczos"]], "method": [["stretch", "keep proportion", "fill / crop", "pad"]], "condition": [["always", "downscale if bigger", "upscale if smaller", "if bigger area", "if smaller area"]], "multiple_of": ["INT", {"default": 0, "min": 0, "max": 512, "step": 1}]}}, "input_order": {"required": ["image", "width", "height", "interpolation", "method", "condition", "multiple_of"]}, "output": ["IMAGE", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["IMAGE", "width", "height"], "name": "ImageResize+", "display_name": "\ud83d\udd27 Image Resize", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageSeamCarving+": {"input": {"required": {"image": ["IMAGE"], "width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "energy": [["backward", "forward"]], "order": [["width-first", "height-first"]]}, "optional": {"keep_mask": ["MASK"], "drop_mask": ["MASK"]}}, "input_order": {"required": ["image", "width", "height", "energy", "order"], "optional": ["keep_mask", "drop_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageSeamCarving+", "display_name": "\ud83d\udd27 Image Seam Carving", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageTile+": {"input": {"required": {"image": ["IMAGE"], "rows": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "cols": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "overlap": ["FLOAT", {"default": 0, "min": 0, "max": 0.5, "step": 0.01}], "overlap_x": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "overlap_y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}]}}, "input_order": {"required": ["image", "rows", "cols", "overlap", "overlap_x", "overlap_y"]}, "output": ["IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false], "output_name": ["IMAGE", "tile_width", "tile_height", "overlap_x", "overlap_y"], "name": "ImageTile+", "display_name": "\ud83d\udd27 Image Tile", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageUntile+": {"input": {"required": {"tiles": ["IMAGE"], "overlap_x": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "overlap_y": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 1}], "rows": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}], "cols": ["INT", {"default": 2, "min": 1, "max": 256, "step": 1}]}}, "input_order": {"required": ["tiles", "overlap_x", "overlap_y", "rows", "cols"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageUntile+", "display_name": "\ud83d\udd27 Image Untile", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "RemBGSession+": {"input": {"required": {"model": [["u2net: general purpose", "u2netp: lightweight general purpose", "u2net_human_seg: human segmentation", "u2net_cloth_seg: cloths Parsing", "silueta: very small u2net", "isnet-general-use: general purpose", "isnet-anime: anime illustrations", "sam: general purpose"]], "providers": [["CPU", "CUDA", "ROCM", "DirectML", "OpenVINO", "CoreML", "Tensorrt", "Azure"]]}}, "input_order": {"required": ["model", "providers"]}, "output": ["REMBG_SESSION"], "output_is_list": [false], "output_name": ["REMBG_SESSION"], "name": "RemBGSession+", "display_name": "\ud83d\udd27 RemBG Session", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "TransparentBGSession+": {"input": {"required": {"mode": [["base", "fast", "base-nightly"]], "use_jit": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["mode", "use_jit"]}, "output": ["REMBG_SESSION"], "output_is_list": [false], "output_name": ["REMBG_SESSION"], "name": "TransparentBGSession+", "display_name": "\ud83d\udd27 InSPyReNet TransparentBG", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image manipulation", "output_node": false}, "ImageApplyLUT+": {"input": {"required": {"image": ["IMAGE"], "lut_file": [[]], "gamma_correction": ["BOOLEAN", {"default": true}], "clip_values": ["BOOLEAN", {"default": true}], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "lut_file", "gamma_correction", "clip_values", "strength"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageApplyLUT+", "display_name": "\ud83d\udd27 Image Apply LUT", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageCASharpening+": {"input": {"required": {"image": ["IMAGE"], "amount": ["FLOAT", {"default": 0.8, "min": 0, "max": 1, "step": 0.05}]}}, "input_order": {"required": ["image", "amount"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageCASharpening+", "display_name": "\ud83d\udd27 Image Contrast Adaptive Sharpening", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageDesaturate+": {"input": {"required": {"image": ["IMAGE"], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "method": [["luminance (Rec.709)", "luminance (Rec.601)", "average", "lightness"]]}}, "input_order": {"required": ["image", "factor", "method"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageDesaturate+", "display_name": "\ud83d\udd27 Image Desaturate", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "PixelOEPixelize+": {"input": {"required": {"image": ["IMAGE"], "downscale_mode": [["contrast", "bicubic", "nearest", "center", "k-centroid"]], "target_size": ["INT", {"default": 128, "min": 0, "max": 16384, "step": 8}], "patch_size": ["INT", {"default": 16, "min": 4, "max": 32, "step": 2}], "thickness": ["INT", {"default": 2, "min": 1, "max": 16, "step": 1}], "color_matching": ["BOOLEAN", {"default": true}], "upscale": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["image", "downscale_mode", "target_size", "patch_size", "thickness", "color_matching", "upscale"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PixelOEPixelize+", "display_name": "\ud83d\udd27 Pixelize", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImagePosterize+": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.05}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImagePosterize+", "display_name": "\ud83d\udd27 Image Posterize", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageColorMatch+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "color_space": [["LAB", "YCbCr", "RGB", "LUV", "YUV", "XYZ"]], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]], "batch_size": ["INT", {"default": 0, "min": 0, "max": 1024, "step": 1}]}, "optional": {"reference_mask": ["MASK"]}}, "input_order": {"required": ["image", "reference", "color_space", "factor", "device", "batch_size"], "optional": ["reference_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorMatch+", "display_name": "\ud83d\udd27 Image Color Match", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageColorMatchAdobe+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "color_space": [["RGB", "LAB"]], "luminance_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.05}], "color_intensity_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 2.0, "step": 0.05}], "fade_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "neutralization_factor": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]]}, "optional": {"reference_mask": ["MASK"]}}, "input_order": {"required": ["image", "reference", "color_space", "luminance_factor", "color_intensity_factor", "fade_factor", "neutralization_factor", "device"], "optional": ["reference_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageColorMatchAdobe+", "display_name": "\ud83d\udd27 Image Color Match Adobe", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "ImageHistogramMatch+": {"input": {"required": {"image": ["IMAGE"], "reference": ["IMAGE"], "method": [["pytorch", "skimage"]], "factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05}], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["image", "reference", "method", "factor", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageHistogramMatch+", "display_name": "\ud83d\udd27 Image Histogram Match", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image processing", "output_node": false}, "GetImageSize+": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["INT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["width", "height", "count"], "name": "GetImageSize+", "display_name": "\ud83d\udd27 Get Image Size", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "ImageToDevice+": {"input": {"required": {"image": ["IMAGE"], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["image", "device"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "ImageToDevice+", "display_name": "\ud83d\udd27 Image To Device", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "ImagePreviewFromLatent+": {"input": {"required": {"latent": ["LATENT"], "vae": ["VAE"], "tile_size": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}]}, "optional": {"image": [["none"], {"image_upload": false}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["latent", "vae", "tile_size"], "optional": ["image"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "MASK", "INT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["IMAGE", "MASK", "width", "height"], "name": "ImagePreviewFromLatent+", "display_name": "\ud83d\udd27 Image Preview From Latent", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": true}, "NoiseFromImage+": {"input": {"required": {"image": ["IMAGE"], "noise_strenght": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "noise_size": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "color_noise": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_strength": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_scale_diff": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "saturation": ["FLOAT", {"default": 2.0, "min": 0.0, "max": 100.0, "step": 0.1}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0, "step": 0.1}], "blur": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.1}]}, "optional": {"noise_mask": ["IMAGE"]}}, "input_order": {"required": ["image", "noise_strenght", "noise_size", "color_noise", "mask_strength", "mask_scale_diff", "mask_contrast", "saturation", "contrast", "blur"], "optional": ["noise_mask"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "NoiseFromImage+", "display_name": "\ud83d\udd27 Noise From Image", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/image utils", "output_node": false}, "MaskBlur+": {"input": {"required": {"mask": ["MASK"], "amount": ["INT", {"default": 6, "min": 0, "max": 256, "step": 1}], "device": [["auto", "cpu", "gpu"]]}}, "input_order": {"required": ["mask", "amount", "device"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskBlur+", "display_name": "\ud83d\udd27 Mask Blur", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskBoundingBox+": {"input": {"required": {"mask": ["MASK"], "padding": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}]}, "optional": {"image_optional": ["IMAGE"]}}, "input_order": {"required": ["mask", "padding", "blur"], "optional": ["image_optional"]}, "output": ["MASK", "IMAGE", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["MASK", "IMAGE", "x", "y", "width", "height"], "name": "MaskBoundingBox+", "display_name": "\ud83d\udd27 Mask Bounding Box", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFix+": {"input": {"required": {"mask": ["MASK"], "erode_dilate": ["INT", {"default": 0, "min": -256, "max": 256, "step": 1}], "fill_holes": ["INT", {"default": 0, "min": 0, "max": 128, "step": 1}], "remove_isolated_pixels": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "smooth": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 256, "step": 1}]}}, "input_order": {"required": ["mask", "erode_dilate", "fill_holes", "remove_isolated_pixels", "smooth", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFix+", "display_name": "\ud83d\udd27 Mask Fix", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFlip+": {"input": {"required": {"mask": ["MASK"], "axis": [["x", "y", "xy"]]}}, "input_order": {"required": ["mask", "axis"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFlip+", "display_name": "\ud83d\udd27 Mask Flip", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromColor+": {"input": {"required": {"image": ["IMAGE"], "red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "threshold": ["INT", {"default": 0, "min": 0, "max": 127, "step": 1}]}}, "input_order": {"required": ["image", "red", "green", "blue", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromColor+", "display_name": "\ud83d\udd27 Mask From Color", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromList+": {"input": {"required": {"width": ["INT", {"default": 32, "min": 0, "max": 16384, "step": 8}], "height": ["INT", {"default": 32, "min": 0, "max": 16384, "step": 8}]}, "optional": {"values": ["INT,FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0}], "str_values": ["STRING", {"default": "", "multiline": true, "placeholder": "0.0, 0.5, 1.0"}]}}, "input_order": {"required": ["width", "height"], "optional": ["values", "str_values"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromList+", "display_name": "\ud83d\udd27 Mask From List", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromRGBCMYBW+": {"input": {"required": {"image": ["IMAGE"], "threshold_r": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}], "threshold_g": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}], "threshold_b": ["FLOAT", {"default": 0.15, "min": 0.0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold_r", "threshold_g", "threshold_b"]}, "output": ["MASK", "MASK", "MASK", "MASK", "MASK", "MASK", "MASK", "MASK"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["red", "green", "blue", "cyan", "magenta", "yellow", "black", "white"], "name": "MaskFromRGBCMYBW+", "display_name": "\ud83d\udd27 Mask From RGB/CMY/BW", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskFromSegmentation+": {"input": {"required": {"image": ["IMAGE"], "segments": ["INT", {"default": 6, "min": 1, "max": 16, "step": 1}], "remove_isolated_pixels": ["INT", {"default": 0, "min": 0, "max": 32, "step": 1}], "remove_small_masks": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "fill_holes": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "segments", "remove_isolated_pixels", "remove_small_masks", "fill_holes"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromSegmentation+", "display_name": "\ud83d\udd27 Mask From Segmentation", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskPreview+": {"input": {"required": {"mask": ["MASK"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["mask"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "MaskPreview+", "display_name": "\ud83d\udd27 Mask Preview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": true}, "MaskSmooth+": {"input": {"required": {"mask": ["MASK"], "amount": ["INT", {"default": 0, "min": 0, "max": 127, "step": 1}]}}, "input_order": {"required": ["mask", "amount"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskSmooth+", "display_name": "\ud83d\udd27 Mask Smooth", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "TransitionMask+": {"input": {"required": {"width": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 512, "min": 1, "max": 16384, "step": 1}], "frames": ["INT", {"default": 16, "min": 1, "max": 9999, "step": 1}], "start_frame": ["INT", {"default": 0, "min": 0, "step": 1}], "end_frame": ["INT", {"default": 9999, "min": 0, "step": 1}], "transition_type": [["horizontal slide", "vertical slide", "horizontal bar", "vertical bar", "center box", "horizontal door", "vertical door", "circle", "fade"]], "timing_function": [["linear", "in", "out", "in-out"]]}}, "input_order": {"required": ["width", "height", "frames", "start_frame", "end_frame", "transition_type", "timing_function"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "TransitionMask+", "display_name": "\ud83d\udd27 Transition Mask", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask", "output_node": false}, "MaskBatch+": {"input": {"required": {"mask1": ["MASK"], "mask2": ["MASK"]}}, "input_order": {"required": ["mask1", "mask2"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskBatch+", "display_name": "\ud83d\udd27 Mask Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask batch", "output_node": false}, "MaskExpandBatch+": {"input": {"required": {"mask": ["MASK"], "size": ["INT", {"default": 16, "min": 1, "step": 1}], "method": [["expand", "repeat all", "repeat first", "repeat last"]]}}, "input_order": {"required": ["mask", "size", "method"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskExpandBatch+", "display_name": "\ud83d\udd27 Mask Expand Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask batch", "output_node": false}, "MaskFromBatch+": {"input": {"required": {"mask": ["MASK"], "start": ["INT", {"default": 0, "min": 0, "step": 1}], "length": ["INT", {"default": 1, "min": 1, "step": 1}]}}, "input_order": {"required": ["mask", "start", "length"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "MaskFromBatch+", "display_name": "\ud83d\udd27 Mask From Batch", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/mask batch", "output_node": false}, "KSamplerVariationsStochastic+": {"input": {"required": {"model": ["MODEL"], "latent_image": ["LATENT"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 25, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 7.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "variation_seed": ["INT:seed", {"default": 0, "min": 0, "max": 18446744073709551615}], "variation_strength": ["FLOAT", {"default": 0.2, "min": 0.0, "max": 1.0, "step": 0.05, "round": 0.01}], "cfg_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.05, "round": 0.01}]}}, "input_order": {"required": ["model", "latent_image", "noise_seed", "steps", "cfg", "sampler", "scheduler", "positive", "negative", "variation_seed", "variation_strength", "cfg_scale"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerVariationsStochastic+", "display_name": "\ud83d\udd27 KSampler Stochastic Variations", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "KSamplerVariationsWithNoise+": {"input": {"required": {"model": ["MODEL"], "latent_image": ["LATENT"], "main_seed": ["INT:seed", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "variation_strength": ["FLOAT", {"default": 0.17, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}], "variation_seed": ["INT:seed", {"default": 12345, "min": 0, "max": 18446744073709551615}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["model", "latent_image", "main_seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "variation_strength", "variation_seed", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSamplerVariationsWithNoise+", "display_name": "\ud83d\udd27 KSampler Variations with Noise Injection", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "InjectLatentNoise+": {"input": {"required": {"latent": ["LATENT"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "noise_strength": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01, "round": 0.01}]}}, "input_order": {"required": ["latent", "noise_seed", "noise_strength"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "InjectLatentNoise+", "display_name": "\ud83d\udd27 Inject Latent Noise", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "FluxSamplerParams+": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "latent_image": ["LATENT"], "noise": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "?"}], "sampler": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "ipndm"}], "scheduler": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "simple"}], "steps": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "20"}], "guidance": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "3.5"}], "max_shift": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.15"}], "base_shift": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "0.5"}], "split_sigmas": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.0"}], "denoise": ["STRING", {"multiline": false, "dynamicPrompts": false, "default": "1.0"}]}}, "input_order": {"required": ["model", "conditioning", "latent_image", "noise", "sampler", "scheduler", "steps", "guidance", "max_shift", "base_shift", "split_sigmas", "denoise"]}, "output": ["LATENT", "SAMPLER_PARAMS"], "output_is_list": [false, false], "output_name": ["latent", "params"], "name": "FluxSamplerParams+", "display_name": "\ud83d\udd27 Flux Sampler Parameters", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "PlotParameters+": {"input": {"required": {"images": ["IMAGE"], "params": ["SAMPLER_PARAMS"], "order_by": [["none", "time", "seed", "steps", "denoise", "sampler", "scheduler"]], "cols_value": [["none", "time", "seed", "steps", "denoise", "sampler", "scheduler"]], "cols_num": ["INT", {"default": -1, "min": -1, "max": 1024}]}}, "input_order": {"required": ["images", "params", "order_by", "cols_value", "cols_num"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "PlotParameters+", "display_name": "\ud83d\udd27 Plot Sampler Parameters", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/sampling", "output_node": false}, "ApplyCLIPSeg+": {"input": {"required": {"clip_seg": ["CLIP_SEG"], "image": ["IMAGE"], "prompt": ["STRING", {"multiline": false, "default": ""}], "threshold": ["FLOAT", {"default": 0.4, "min": 0.0, "max": 1.0, "step": 0.05}], "smooth": ["INT", {"default": 9, "min": 0, "max": 32, "step": 1}], "dilate": ["INT", {"default": 0, "min": -32, "max": 32, "step": 1}], "blur": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["clip_seg", "image", "prompt", "threshold", "smooth", "dilate", "blur"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "ApplyCLIPSeg+", "display_name": "\ud83d\udd27 Apply CLIPSeg", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/segmentation", "output_node": false}, "LoadCLIPSegModels+": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["CLIP_SEG"], "output_is_list": [false], "output_name": ["CLIP_SEG"], "name": "LoadCLIPSegModels+", "display_name": "\ud83d\udd27 Load CLIPSeg Models", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/segmentation", "output_node": false}, "DrawText+": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": "Hello, World!"}], "font": [["ShareTechMono-Regular.ttf"]], "size": ["INT", {"default": 56, "min": 1, "max": 9999, "step": 1}], "color": ["STRING", {"multiline": false, "default": "#FFFFFF"}], "background_color": ["STRING", {"multiline": false, "default": "#00000000"}], "shadow_distance": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "shadow_blur": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "shadow_color": ["STRING", {"multiline": false, "default": "#000000"}], "horizontal_align": [["left", "center", "right"]], "vertical_align": [["top", "center", "bottom"]], "offset_x": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}], "offset_y": ["INT", {"default": 0, "min": -16384, "max": 16384, "step": 1}]}, "optional": {"img_composite": ["IMAGE"]}}, "input_order": {"required": ["text", "font", "size", "color", "background_color", "shadow_distance", "shadow_blur", "shadow_color", "horizontal_align", "vertical_align", "offset_x", "offset_y"], "optional": ["img_composite"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "DrawText+", "display_name": "\ud83d\udd27 Draw Text", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/text", "output_node": false}, "BatchCount+": {"input": {"required": {"batch": ["*", {}]}}, "input_order": {"required": ["batch"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "BatchCount+", "display_name": "\ud83d\udd27 Batch Count", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "ConsoleDebug+": {"input": {"required": {"value": ["*", {}]}, "optional": {"prefix": ["STRING", {"multiline": false, "default": "Value:"}]}}, "input_order": {"required": ["value"], "optional": ["prefix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "ConsoleDebug+", "display_name": "\ud83d\udd27 Console Debug", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": true}, "DebugTensorShape+": {"input": {"required": {"tensor": ["*", {}]}}, "input_order": {"required": ["tensor"]}, "output": [], "output_is_list": [], "output_name": [], "name": "DebugTensorShape+", "display_name": "\ud83d\udd27 Debug Tensor Shape", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": true}, "ModelCompile+": {"input": {"required": {"model": ["MODEL"], "fullgraph": ["BOOLEAN", {"default": false}], "dynamic": ["BOOLEAN", {"default": false}], "mode": [["default", "reduce-overhead", "max-autotune", "max-autotune-no-cudagraphs"]]}}, "input_order": {"required": ["model", "fullgraph", "dynamic", "mode"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ModelCompile+", "display_name": "\ud83d\udd27 Model Compile", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "RemoveLatentMask+": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "RemoveLatentMask+", "display_name": "\ud83d\udd27 Remove Latent Mask", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "SDXLEmptyLatentSizePicker+": {"input": {"required": {"resolution": [["704x1408 (0.5)", "704x1344 (0.52)", "768x1344 (0.57)", "768x1280 (0.6)", "832x1216 (0.68)", "832x1152 (0.72)", "896x1152 (0.78)", "896x1088 (0.82)", "960x1088 (0.88)", "960x1024 (0.94)", "1024x1024 (1.0)", "1024x960 (1.07)", "1088x960 (1.13)", "1088x896 (1.21)", "1152x896 (1.29)", "1152x832 (1.38)", "1216x832 (1.46)", "1280x768 (1.67)", "1344x768 (1.75)", "1344x704 (1.91)", "1408x704 (2.0)", "1472x704 (2.09)", "1536x640 (2.4)", "1600x640 (2.5)", "1664x576 (2.89)", "1728x576 (3.0)"], {"default": "1024x1024 (1.0)"}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "width_override": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "height_override": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["resolution", "batch_size", "width_override", "height_override"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "width", "height"], "name": "SDXLEmptyLatentSizePicker+", "display_name": "\ud83d\udd27 SDXL Empty Latent Size Picker", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "SimpleMath+": {"input": {"optional": {"a": ["INT,FLOAT", {"default": 0.0, "step": 0.1}], "b": ["INT,FLOAT", {"default": 0.0, "step": 0.1}]}, "required": {"value": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"optional": ["a", "b"], "required": ["value"]}, "output": ["INT", "FLOAT"], "output_is_list": [false, false], "output_name": ["INT", "FLOAT"], "name": "SimpleMath+", "display_name": "\ud83d\udd27 Simple Math", "description": "", "python_module": "custom_nodes.comfyui_essentials", "category": "essentials/utilities", "output_node": false}, "MaraScottAnyBus_v2": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {}, "optional": {"bus": ["BUS"], "* 01": ["*"], "* 02": ["*"], "* 03": ["*"], "* 04": ["*"], "* 05": ["*"], "* 06": ["*"], "* 07": ["*"], "* 08": ["*"], "* 09": ["*"], "* 10": ["*"], "* 11": ["*"], "* 12": ["*"], "* 13": ["*"], "* 14": ["*"], "* 15": ["*"], "* 16": ["*"], "* 17": ["*"], "* 18": ["*"], "* 19": ["*"], "* 20": ["*"], "* 21": ["*"], "* 22": ["*"], "* 23": ["*"], "* 24": ["*"]}}, "input_order": {"hidden": ["id"], "required": [], "optional": ["bus", "* 01", "* 02", "* 03", "* 04", "* 05", "* 06", "* 07", "* 08", "* 09", "* 10", "* 11", "* 12", "* 13", "* 14", "* 15", "* 16", "* 17", "* 18", "* 19", "* 20", "* 21", "* 22", "* 23", "* 24"]}, "output": ["BUS", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["bus", "* 01", "* 02", "* 03", "* 04", "* 05", "* 06", "* 07", "* 08", "* 09", "* 10", "* 11", "* 12", "* 13", "* 14", "* 15", "* 16", "* 17", "* 18", "* 19", "* 20", "* 21", "* 22", "* 23", "* 24"], "name": "MaraScottAnyBus_v2", "display_name": "\ud83d\udc30 AnyBus - UniversalBus - v2 /*", "description": "An \"ANY\" Bus Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottTiler_v1": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"image": ["IMAGE", {"label": "Image"}], "upscale_model": [["None", "4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"], {"label": "Upscale Model"}], "tile_size": ["INT", {"label": "Tile Size", "default": 512, "min": 320, "max": 4096, "step": 64}], "control_net_name": [["None", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "control-lora-canny-rank256.safetensors"], {"label": "ControlNet (Canny only)", "default": "None"}], "low_threshold": ["FLOAT", {"label": "Low Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"label": "High Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}]}, "optional": {}}, "input_order": {"hidden": ["id"], "required": ["image", "upscale_model", "tile_size", "control_net_name", "low_threshold", "high_threshold"], "optional": []}, "output": ["MC_BOATY_PIPE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["McBoayty Pipe", "image", "tiles", "tiles - canny"], "name": "MaraScottTiler_v1", "display_name": "\ud83d\udc30 Image to tiles - v1 /m", "description": "An \"Tiler\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": true}, "MaraScottUntiler_v1": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe": ["MC_BOATY_PIPE", {"label": "McBoaty Pipe"}], "output_upscale_method": [["area", "bicubic", "bilinear", "bislerp", "lanczos", "nearest-exact"], {"label": "Custom Output Upscale Method", "default": "bicubic"}], "output_size_ref": [["Output Image", "Input Image"], {"label": "Output Size Ref", "default": "Output Image"}], "output_size": ["FLOAT", {"label": "Custom Output Size", "default": 1.0, "min": 0.1, "max": 16.0, "step": 0.01, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"positive": ["STRING", {"label": "Positive (Prompt)", "multiline": true, "default": ""}], "negative": ["STRING", {"label": "Negative (Prompt)", "multiline": true, "default": ""}], "refresh_prompts": ["BOOLEAN", {"label": "Refresh prompts", "default": false, "label_on": "Refreshing...", "label_off": ""}], "tiles": ["IMAGE", {"label": "Image"}]}}, "input_order": {"hidden": ["id"], "required": ["pipe", "output_upscale_method", "output_size_ref", "output_size", "denoise"], "optional": ["positive", "negative", "refresh_prompts", "tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "MaraScottUntiler_v1", "display_name": "\ud83d\udc30 Tiles to Image - v1 /m", "description": "An \"Untiler\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": true}, "MaraScottMcBoaty_v6": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe": ["MC_BOATY_PIPE", {"label": "McBoaty Pipe"}], "model": ["MODEL", {"label": "Model"}], "clip": ["CLIP", {"label": "Clip"}], "vae": ["VAE", {"label": "VAE"}], "positive": ["STRING", {"label": "Positive (Prompt)", "multiline": true, "default": ""}], "negative": ["STRING", {"label": "Negative (Prompt)", "multiline": true, "default": ""}], "sigmas_type": [["BasicScheduler", "SDTurboScheduler", "AlignYourStepsScheduler"], {"label": "Sigmas Type"}], "model_type": [["SD1", "SDXL", "SD3", "FLUX1", "SVD"], {"label": "Model Type", "default": "SDXL"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "steps": ["INT", {"label": "Steps", "default": 10, "min": 1, "max": 10000}], "seed": ["INT", {"label": "Seed", "default": 42, "min": 0, "max": 18446744073709551615}], "cfg": ["FLOAT", {"label": "CFG", "default": 2.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.27, "min": 0.0, "max": 1.0, "step": 0.01}], "vae_encode": ["BOOLEAN", {"label": "VAE Encode type", "default": true, "label_on": "tiled", "label_off": "standard"}], "tile_size_vae": ["INT", {"label": "Tile Size (VAE)", "default": 512, "min": 256, "max": 4096, "step": 64}]}, "optional": {"strength": ["FLOAT", {"label": "Strength (ControlNet)", "default": 0.76, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"label": "Start % (ControlNet)", "default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"label": "End % (ControlNet)", "default": 0.76, "min": 0.0, "max": 1.0, "step": 0.001}], "tiles": ["IMAGE", {"label": "Tiles"}], "vlm_query": ["STRING", {"multiline": true, "default": "generate a single paragraph prompt of max 77 token to describe the image. do not comment."}], "ollama_url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:11434"}], "vlm_model": [[], {"default": "llama3.2-vision:latest"}], "ollama_keep_alive": ["INT", {"default": 5, "min": -1, "max": 60, "step": 1}], "color_match_method": [["none", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"label": "Color Match Method", "default": "none"}]}}, "input_order": {"hidden": ["id"], "required": ["pipe", "model", "clip", "vae", "positive", "negative", "sigmas_type", "model_type", "sampler_name", "basic_scheduler", "steps", "seed", "cfg", "denoise", "vae_encode", "tile_size_vae"], "optional": ["strength", "start_percent", "end_percent", "tiles", "vlm_query", "ollama_url", "vlm_model", "ollama_keep_alive", "color_match_method"]}, "output": ["MC_BOATY_PIPE", "MC_PROMPTY_PIPE", "IMAGE", "IMAGE", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["McBoaty Pipe", "McPrompty Pipe", "tiles", "tiles - cannies", "info"], "name": "MaraScottMcBoaty_v6", "display_name": "\ud83d\udc30 McBoaty - v6 /m", "description": "An \"UPSCALER REFINER\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v6", "output_node": true}, "MaraScottMcBoatyConfigurator_v6": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe": ["MC_BOATY_PIPE", {"label": "McBoaty Pipe"}], "model": ["MODEL", {"label": "Model"}], "clip": ["CLIP", {"label": "Clip"}], "vae": ["VAE", {"label": "VAE"}], "positive": ["STRING", {"label": "Positive (Prompt)", "multiline": true, "default": ""}], "negative": ["STRING", {"label": "Negative (Prompt)", "multiline": true, "default": ""}], "sigmas_type": [["BasicScheduler", "SDTurboScheduler", "AlignYourStepsScheduler"], {"label": "Sigmas Type"}], "model_type": [["SD1", "SDXL", "SD3", "FLUX1", "SVD"], {"label": "Model Type", "default": "SDXL"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "steps": ["INT", {"label": "Steps", "default": 10, "min": 1, "max": 10000}], "seed": ["INT", {"label": "Seed", "default": 42, "min": 0, "max": 18446744073709551615}], "cfg": ["FLOAT", {"label": "CFG", "default": 2.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.27, "min": 0.0, "max": 1.0, "step": 0.01}], "vae_encode": ["BOOLEAN", {"label": "VAE Encode type", "default": true, "label_on": "tiled", "label_off": "standard"}], "tile_size_vae": ["INT", {"label": "Tile Size (VAE)", "default": 512, "min": 256, "max": 4096, "step": 64}]}, "optional": {"strength": ["FLOAT", {"label": "Strength (ControlNet)", "default": 0.76, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"label": "Start % (ControlNet)", "default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"label": "End % (ControlNet)", "default": 0.76, "min": 0.0, "max": 1.0, "step": 0.001}], "tiles": ["IMAGE", {"label": "Tiles"}], "vlm_query": ["STRING", {"multiline": true, "default": "generate a single paragraph prompt of max 77 token to describe the image. do not comment."}], "ollama_url": ["STRING", {"multiline": false, "default": "http://127.0.0.1:11434"}], "vlm_model": [[], {"default": "llama3.2-vision:latest"}], "ollama_keep_alive": ["INT", {"default": 5, "min": -1, "max": 60, "step": 1}]}}, "input_order": {"hidden": ["id"], "required": ["pipe", "model", "clip", "vae", "positive", "negative", "sigmas_type", "model_type", "sampler_name", "basic_scheduler", "steps", "seed", "cfg", "denoise", "vae_encode", "tile_size_vae"], "optional": ["strength", "start_percent", "end_percent", "tiles", "vlm_query", "ollama_url", "vlm_model", "ollama_keep_alive"]}, "output": ["MC_BOATY_PIPE", "MC_PROMPTY_PIPE", "STRING"], "output_is_list": [false, false, false], "output_name": ["McBoaty Pipe", "McPrompty Pipe", "info"], "name": "MaraScottMcBoatyConfigurator_v6", "display_name": "\ud83d\udc30 McBoaty Configurator - v6 /m", "description": "An \"UPSCALER\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v6", "output_node": true}, "MaraScottMcBoatyTilePrompter_v6": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe_prompty": ["MC_PROMPTY_PIPE", {"label": "McPrompty Pipe"}], "tiles_to_process": ["STRING", {"label": "Tile to process", "default": ""}], "positive": ["STRING", {"label": "Positive (Prompt)", "multiline": true, "default": ""}], "negative": ["STRING", {"label": "Negative (Prompt)", "multiline": true, "default": ""}], "refresh_prompts": ["BOOLEAN", {"label": "Refresh prompts", "default": false, "label_on": "Refreshing...", "label_off": ""}], "cfg": ["FLOAT", {"label": "CFG", "default": 2.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.27, "min": 0.0, "max": 1.0, "step": 0.01}], "strength": ["FLOAT", {"label": "Strength (ControlNet)", "default": 0.76, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"label": "Start % (ControlNet)", "default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"label": "End % (ControlNet)", "default": 0.76, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"hidden": ["id"], "required": ["pipe_prompty", "tiles_to_process", "positive", "negative", "refresh_prompts", "cfg", "denoise", "strength", "start_percent", "end_percent"]}, "output": ["MC_PROMPTY_PIPE"], "output_is_list": [false], "output_name": ["McPrompty Pipe"], "name": "MaraScottMcBoatyTilePrompter_v6", "display_name": "\ud83d\udc30 McBoaty Tile Prompter - v6 /m", "description": "A \"Tile Prompt Editor\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v6", "output_node": true}, "MaraScottMcBoatyRefiner_v6": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe": ["MC_BOATY_PIPE", {"label": "McBoaty Pipe"}], "tiles_to_process": ["STRING", {"label": "Tile to process", "default": ""}]}, "optional": {"pipe_prompty": ["MC_PROMPTY_PIPE", {"label": "McPrompty Pipe"}], "color_match_method": [["none", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"label": "Color Match Method", "default": "none"}]}}, "input_order": {"hidden": ["id"], "required": ["pipe", "tiles_to_process"], "optional": ["pipe_prompty", "color_match_method"]}, "output": ["MC_BOATY_PIPE", "MC_PROMPTY_PIPE", "IMAGE", "IMAGE", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["McBoaty Pipe", "McPrompty Pipe", "tiles", "tiles - cannies", "info"], "name": "MaraScottMcBoatyRefiner_v6", "display_name": "\ud83d\udc30 McBoaty Refiner - v6 /m", "description": "A \"Refiner\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v6", "output_node": true}, "MaraScottMcBoatyUpscalerRefiner_v5": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"image": ["IMAGE", {"label": "Image"}], "model": ["MODEL", {"label": "Model"}], "clip": ["CLIP", {"label": "Clip"}], "vae": ["VAE", {"label": "VAE"}], "positive": ["CONDITIONING", {"label": "Positive"}], "negative": ["CONDITIONING", {"label": "Negative"}], "seed": ["INT", {"label": "Seed", "default": 4, "min": 0, "max": 18446744073709551615}], "upscale_model": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"], {"label": "Upscale Model"}], "output_upscale_method": [["area", "bicubic", "bilinear", "bislerp", "lanczos", "nearest-exact"], {"label": "Custom Output Upscale Method", "default": "bicubic"}], "tile_size": ["INT", {"label": "Tile Size", "default": 512, "min": 320, "max": 4096, "step": 64}], "feather_mask": ["INT", {"label": "Feather Mask", "default": 64, "min": 32, "max": 16384, "step": 32}], "vae_encode": ["BOOLEAN", {"label": "VAE Encode type", "default": true, "label_on": "tiled", "label_off": "standard"}], "tile_size_vae": ["INT", {"label": "Tile Size (VAE)", "default": 512, "min": 256, "max": 4096, "step": 64}], "color_match_method": [["none", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"label": "Color Match Method", "default": "none"}], "tile_prompting_active": ["BOOLEAN", {"label": "Tile prompting (with WD14 Tagger - experimental)", "default": false, "label_on": "Active", "label_off": "Inactive"}], "vision_llm_model": [["microsoft/Florence-2-large"], {"label": "Vision LLM Model", "default": "microsoft/Florence-2-large"}], "llm_model": [["llama3-70b-8192"], {"label": "LLM Model", "default": "llama3-70b-8192"}], "output_size_type": ["BOOLEAN", {"label": "Output Size Type", "default": true, "label_on": "Upscale size", "label_off": "Custom size"}], "output_size": ["FLOAT", {"label": "Custom Output Size", "default": 1.0, "min": 1.0, "max": 16.0, "step": 0.01, "round": 0.01}], "sigmas_type": [["BasicScheduler", "SDTurboScheduler", "AlignYourStepsScheduler"], {"label": "Sigmas Type"}], "model_type": [["SD1", "SDXL", "SD3", "FLUX1", "SVD"], {"label": "Model Type", "default": "SDXL"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "steps": ["INT", {"label": "Steps", "default": 10, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"label": "CFG", "default": 2.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.27, "min": 0.0, "max": 1.0, "step": 0.01}], "control_net_name": [["None", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "control-lora-canny-rank256.safetensors"], {"label": "ControlNet (Canny only)", "default": "None"}], "low_threshold": ["FLOAT", {"label": "Low Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"label": "High Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "strength": ["FLOAT", {"label": "Strength (ControlNet)", "default": 0.4, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"label": "Start % (ControlNet)", "default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"label": "End % (ControlNet)", "default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {}}, "input_order": {"hidden": ["id"], "required": ["image", "model", "clip", "vae", "positive", "negative", "seed", "upscale_model", "output_upscale_method", "tile_size", "feather_mask", "vae_encode", "tile_size_vae", "color_match_method", "tile_prompting_active", "vision_llm_model", "llm_model", "output_size_type", "output_size", "sigmas_type", "model_type", "sampler_name", "basic_scheduler", "steps", "cfg", "denoise", "control_net_name", "low_threshold", "high_threshold", "strength", "start_percent", "end_percent"], "optional": []}, "output": ["MC_BOATY_PIPE", "MC_PROMPTY_PIPE_IN", "IMAGE", "IMAGE", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["McBoaty Pipe", "McPrompty Pipe", "image", "image (orignal)", "tiles", "prompts", "info"], "name": "MaraScottMcBoatyUpscalerRefiner_v5", "display_name": "\ud83d\udc30 Large Refiner - McBoaty [1/3] - v5 /u", "description": "An \"UPSCALER REFINER\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v5", "output_node": true}, "MaraScottMcBoatyUpscaler_v5": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"image": ["IMAGE", {"label": "Image"}], "model": ["MODEL", {"label": "Model"}], "clip": ["CLIP", {"label": "Clip"}], "vae": ["VAE", {"label": "VAE"}], "positive": ["CONDITIONING", {"label": "Positive"}], "negative": ["CONDITIONING", {"label": "Negative"}], "seed": ["INT", {"label": "Seed", "default": 4, "min": 0, "max": 18446744073709551615}], "upscale_model": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"], {"label": "Upscale Model"}], "output_upscale_method": [["area", "bicubic", "bilinear", "bislerp", "lanczos", "nearest-exact"], {"label": "Custom Output Upscale Method", "default": "bicubic"}], "tile_size": ["INT", {"label": "Tile Size", "default": 512, "min": 320, "max": 4096, "step": 64}], "feather_mask": ["INT", {"label": "Feather Mask", "default": 64, "min": 32, "max": 16384, "step": 32}], "vae_encode": ["BOOLEAN", {"label": "VAE Encode type", "default": true, "label_on": "tiled", "label_off": "standard"}], "tile_size_vae": ["INT", {"label": "Tile Size (VAE)", "default": 512, "min": 256, "max": 4096, "step": 64}], "color_match_method": [["none", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"label": "Color Match Method", "default": "none"}], "tile_prompting_active": ["BOOLEAN", {"label": "Tile prompting (with WD14 Tagger - experimental)", "default": false, "label_on": "Active", "label_off": "Inactive"}], "vision_llm_model": [["microsoft/Florence-2-large"], {"label": "Vision LLM Model", "default": "microsoft/Florence-2-large"}], "llm_model": [["llama3-70b-8192"], {"label": "LLM Model", "default": "llama3-70b-8192"}]}, "optional": {}}, "input_order": {"hidden": ["id"], "required": ["image", "model", "clip", "vae", "positive", "negative", "seed", "upscale_model", "output_upscale_method", "tile_size", "feather_mask", "vae_encode", "tile_size_vae", "color_match_method", "tile_prompting_active", "vision_llm_model", "llm_model"], "optional": []}, "output": ["MC_BOATY_PIPE", "MC_PROMPTY_PIPE_IN", "STRING"], "output_is_list": [false, false, false], "output_name": ["McBoaty Pipe", "McPrompty Pipe", "info"], "name": "MaraScottMcBoatyUpscaler_v5", "display_name": "\ud83d\udc30 Upscaler - McBoaty [1/3] - v5 /u", "description": "An \"UPSCALER\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v5", "output_node": true}, "MaraScottMcBoatyTilePrompter_v5": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe": ["MC_PROMPTY_PIPE_IN", {"label": "McPrompty Pipe"}]}, "optional": {"requeue": ["INT", {"label": "requeue (automatic or manual)", "default": 0, "min": 0, "max": 99999999999, "step": 1}], "tile 00": ["STRING", {"multiline": true}], "tile 01": ["STRING", {"multiline": true}], "tile 02": ["STRING", {"multiline": true}], "tile 03": ["STRING", {"multiline": true}], "tile 04": ["STRING", {"multiline": true}], "tile 05": ["STRING", {"multiline": true}], "tile 06": ["STRING", {"multiline": true}], "tile 07": ["STRING", {"multiline": true}], "tile 08": ["STRING", {"multiline": true}], "tile 09": ["STRING", {"multiline": true}], "tile 10": ["STRING", {"multiline": true}], "tile 11": ["STRING", {"multiline": true}], "tile 12": ["STRING", {"multiline": true}], "tile 13": ["STRING", {"multiline": true}], "tile 14": ["STRING", {"multiline": true}], "tile 15": ["STRING", {"multiline": true}], "tile 16": ["STRING", {"multiline": true}], "tile 17": ["STRING", {"multiline": true}], "tile 18": ["STRING", {"multiline": true}], "tile 19": ["STRING", {"multiline": true}], "tile 20": ["STRING", {"multiline": true}], "tile 21": ["STRING", {"multiline": true}], "tile 22": ["STRING", {"multiline": true}], "tile 23": ["STRING", {"multiline": true}], "tile 24": ["STRING", {"multiline": true}], "tile 25": ["STRING", {"multiline": true}], "tile 26": ["STRING", {"multiline": true}], "tile 27": ["STRING", {"multiline": true}], "tile 28": ["STRING", {"multiline": true}], "tile 29": ["STRING", {"multiline": true}], "tile 30": ["STRING", {"multiline": true}], "tile 31": ["STRING", {"multiline": true}], "tile 32": ["STRING", {"multiline": true}], "tile 33": ["STRING", {"multiline": true}], "tile 34": ["STRING", {"multiline": true}], "tile 35": ["STRING", {"multiline": true}], "tile 36": ["STRING", {"multiline": true}], "tile 37": ["STRING", {"multiline": true}], "tile 38": ["STRING", {"multiline": true}], "tile 39": ["STRING", {"multiline": true}], "tile 40": ["STRING", {"multiline": true}], "tile 41": ["STRING", {"multiline": true}], "tile 42": ["STRING", {"multiline": true}], "tile 43": ["STRING", {"multiline": true}], "tile 44": ["STRING", {"multiline": true}], "tile 45": ["STRING", {"multiline": true}], "tile 46": ["STRING", {"multiline": true}], "tile 47": ["STRING", {"multiline": true}], "tile 48": ["STRING", {"multiline": true}], "tile 49": ["STRING", {"multiline": true}], "tile 50": ["STRING", {"multiline": true}], "tile 51": ["STRING", {"multiline": true}], "tile 52": ["STRING", {"multiline": true}], "tile 53": ["STRING", {"multiline": true}], "tile 54": ["STRING", {"multiline": true}], "tile 55": ["STRING", {"multiline": true}], "tile 56": ["STRING", {"multiline": true}], "tile 57": ["STRING", {"multiline": true}], "tile 58": ["STRING", {"multiline": true}], "tile 59": ["STRING", {"multiline": true}], "tile 60": ["STRING", {"multiline": true}], "tile 61": ["STRING", {"multiline": true}], "tile 62": ["STRING", {"multiline": true}], "tile 63": ["STRING", {"multiline": true}]}}, "input_order": {"hidden": ["id"], "required": ["pipe"], "optional": ["requeue", "tile 00", "tile 01", "tile 02", "tile 03", "tile 04", "tile 05", "tile 06", "tile 07", "tile 08", "tile 09", "tile 10", "tile 11", "tile 12", "tile 13", "tile 14", "tile 15", "tile 16", "tile 17", "tile 18", "tile 19", "tile 20", "tile 21", "tile 22", "tile 23", "tile 24", "tile 25", "tile 26", "tile 27", "tile 28", "tile 29", "tile 30", "tile 31", "tile 32", "tile 33", "tile 34", "tile 35", "tile 36", "tile 37", "tile 38", "tile 39", "tile 40", "tile 41", "tile 42", "tile 43", "tile 44", "tile 45", "tile 46", "tile 47", "tile 48", "tile 49", "tile 50", "tile 51", "tile 52", "tile 53", "tile 54", "tile 55", "tile 56", "tile 57", "tile 58", "tile 59", "tile 60", "tile 61", "tile 62", "tile 63"]}, "output": ["MC_PROMPTY_PIPE_OUT"], "output_is_list": [false], "output_name": ["McPrompty Pipe"], "name": "MaraScottMcBoatyTilePrompter_v5", "display_name": "\ud83d\udc30 Tile Prompter - McBoaty [2/3] - v5 /u", "description": "A \"Tile Prompt Editor\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v5", "output_node": true}, "MaraScottMcBoatyRefiner_v5": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"pipe": ["MC_BOATY_PIPE", {"label": "McBoaty Pipe"}], "tiles_to_process": ["STRING", {"label": "Tile to process", "default": ""}], "output_size_type": ["BOOLEAN", {"label": "Output Size Type", "default": true, "label_on": "Upscale size", "label_off": "Custom size"}], "output_size": ["FLOAT", {"label": "Custom Output Size", "default": 1.0, "min": 1.0, "max": 16.0, "step": 0.01, "round": 0.01}], "sigmas_type": [["BasicScheduler", "SDTurboScheduler", "AlignYourStepsScheduler"], {"label": "Sigmas Type"}], "model_type": [["SD1", "SDXL", "SD3", "FLUX1", "SVD"], {"label": "Model Type", "default": "SDXL"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "steps": ["INT", {"label": "Steps", "default": 10, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"label": "CFG", "default": 2.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.27, "min": 0.0, "max": 1.0, "step": 0.01}], "control_net_name": [["None", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "control-lora-canny-rank256.safetensors"], {"label": "ControlNet (Canny only)", "default": "None"}], "low_threshold": ["FLOAT", {"label": "Low Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"label": "High Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "strength": ["FLOAT", {"label": "Strength (ControlNet)", "default": 0.4, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"label": "Start % (ControlNet)", "default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"label": "End % (ControlNet)", "default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {"pipe_prompty": ["MC_PROMPTY_PIPE_OUT", {"label": "McPrompty Pipe"}]}}, "input_order": {"hidden": ["id"], "required": ["pipe", "tiles_to_process", "output_size_type", "output_size", "sigmas_type", "model_type", "sampler_name", "basic_scheduler", "steps", "cfg", "denoise", "control_net_name", "low_threshold", "high_threshold", "strength", "start_percent", "end_percent"], "optional": ["pipe_prompty"]}, "output": ["MC_BOATY_PIPE", "MC_PROMPTY_PIPE_IN", "IMAGE", "IMAGE", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false], "output_name": ["McBoaty Pipe", "McPrompty Pipe", "image", "image (original)", "tiles", "prompts", "info"], "name": "MaraScottMcBoatyRefiner_v5", "display_name": "\ud83d\udc30 Refiner - McBoaty [3/3] - v5 /u", "description": "A \"Refiner\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v5", "output_node": true}, "MaraScottMcBoatyUpscalerRefinerNode_v3": {"input": {"hidden": {"id": "UNIQUE_ID"}, "required": {"image": ["IMAGE", {"label": "Image"}], "model": ["MODEL", {"label": "Model"}], "clip": ["CLIP", {"label": "Clip"}], "vae": ["VAE", {"label": "VAE"}], "positive": ["CONDITIONING", {"label": "Positive"}], "negative": ["CONDITIONING", {"label": "Negative"}], "seed": ["INT", {"label": "Seed", "default": 4, "min": 0, "max": 18446744073709551615}], "upscale_model": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"], {"label": "Upscale Model"}], "output_size_type": ["BOOLEAN", {"label": "Output Size Type", "default": true, "label_on": "Upscale size", "label_off": "Custom size"}], "output_size": ["FLOAT", {"label": "Custom Output Size", "default": 1.0, "min": 1.0, "max": 16.0, "step": 0.01, "round": 0.01}], "output_upscale_method": [["area", "bicubic", "bilinear", "bislerp", "lanczos", "nearest-exact"], {"label": "Custom Output Upscale Method", "default": "bicubic"}], "steps": ["INT", {"label": "Steps", "default": 10, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"label": "CFG", "default": 2.5, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sigmas_type": [["BasicScheduler", "SDTurboScheduler", "AlignYourStepsScheduler"], {"label": "Sigmas Type"}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.27, "min": 0.0, "max": 1.0, "step": 0.01}], "ays_model_type": [["SD1", "SDXL", "SD3", "SVD"], {"label": "Model Type", "default": "SDXL"}], "tile_size": ["INT", {"label": "Tile Size", "default": 512, "min": 320, "max": 4096, "step": 64}], "feather_mask": ["INT", {"label": "Feather Mask", "default": 64, "min": 32, "max": 16384, "step": 32}], "vae_encode": ["BOOLEAN", {"label": "VAE Encode type", "default": true, "label_on": "tiled", "label_off": "standard"}], "tile_size_vae": ["INT", {"label": "Tile Size (VAE)", "default": 512, "min": 320, "max": 4096, "step": 64}], "color_match_method": [["none", "mkl", "hm", "reinhard", "mvgd", "hm-mvgd-hm", "hm-mkl-hm"], {"label": "Color Match Method", "default": "none"}], "tile_prompting_active": ["BOOLEAN", {"label": "Tile prompting (with WD14 Tagger - experimental)", "default": false, "label_on": "Active", "label_off": "Inactive"}], "vision_llm_model": [["microsoft/Florence-2-large"], {"label": "Vision LLM Model", "default": "microsoft/Florence-2-large"}], "llm_model": [["llama3-70b-8192"], {"label": "LLM Model", "default": "llama3-70b-8192"}], "control_net_name": [["None", "Flux/InstantX-FLUX1-Dev-Union/diffusion_pytorch_model.safetensors", "Flux/Shakker-Labs-ControlNet-Union-Pro/diffusion_pytorch_model.safetensors", "Flux/flux-canny-controlnet.safetensors", "Flux/flux-dev-controlnet-union.safetensors", "control-lora-canny-rank256.safetensors"], {"label": "ControlNet (Canny only)", "default": "None"}], "low_threshold": ["FLOAT", {"label": "Low Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "high_threshold": ["FLOAT", {"label": "High Threshold (Canny)", "default": 0.6, "min": 0.01, "max": 0.99, "step": 0.01}], "strength": ["FLOAT", {"label": "Strength (ControlNet)", "default": 0.4, "min": 0.0, "max": 10.0, "step": 0.01}], "start_percent": ["FLOAT", {"label": "Start % (ControlNet)", "default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}], "end_percent": ["FLOAT", {"label": "End % (ControlNet)", "default": 1.0, "min": 0.0, "max": 1.0, "step": 0.001}]}, "optional": {}}, "input_order": {"hidden": ["id"], "required": ["image", "model", "clip", "vae", "positive", "negative", "seed", "upscale_model", "output_size_type", "output_size", "output_upscale_method", "steps", "cfg", "sigmas_type", "sampler_name", "basic_scheduler", "denoise", "ays_model_type", "tile_size", "feather_mask", "vae_encode", "tile_size_vae", "color_match_method", "tile_prompting_active", "vision_llm_model", "llm_model", "control_net_name", "low_threshold", "high_threshold", "strength", "start_percent", "end_percent"], "optional": []}, "output": ["IMAGE", "IMAGE", "IMAGE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image", "tiles", "original_resized", "info"], "name": "MaraScottMcBoatyUpscalerRefinerNode_v3", "display_name": "\ud83d\udc30 Large Refiner - McBoaty - v3 /u", "description": "An \"UPSCALER\" Node", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Upscaling/v3", "output_node": false}, "MaraScottSetInpaintingByMask_v1": {"input": {"required": {"image": ["IMAGE", {"label": "Image"}], "painted_image": ["IMAGE", {"label": "Image (Painted)"}], "mask": ["MASK", {"label": "Mask (Painted)"}], "noise_image": ["IMAGE", {"label": "Image (Noise)"}], "inpaint_size": ["INT", {"label": "Inpaint Size", "default": 1024, "min": 512, "max": 1024, "step": 512}], "painted_mask_padding": ["INT", {"label": "Mask Padding (Painted - px)", "default": 50, "min": 0, "max": 100, "step": 1}], "tile_blend_mode": [["normal", "dissolve", "darken", "multiply", "color burn", "linear burn", "darker color", "lighten", "screen", "color dodge", "linear dodge(add)", "lighter color", "dodge", "overlay", "soft light", "hard light", "vivid light", "linear light", "pin light", "hard mix", "difference", "exclusion", "subtract", "divide", "hue", "saturation", "color", "luminosity", "grain extract", "grain merge"], {"label": "Blend Mode (tile)", "default": "normal"}], "noise_blend": ["INT", {"label": "Blend (Noise)", "default": 51, "min": 0, "max": 100, "step": 1}], "tile_opacity": ["INT", {"label": "Opacity (tile)", "default": 100, "min": 0, "max": 100, "step": 1}], "model": ["MODEL", {"label": "Model"}], "model_diffdiff": ["BOOLEAN", {"label": "Apply DiffDiff", "default": true}], "clip": ["CLIP", {"label": "Clip"}], "vae": ["VAE", {"label": "VAE"}], "text_pos_image": ["STRING", {"label": "Positive (text img)", "forceInput": true}], "text_pos_inpaint": ["STRING", {"label": "Positive (text painted)", "forceInput": true}], "text_neg_inpaint": ["STRING", {"label": "Negative (text img)", "forceInput": true}], "seed": ["INT", {"label": "Seed", "default": 4, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"label": "Steps", "default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"label": "CFG", "default": 8, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.59, "min": 0.0, "max": 1.0, "step": 0.01}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["image", "painted_image", "mask", "noise_image", "inpaint_size", "painted_mask_padding", "tile_blend_mode", "noise_blend", "tile_opacity", "model", "model_diffdiff", "clip", "vae", "text_pos_image", "text_pos_inpaint", "text_neg_inpaint", "seed", "steps", "cfg", "sampler_name", "basic_scheduler", "denoise"], "hidden": ["unique_id"]}, "output": ["MS_INPAINTINGTILEBYMASK_PIPE", "IMAGE", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["ms_pipe", "image_inpainted", "image_noised", "text_pos_image_inpainted", "text_neg_image_inpainted"], "name": "MaraScottSetInpaintingByMask_v1", "display_name": "\ud83d\udc30 Set Inpainting Tile by mask - McInpainty [1/2] - v1 /i", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Inpainting", "output_node": true}, "MaraScottPasteInpaintingByMask_v1": {"input": {"required": {"ms_pipe": ["MS_INPAINTINGTILEBYMASK_PIPE", {"label": "pipe (InpaintingTileByMask)"}], "image_tile": ["IMAGE", {"label": "Image (Tile)"}], "mask_tile": ["MASK", {"label": "Mask (Tile)"}], "text_pos_inpaint": ["STRING", {"label": "Positive (text) optional", "multiline": true}], "text_neg_inpaint": ["STRING", {"label": "Negative (text) optional", "multiline": true}], "subject_opacity": ["INT", {"label": "Opacity (Mask)", "default": 95, "min": 0, "max": 100, "step": 1}], "seed": ["INT", {"label": "Seed", "default": 4, "min": 0, "max": 18446744073709551615}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"label": "Sampler Name"}], "basic_scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"label": "Basic Scheduler"}], "sampler_refiner_tile": ["BOOLEAN", {"label": "Refiner (Tile)", "default": true}], "steps": ["INT", {"label": "Steps", "default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"label": "CFG", "default": 8, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise": ["FLOAT", {"label": "Denoise", "default": 0.51, "min": 0.0, "max": 1.0, "step": 0.01}], "denoise_refine": ["FLOAT", {"label": "Denoise (Refine)", "default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "sampler_refiner_image": ["BOOLEAN", {"label": "Refiner (Image Final)", "default": true}], "steps_refiner": ["INT", {"label": "Steps", "default": 10, "min": 1, "max": 10000}], "cfg_refiner": ["FLOAT", {"label": "CFG", "default": 8, "min": 0.0, "max": 100.0, "step": 0.1, "round": 0.01}], "denoise_refiner": ["FLOAT", {"label": "Denoise", "default": 0.35, "min": 0.0, "max": 1.0, "step": 0.01}]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["ms_pipe", "image_tile", "mask_tile", "text_pos_inpaint", "text_neg_inpaint", "subject_opacity", "seed", "sampler_name", "basic_scheduler", "sampler_refiner_tile", "steps", "cfg", "denoise", "denoise_refine", "sampler_refiner_image", "steps_refiner", "cfg_refiner", "denoise_refiner"], "hidden": ["unique_id"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE", "IMAGE", "MASK", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false, false, false, false, false, false, false], "output_name": ["output_image_refined", "output_image", "image_inpainted", "image", "tile_output", "tile_inpainted", "tile_mask", "tile_source", "text_pos_image_inpainted", "text_neg_image_inpainted"], "name": "MaraScottPasteInpaintingByMask_v1", "display_name": "\ud83d\udc30 Paste Inpainting Tile by mask - McInpainty [2/2] - v1 /i", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Inpainting", "output_node": true}, "MaraScottForLoopOpen_v1": {"input": {"required": {"remaining": ["INT", {"default": 1, "min": 0, "max": 100000, "step": 1}]}, "optional": {"initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"]}, "hidden": {"initial_value0": ["*"]}}, "input_order": {"required": ["remaining"], "optional": ["initial_value1", "initial_value2", "initial_value3", "initial_value4"], "hidden": ["initial_value0"]}, "output": ["FLOW_CONTROL", "INT", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false], "output_name": ["flow_control", "remaining", "value1", "value2", "value3", "value4"], "name": "MaraScottForLoopOpen_v1", "display_name": "\ud83d\udc30 For Loop Open - v1 /l", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Loop/Flow", "output_node": false}, "MaraScottForLoopClose_v1": {"input": {"required": {"flow_control": ["FLOW_CONTROL", {"rawLink": true}]}, "optional": {"initial_value1": ["*", {"rawLink": true}], "initial_value2": ["*", {"rawLink": true}], "initial_value3": ["*", {"rawLink": true}], "initial_value4": ["*", {"rawLink": true}]}}, "input_order": {"required": ["flow_control"], "optional": ["initial_value1", "initial_value2", "initial_value3", "initial_value4"]}, "output": ["*", "*", "*", "*"], "output_is_list": [false, false, false, false], "output_name": ["value1", "value2", "value3", "value4"], "name": "MaraScottForLoopClose_v1", "display_name": "\ud83d\udc30 For Loop Close - v1 /l", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Loop/Flow", "output_node": false}, "MaraScottForLoopWhileOpen_v1": {"input": {"required": {"condition": ["BOOLEAN", {"default": true}]}, "optional": {"initial_value0": ["*"], "initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"]}}, "input_order": {"required": ["condition"], "optional": ["initial_value0", "initial_value1", "initial_value2", "initial_value3", "initial_value4"]}, "output": ["FLOW_CONTROL", "*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false, false], "output_name": ["FLOW_CONTROL", "value0", "value1", "value2", "value3", "value4"], "name": "MaraScottForLoopWhileOpen_v1", "display_name": "\ud83d\udc30 For Loop While Open - v1 /l", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Loop/Flow", "output_node": false}, "MaraScottForLoopWhileClose_v1": {"input": {"required": {"flow_control": ["FLOW_CONTROL", {"rawLink": true}], "condition": ["BOOLEAN", {"forceInput": true}]}, "optional": {"initial_value0": ["*"], "initial_value1": ["*"], "initial_value2": ["*"], "initial_value3": ["*"], "initial_value4": ["*"]}, "hidden": {"dynprompt": "DYNPROMPT", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["flow_control", "condition"], "optional": ["initial_value0", "initial_value1", "initial_value2", "initial_value3", "initial_value4"], "hidden": ["dynprompt", "unique_id"]}, "output": ["*", "*", "*", "*", "*"], "output_is_list": [false, false, false, false, false], "output_name": ["value0", "value1", "value2", "value3", "value4"], "name": "MaraScottForLoopWhileClose_v1", "display_name": "\ud83d\udc30 For Loop While Close - v1 /l", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Loop/Flow", "output_node": false}, "MaraScottForLoopIntMathOperation_v1": {"input": {"required": {"a": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}], "b": ["INT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 1}], "operation": [["add", "subtract", "multiply", "divide", "modulo", "power"]]}}, "input_order": {"required": ["a", "b", "operation"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "MaraScottForLoopIntMathOperation_v1", "display_name": "\ud83d\udc30 For Loop IntMathOperation - v1 /l", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Loop/Logic", "output_node": false}, "MaraScottForLoopToBoolNode_v1": {"input": {"required": {"value": ["*"]}, "optional": {"invert": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["value"], "optional": ["invert"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "MaraScottForLoopToBoolNode_v1", "display_name": "\ud83d\udc30 For Loop ToBoolNode - v1 /l", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Loop/Logic", "output_node": false}, "MaraScottIsEmpty_v1": {"input": {"required": {"any": ["*"]}, "optional": {}}, "input_order": {"required": ["any"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "MaraScottIsEmpty_v1", "display_name": "\ud83d\udc30 Is Empty ? - v1 /c", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottIsNone_v1": {"input": {"required": {"any": ["*"]}, "optional": {}}, "input_order": {"required": ["any"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "MaraScottIsNone_v1", "display_name": "\ud83d\udc30 Is None ? - v1 /c", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottIsEmptyOrNone_v1": {"input": {"required": {"any": ["*"]}, "optional": {}}, "input_order": {"required": ["any"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "MaraScottIsEmptyOrNone_v1", "display_name": "\ud83d\udc30 Is Empty Or None ? - v1 /c", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottIsEqual_v1": {"input": {"required": {"any_1": ["*"], "any_2": ["*"]}, "optional": {}}, "input_order": {"required": ["any_1", "any_2"], "optional": []}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["boolean"], "name": "MaraScottIsEqual_v1", "display_name": "\ud83d\udc30 Is Equal ? - v1 /c", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottPromptFromImage_v1": {"input": {"required": {"image": ["IMAGE", {"label": "image"}], "vision_llm_model": [["microsoft/Florence-2-large"], {"label": "Vision LLM Model", "default": "microsoft/Florence-2-large"}], "llm_model": [["llama3-70b-8192"], {"label": "LLM Model", "default": "llama3-70b-8192"}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["image", "vision_llm_model", "llm_model"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["Prompt"], "name": "MaraScottPromptFromImage_v1", "display_name": "\ud83d\udc30 Prompt From Image - McPrompty - v1 /p", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Prompt", "output_node": true}, "MaraScottTextConcatenate_v1": {"input": {"hidden": {"id": "UNIQUE_ID", "string 01": ["STRING", {"forceInput": true}], "string 02": ["STRING", {"forceInput": true}], "string 03": ["STRING", {"forceInput": true}], "string 04": ["STRING", {"forceInput": true}], "string 05": ["STRING", {"forceInput": true}], "string 06": ["STRING", {"forceInput": true}], "string 07": ["STRING", {"forceInput": true}], "string 08": ["STRING", {"forceInput": true}], "string 09": ["STRING", {"forceInput": true}], "string 10": ["STRING", {"forceInput": true}], "string 11": ["STRING", {"forceInput": true}], "string 12": ["STRING", {"forceInput": true}], "string 13": ["STRING", {"forceInput": true}], "string 14": ["STRING", {"forceInput": true}], "string 15": ["STRING", {"forceInput": true}], "string 16": ["STRING", {"forceInput": true}], "string 17": ["STRING", {"forceInput": true}], "string 18": ["STRING", {"forceInput": true}], "string 19": ["STRING", {"forceInput": true}], "string 20": ["STRING", {"forceInput": true}], "string 21": ["STRING", {"forceInput": true}], "string 22": ["STRING", {"forceInput": true}], "string 23": ["STRING", {"forceInput": true}], "string 24": ["STRING", {"forceInput": true}]}, "required": {"delimiter": ["STRING", {"default": ", ", "label": "Delimiter"}]}, "optional": {}}, "input_order": {"hidden": ["id", "string 01", "string 02", "string 03", "string 04", "string 05", "string 06", "string 07", "string 08", "string 09", "string 10", "string 11", "string 12", "string 13", "string 14", "string 15", "string 16", "string 17", "string 18", "string 19", "string 20", "string 21", "string 22", "string 23", "string 24"], "required": ["delimiter"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "MaraScottTextConcatenate_v1", "display_name": "\ud83d\udc30 Text Concatenate - v1 /t", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Prompt", "output_node": false}, "MaraScottTextConversion_StringToList_v1": {"input": {"required": {"text": ["STRING", {"multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING", "STRING", "INT"], "output_is_list": [true, false, false], "output_name": ["list", "text (original)", "lines count"], "name": "MaraScottTextConversion_StringToList_v1", "display_name": "\ud83d\udc30 Multiline to List - v1 /t", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Prompt", "output_node": false}, "MaraScottImageToGradient_v1": {"input": {"required": {"image": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["image"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["gradient"], "name": "MaraScottImageToGradient_v1", "display_name": "\ud83d\udc30 Image To Gradient - v1 /i", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottDisplayInfo_v2": {"input": {"required": {"any": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["any"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["*"], "output_is_list": [false], "output_name": ["any"], "name": "MaraScottDisplayInfo_v2", "display_name": "\ud83d\udc30 Display Any - v2 /i", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": true}, "MaraScottGetModelBlocks_v1": {"input": {"required": {"model": ["MODEL"], "type": [["Names", "Variations"], {"default": "Names"}], "variation": ["FLOAT", {"label": "Variation (max)", "default": 1.4, "min": 0.1, "max": 14.0, "step": 0.1}]}, "optional": {}}, "input_order": {"required": ["model", "type", "variation"], "optional": []}, "output": ["STRING", "STRING", "STRING", "INT"], "output_is_list": [false, false, false, false], "output_name": ["BLOCKS", "NAMES", "BLOCKS WEIGTHS", "COUNT"], "name": "MaraScottGetModelBlocks_v1", "display_name": "\ud83d\udc30 Get Model Blocks - v1 /m", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/Utils", "output_node": false}, "MaraScottLoadImage_v1": {"input": {"required": {"image": [["148354449be94dcd2b8993c901253cdf.jpg", "2a40229891e585339c49d5f87bfe80d4.jpg", "44914-Ford-car-muscle_cars-4283821840.jpg", "58a00e372c9b2abc148517e663ee0a2f.jpg", "635b41fcb0d9d5bd450d10eb93dc1ca8-829068172.jpg", "7.png", "755690-3113977175.jpg", "A-stunning-living-room-featuring-key-elements-of-Brutalist-interior-design-780026718.webp", "FLUX_Redux_00004_.png", "FLUX_Redux_00005_.png", "FLUX_Redux_00008_.png", "FLUX_Redux_00009_.png", "FLUX_Redux_00011_.png", "FLUX_Redux_00012_.png", "FLUX_Redux_00013_.png", "Image_00015_.png", "Image_00018_.png", "Image_00019_.png", "Image_00021_.png", "Image_00033_.png", "Image_00058_.png", "MCW_ARTILLERY_GALLERY_04.webp", "MCW_TROOPER_WEB_GALLERY_01_2c721bd6-129b-40ac-9dbf-9c776b998521.webp", "MCW_TROOPER_WEB_GALLERY_02_06cf5825-3b98-4640-b549-5166754ac3c1.webp", "MCW_TROOPER_WEB_GALLERY_03.webp", "MCW_TROOPER_WEB_GALLERY_04.webp", "Otherrides_assets/turnarounds/anime-front.png", "Otherrides_assets/turnarounds/anime-rear.png", "Otherrides_assets/turnarounds/anime-side.png", "Screenshot from 2025-04-01 21-35-49.png", "Screenshot from 2025-04-16 20-35-52.png", "Zero-123__00017_.png", "a08715fd9dc4b7b812574dd4f5ae7fe7.jpg", "ahkibarar.jpg", "anime-front.png", "anime-rear.png", "anime-side.png", "asba-drums-2lnnbIHP8MM-unsplash.jpg", "bigstock-Portrait-of-a-smiling-woman-wi-86892704-2260387209.jpg", "blonde-hair-blue-eyes-girl-side-part-long-straight-style-2719680466.jpg", "camaroSS.png", "canny_process_00024_.png", "canny_process_00031_.png", "canny_res_00019_.png", "canny_res_00030_.png", "canny_res_00035_.png", "canny_res_00052_.png", "canny_res_00053_.png", "canny_res_00059_.png", "canny_res_00060_.png", "canny_res_00061_.png", "canny_res_00063_.png", "canny_res_00064_.png", "canny_res_00067_.png", "canny_res_00069_.png", "cycles__00001_.png", "cycles__00004_.png", "cycles__00005_.png", "example.png", "image1.png", "image8-2x2.png", "image8.png", "l-intro-1695760417-2303340266.jpg", "madmax_firecar4-2484916880.jpg", "man5-3395367803.jpg", "motobike.jpg", "tokyotreat_akihabara-adventure-thumbnail-3092584056.png", "typical_humanoid_mech.png", "what-is-man-1000x600-1940545957.jpg", "wp11174249-935136148.jpg"], {"image_upload": true}]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [null, null, null], "output_name": ["IMAGE", "MASK", "File Name"], "name": "MaraScottLoadImage_v1", "display_name": "\ud83d\udc30 Load Image - v1 /i", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/image", "output_node": true}, "MaraScott_Kijai_TokenCounter_v1": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "clip": ["CLIP"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["text", "clip"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["COUNT", "COUNT_AS_STRING"], "name": "MaraScott_Kijai_TokenCounter_v1", "display_name": "\ud83d\udc30 TokenCounter /v (from kijai)", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/vendor", "output_node": true}, "MaraScott_Kijai_DownloadAndLoadFlorence2Model_v1": {"input": {"required": {"model": [["microsoft/Florence-2-base", "microsoft/Florence-2-base-ft", "microsoft/Florence-2-large", "microsoft/Florence-2-large-ft", "HuggingFaceM4/Florence-2-DocVQA", "thwri/CogFlorence-2.1-Large", "thwri/CogFlorence-2.2-Large", "gokaygokay/Florence-2-SD3-Captioner", "gokaygokay/Florence-2-Flux-Large", "MiaoshouAI/Florence-2-base-PromptGen-v1.5", "MiaoshouAI/Florence-2-large-PromptGen-v1.5", "MiaoshouAI/Florence-2-base-PromptGen-v2.0", "MiaoshouAI/Florence-2-large-PromptGen-v2.0"], {"default": "microsoft/Florence-2-base"}], "precision": [["fp16", "bf16", "fp32"], {"default": "fp16"}], "attention": [["flash_attention_2", "sdpa", "eager"], {"default": "sdpa"}]}, "optional": {"lora": ["PEFTLORA"]}}, "input_order": {"required": ["model", "precision", "attention"], "optional": ["lora"]}, "output": ["FL2MODEL"], "output_is_list": [false], "output_name": ["florence2_model"], "name": "MaraScott_Kijai_DownloadAndLoadFlorence2Model_v1", "display_name": "\ud83d\udc30 DownloadAndLoadFlorence2Model /v (from Kijai)", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/vendor", "output_node": false}, "MaraScott_Kijai_Florence2Run_v1": {"input": {"required": {"image": ["IMAGE"], "florence2_model": ["FL2MODEL"], "text_input": ["STRING", {"default": "", "multiline": true}], "task": [["region_caption", "dense_region_caption", "region_proposal", "caption", "detailed_caption", "more_detailed_caption", "caption_to_phrase_grounding", "referring_expression_segmentation", "ocr", "ocr_with_region", "docvqa", "prompt_gen_tags", "prompt_gen_mixed_caption", "prompt_gen_analyze", "prompt_gen_mixed_caption_plus"]], "fill_mask": ["BOOLEAN", {"default": true}]}, "optional": {"keep_model_loaded": ["BOOLEAN", {"default": false}], "max_new_tokens": ["INT", {"default": 1024, "min": 1, "max": 4096}], "num_beams": ["INT", {"default": 3, "min": 1, "max": 64}], "do_sample": ["BOOLEAN", {"default": true}], "output_mask_select": ["STRING", {"default": ""}], "seed": ["INT", {"default": 1, "min": 1, "max": 18446744073709551615}]}}, "input_order": {"required": ["image", "florence2_model", "text_input", "task", "fill_mask"], "optional": ["keep_model_loaded", "max_new_tokens", "num_beams", "do_sample", "output_mask_select", "seed"]}, "output": ["IMAGE", "MASK", "STRING", "JSON"], "output_is_list": [false, false, false, false], "output_name": ["image", "mask", "caption", "data"], "name": "MaraScott_Kijai_Florence2Run_v1", "display_name": "\ud83d\udc30 Florence2Run /v (from Kijai)", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/vendor", "output_node": false}, "MaraScott_laksjdjf_Hires_v1": {"input": {"required": {"model": ["MODEL"], "ds_depth_1": ["INT", {"default": 3, "min": -1, "max": 12, "step": 1, "display": "number"}], "ds_depth_2": ["INT", {"default": 3, "min": -1, "max": 12, "step": 1, "display": "number"}], "ds_timestep_1": ["INT", {"default": 900, "min": 0, "max": 1000, "step": 1, "display": "number"}], "ds_timestep_2": ["INT", {"default": 650, "min": 0, "max": 1000, "step": 0.1}], "resize_scale_1": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 16.0, "step": 0.1, "display": "number"}], "resize_scale_2": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 16.0, "step": 0.1}]}}, "input_order": {"required": ["model", "ds_depth_1", "ds_depth_2", "ds_timestep_1", "ds_timestep_2", "resize_scale_1", "resize_scale_2"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "MaraScott_laksjdjf_Hires_v1", "display_name": "\ud83d\udc30 Apply Kohya's HiresFix - sd1.5 only /v (from laksjdjf)", "description": "", "python_module": "custom_nodes.comfyui_marascott_nodes", "category": "\ud83d\udc30 MaraScott/vendor", "output_node": false}, "Searge_LLM_Node": {"input": {"required": {"text": ["STRING", {"multiline": true, "dynamicPrompts": true, "default": ""}], "random_seed": ["INT", {"default": 1234567890, "min": 0, "max": 18446744073709551615}], "model": [["Mistral-7B-Instruct-v0.3.Q4_K_M.gguf"]], "max_tokens": ["INT", {"default": 4096, "min": 1, "max": 8192}], "apply_instructions": ["BOOLEAN", {"default": true}], "instructions": ["STRING", {"multiline": false, "default": "Generate a prompt from \"{prompt}\""}]}, "optional": {"adv_options_config": ["SRGADVOPTIONSCONFIG"]}}, "input_order": {"required": ["text", "random_seed", "model", "max_tokens", "apply_instructions", "instructions"], "optional": ["adv_options_config"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["generated", "original"], "name": "Searge_LLM_Node", "display_name": "Searge LLM Node", "description": "", "python_module": "custom_nodes.ComfyUI_Searge_LLM", "category": "Searge/LLM", "output_node": false}, "Searge_AdvOptionsNode": {"input": {"required": {"temperature": ["FLOAT", {"default": 1.0, "min": 0.1, "step": 0.05}], "top_p": ["FLOAT", {"default": 0.9, "min": 0.1, "step": 0.05}], "top_k": ["INT", {"default": 50, "min": 0}], "repetition_penalty": ["FLOAT", {"default": 1.2, "min": 0.1, "step": 0.05}]}}, "input_order": {"required": ["temperature", "top_p", "top_k", "repetition_penalty"]}, "output": ["SRGADVOPTIONSCONFIG"], "output_is_list": [false], "output_name": ["adv_options_config"], "name": "Searge_AdvOptionsNode", "display_name": "Searge Advanced Options Node", "description": "", "python_module": "custom_nodes.ComfyUI_Searge_LLM", "category": "Searge/LLM", "output_node": false}, "Searge_Output_Node": {"input": {"required": {"text": ["*", {}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["text"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Searge_Output_Node", "display_name": "Searge Output Node", "description": "", "python_module": "custom_nodes.ComfyUI_Searge_LLM", "category": "Searge/LLM", "output_node": true}, "ShowText": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["text"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["STRING"], "name": "ShowText", "display_name": "Show Text", "description": "", "python_module": "custom_nodes.fairy-root_ComfyUI-Show-Text", "category": "utils", "output_node": true}, "ImageResize": {"input": {"required": {"pixels": ["IMAGE"], "action": [["resize only", "crop to ratio", "pad to ratio"]], "smaller_side": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 8}], "larger_side": ["INT", {"default": 0, "min": 0, "max": 8192, "step": 8}], "scale_factor": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.1}], "resize_mode": [["reduce size only", "increase size only", "any"]], "side_ratio": ["STRING", {"default": "4:3"}], "crop_pad_position": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "pad_feathering": ["INT", {"default": 20, "min": 0, "max": 8192, "step": 1}]}, "optional": {"mask_optional": ["MASK"]}}, "input_order": {"required": ["pixels", "action", "smaller_side", "larger_side", "scale_factor", "resize_mode", "side_ratio", "crop_pad_position", "pad_feathering"], "optional": ["mask_optional"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "ImageResize", "display_name": "Image Resize", "description": "", "python_module": "custom_nodes.image-resize-comfyui", "category": "image", "output_node": false}, "FluxLoader": {"input": {"required": {"model_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt", "IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors"]], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2"]], "clip_name1": [[".use_ckpt_clip", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name2_opt": [[".none", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "vae_name": [[".use_ckpt_vae", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors"]], "clip_vision_name": [[".none", "CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "clip-vit-large-patch14.safetensors", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_vision_g.safetensors", "sigclip_vision_patch14_384.safetensors"]], "style_model_name": [[".none", "flux1-redux-dev.safetensors"]]}}, "input_order": {"required": ["model_name", "weight_dtype", "clip_name1", "clip_name2_opt", "vae_name", "clip_vision_name", "style_model_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "STYLE_MODEL"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "clip", "vae", "clip_vision", "style_model"], "name": "FluxLoader", "display_name": "FluxLoader", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/loaders", "output_node": false}, "SD35Loader": {"input": {"required": {"model_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt", "IC/iclight_sd15_fbc.safetensors", "IC/iclight_sd15_fbc_unet_ldm.safetensors", "IC/iclight_sd15_fc.safetensors", "IC/iclight_sd15_fc_unet_ldm.safetensors", "blackforest/flux1-depth-dev.safetensors", "blackforest/flux1-dev.sft", "blackforest/flux1-fill-dev.safetensors", "blackforest/flux1-schnell.sft", "blackforest/realflux10b_10bTransformer.safetensors", "flux-depth-controlnet-v3.safetensors", "flux1-dev2pro.safetensors", "fluxmania_V.safetensors", "fluxmania_V_bf16.safetensors"]], "weight_dtype": [["default", "fp8_e4m3fn", "fp8_e4m3fn_fast", "fp8_e5m2"]], "clip_name1": [[".use_ckpt_clip", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name2_opt": [[".none", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "clip_name3_opt": [[".none", "Flux/ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "Flux/clip_l.safetensors", "Flux/t5xxl_fp16.safetensors", "Flux/t5xxl_fp8_e4m3fn.safetensors", "clip_l.safetensors"]], "vae_name": [[".use_ckpt_vae", "ae.sft", "sdxl_vae.safetensors", "vae-ft-mse-840000-ema-pruned.safetensors", "taesd", "taesdxl", "taesd3", "taef1"]]}}, "input_order": {"required": ["model_name", "weight_dtype", "clip_name1", "clip_name2_opt", "clip_name3_opt", "vae_name"]}, "output": ["MODEL", "CLIP", "VAE"], "output_is_list": [false, false, false], "output_name": ["model", "clip", "vae"], "name": "SD35Loader", "display_name": "SD35Loader", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/loaders", "output_node": false}, "TextBox1": {"input": {"required": {"text1": ["STRING", {"default": "", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["text1"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text1"], "name": "TextBox1", "display_name": "TextBox1", "description": "Multiline textbox.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextBox2": {"input": {"required": {"text1": ["STRING", {"default": "", "multiline": true}], "text2": ["STRING", {"default": "", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["text1", "text2"], "optional": []}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["text1", "text2"], "name": "TextBox2", "display_name": "TextBox2", "description": "Multiline textbox.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextBox3": {"input": {"required": {"text1": ["STRING", {"default": "", "multiline": true}], "text2": ["STRING", {"default": "", "multiline": true}], "text3": ["STRING", {"default": "", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["text1", "text2", "text3"], "optional": []}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["text1", "text2", "text3"], "name": "TextBox3", "display_name": "TextBox3", "description": "Multiline textbox.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextConcatenate": {"input": {"required": {}, "optional": {"text_1": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "text_2": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}]}}, "input_order": {"required": [], "optional": ["text_1", "text_2", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "TextConcatenate", "display_name": "TextConcatenate", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextBoxConcatenate": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}]}, "optional": {"text_external": ["STRING", {"multiline": false, "default": "", "forceInput": true}], "separator": ["STRING", {"multiline": false, "default": ""}], "mode": [["append_external_input", "prepend_external_input"]]}}, "input_order": {"required": ["text"], "optional": ["text_external", "separator", "mode"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "TextBoxConcatenate", "display_name": "TextBoxConcatenate", "description": "Multiline textbox with concatenate functionality.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextLoadFile": {"input": {"required": {"text_file": [[], {"text_upload": true}]}}, "input_order": {"required": ["text_file"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["text"], "name": "TextLoadFile", "display_name": "TextLoadFile", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextShuffle": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": " ", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {}}, "input_order": {"required": ["text", "separator", "seed"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["shuffled_text"], "name": "TextShuffle", "display_name": "TextShuffle", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextShuffleAndTruncate": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": " ", "multiline": false}], "truncate_words_to": ["INT", {"default": 77, "min": 1, "max": 10000}], "truncate_tokens_to": ["INT", {"default": 77, "min": 1, "max": 10000}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"clip": ["CLIP"]}}, "input_order": {"required": ["text", "separator", "truncate_words_to", "truncate_tokens_to", "seed"], "optional": ["clip"]}, "output": ["STRING", "STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["shuffled_text", "text_words", "text_clip_l", "text_clip_g", "text_t5"], "name": "TextShuffleAndTruncate", "display_name": "TextShuffleAndTruncate", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "TextTruncateTokens": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "truncate_words_to": ["INT", {"default": 30, "min": 0, "max": 10000}], "truncate_clip_l_to": ["INT", {"default": 77, "min": 0, "max": 10000}], "truncate_clip_g_to": ["INT", {"default": 77, "min": 0, "max": 10000}], "truncate_t5_to": ["INT", {"default": 77, "min": 0, "max": 10000}]}, "optional": {"clip": ["CLIP"]}}, "input_order": {"required": ["text", "truncate_words_to", "truncate_clip_l_to", "truncate_clip_g_to", "truncate_t5_to"], "optional": ["clip"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["text_words", "text_clip_l", "text_clip_g", "text_t5"], "name": "TextTruncateTokens", "display_name": "TextTruncateTokens", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/text", "output_node": false}, "SeedGenerator": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {}}, "input_order": {"required": ["seed"], "optional": []}, "output": ["INT", "INT"], "output_is_list": [false, false], "output_name": ["seed", "seed+1"], "name": "SeedGenerator", "display_name": "SeedGenerator", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/utilities", "output_node": false}, "ClownRegionalConditioning": {"input": {"required": {"weight": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "region_bleed": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "region_bleed_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "constant"}], "start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step": ["INT", {"default": -1, "min": -1, "max": 10000}], "mask_type": [["gradient", "gradient_masked", "gradient_unmasked", "boolean", "boolean_masked", "boolean_unmasked"], {"default": "gradient"}], "narcissism_area": [["masked", "unmasked", "off"], {"default": "masked"}], "narcissism_start_step": ["INT", {"default": 0, "min": -1, "max": 10000}], "narcissism_end_step": ["INT", {"default": 5, "min": -1, "max": 10000}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"positive_masked": ["CONDITIONING"], "positive_unmasked": ["CONDITIONING"], "mask": ["MASK"], "weights": ["SIGMAS"], "region_bleeds": ["SIGMAS"]}}, "input_order": {"required": ["weight", "region_bleed", "region_bleed_start_step", "weight_scheduler", "start_step", "end_step", "mask_type", "narcissism_area", "narcissism_start_step", "narcissism_end_step", "invert_mask"], "optional": ["positive_masked", "positive_unmasked", "mask", "weights", "region_bleeds"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["positive"], "name": "ClownRegionalConditioning", "display_name": "ClownRegionalConditioning", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ClownRegionalConditioning3": {"input": {"required": {"weight": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "region_bleed": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "region_bleed_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "constant"}], "start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step": ["INT", {"default": 100, "min": -1, "max": 10000}], "mask_type": [["gradient", "gradient_masked", "gradient_unmasked", "boolean", "boolean_masked", "boolean_unmasked"], {"default": "gradient"}], "narcissism_area": [["A", "B", "AB", "unmasked", "off"], {"default": "masked"}], "narcissism_start_step": ["INT", {"default": 0, "min": -1, "max": 10000}], "narcissism_end_step": ["INT", {"default": 5, "min": -1, "max": 10000}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"positive_A": ["CONDITIONING"], "positive_B": ["CONDITIONING"], "positive_unmasked": ["CONDITIONING"], "mask_A": ["MASK"], "mask_B": ["MASK"], "weights": ["SIGMAS"], "region_bleeds": ["SIGMAS"]}}, "input_order": {"required": ["weight", "region_bleed", "region_bleed_start_step", "weight_scheduler", "start_step", "end_step", "mask_type", "narcissism_area", "narcissism_start_step", "narcissism_end_step", "invert_mask"], "optional": ["positive_A", "positive_B", "positive_unmasked", "mask_A", "mask_B", "weights", "region_bleeds"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["positive"], "name": "ClownRegionalConditioning3", "display_name": "ClownRegionalConditioning3", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ClownRegionalConditioningAdvanced": {"input": {"required": {"weight": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "region_bleed": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "mask_type": [["gradient", "boolean"], {"default": "boolean"}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"positive_masked": ["CONDITIONING"], "positive_unmasked": ["CONDITIONING"], "mask": ["MASK"], "weights": ["SIGMAS"], "region_bleeds": ["SIGMAS"]}}, "input_order": {"required": ["weight", "region_bleed", "mask_type", "invert_mask"], "optional": ["positive_masked", "positive_unmasked", "mask", "weights", "region_bleeds"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["positive"], "name": "ClownRegionalConditioningAdvanced", "display_name": "ClownRegionalConditioningAdvanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "CLIPTextEncodeFluxUnguided": {"input": {"required": {"clip": ["CLIP"], "clip_l": ["STRING", {"multiline": true, "dynamicPrompts": true}], "t5xxl": ["STRING", {"multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["clip", "clip_l", "t5xxl"]}, "output": ["CONDITIONING", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["conditioning", "clip_l_end", "t5xxl_end"], "name": "CLIPTextEncodeFluxUnguided", "display_name": "CLIPTextEncodeFluxUnguided", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningOrthoCollin": {"input": {"required": {"conditioning_0": ["CONDITIONING"], "conditioning_1": ["CONDITIONING"], "t5_strength": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "clip_strength": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}]}}, "input_order": {"required": ["conditioning_0", "conditioning_1", "t5_strength", "clip_strength"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningOrthoCollin", "display_name": "ConditioningOrthoCollin", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningAverageScheduler": {"input": {"required": {"conditioning_0": ["CONDITIONING"], "conditioning_1": ["CONDITIONING"], "ratio": ["SIGMAS"]}}, "input_order": {"required": ["conditioning_0", "conditioning_1", "ratio"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningAverageScheduler", "display_name": "ConditioningAverageScheduler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningMultiply": {"input": {"required": {"conditioning": ["CONDITIONING"], "multiplier": ["FLOAT", {"default": 1.0, "min": -1000000000.0, "max": 1000000000.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning", "multiplier"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningMultiply", "display_name": "ConditioningMultiply", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningAdd": {"input": {"required": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"], "multiplier": ["FLOAT", {"default": 1.0, "min": -1000000000.0, "max": 1000000000.0, "step": 0.01}]}}, "input_order": {"required": ["conditioning_1", "conditioning_2", "multiplier"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningAdd", "display_name": "ConditioningAdd", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "Conditioning Recast FP64": {"input": {"required": {"cond_0": ["CONDITIONING"]}, "optional": {"cond_1": ["CONDITIONING"]}}, "input_order": {"required": ["cond_0"], "optional": ["cond_1"]}, "output": ["CONDITIONING", "CONDITIONING"], "output_is_list": [false, false], "output_name": ["cond_0_recast", "cond_1_recast"], "name": "Conditioning Recast FP64", "display_name": "Conditioning Recast FP64", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/precision", "output_node": false}, "StableCascade_StageB_Conditioning64": {"input": {"required": {"conditioning": ["CONDITIONING"], "stage_c": ["LATENT"]}}, "input_order": {"required": ["conditioning", "stage_c"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "StableCascade_StageB_Conditioning64", "display_name": "StableCascade_StageB_Conditioning64", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningZeroAndTruncate": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningZeroAndTruncate", "display_name": "ConditioningZeroAndTruncate", "description": "Use for negative conditioning with SD3.5. ConditioningZeroOut does not truncate the embedding,                     which results in severe degradation of image quality with SD3.5 when the token limit is exceeded.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningTruncate": {"input": {"required": {"conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningTruncate", "display_name": "ConditioningTruncate", "description": "Use for positive conditioning with SD3.5. Tokens beyond 77 result in degradation of image quality.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "RectifiedFlow_RegionalPrompt": {"input": {"required": {"cond": ["CONDITIONING"]}, "optional": {"cond_regional": ["CONDITIONING_REGIONAL"], "mask": ["MASK"]}}, "input_order": {"required": ["cond"], "optional": ["cond_regional", "mask"]}, "output": ["CONDITIONING_REGIONAL", "MASK"], "output_is_list": [false, false], "output_name": ["cond_regional", "mask_inv"], "name": "RectifiedFlow_RegionalPrompt", "display_name": "RectifiedFlow_RegionalPrompt", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "RectifiedFlow_RegionalConditioning": {"input": {"required": {"mask_weight": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "self_attn_floor": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "start_percent": ["FLOAT", {"default": 0, "min": 0.0, "max": 1.0, "step": 0.01}], "end_percent": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "mask_type": [["gradient", "boolean"], {"default": "gradient"}]}, "optional": {"conditioning": ["CONDITIONING"], "conditioning_regional": ["CONDITIONING_REGIONAL"], "mask_weights": ["SIGMAS"], "self_attn_floors": ["SIGMAS"]}}, "input_order": {"required": ["mask_weight", "self_attn_floor", "start_percent", "end_percent", "mask_type"], "optional": ["conditioning", "conditioning_regional", "mask_weights", "self_attn_floors"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "RectifiedFlow_RegionalConditioning", "display_name": "RectifiedFlow_RegionalConditioning", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningToBase64": {"input": {"required": {"conditioning": ["CONDITIONING"]}, "hidden": {"unique_id": "UNIQUE_ID", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["conditioning"], "hidden": ["unique_id", "extra_pnginfo"]}, "output": ["STRING"], "output_is_list": [true], "output_name": ["string"], "name": "ConditioningToBase64", "display_name": "ConditioningToBase64", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/utilities", "output_node": true}, "Base64ToConditioning": {"input": {"required": {"data": ["STRING", {"default": ""}]}}, "input_order": {"required": ["data"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "Base64ToConditioning", "display_name": "Base64ToConditioning", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/utilities", "output_node": false}, "ClownScheduler": {"input": {"required": {"pad_start_value": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "start_value": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "end_value": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "pad_end_value": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "scheduler_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "scheduler_end_step": ["INT", {"default": 30, "min": -1, "max": 10000}], "total_steps": ["INT", {"default": 100, "min": -1, "max": 10000}], "flip_schedule": ["BOOLEAN", {"default": false}]}, "optional": {"model": ["MODEL"]}}, "input_order": {"required": ["pad_start_value", "start_value", "end_value", "pad_end_value", "scheduler", "scheduler_start_step", "scheduler_end_step", "total_steps", "flip_schedule"], "optional": ["model"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas"], "name": "ClownScheduler", "display_name": "ClownScheduler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "ConditioningBatch4": {"input": {"required": {"conditioning_0": ["CONDITIONING"]}, "optional": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"], "conditioning_3": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_0"], "optional": ["conditioning_1", "conditioning_2", "conditioning_3"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningBatch4", "display_name": "ConditioningBatch4", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "ConditioningBatch8": {"input": {"required": {"conditioning_0": ["CONDITIONING"]}, "optional": {"conditioning_1": ["CONDITIONING"], "conditioning_2": ["CONDITIONING"], "conditioning_3": ["CONDITIONING"], "conditioning_4": ["CONDITIONING"], "conditioning_5": ["CONDITIONING"], "conditioning_6": ["CONDITIONING"], "conditioning_7": ["CONDITIONING"]}}, "input_order": {"required": ["conditioning_0"], "optional": ["conditioning_1", "conditioning_2", "conditioning_3", "conditioning_4", "conditioning_5", "conditioning_6", "conditioning_7"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["conditioning"], "name": "ConditioningBatch8", "display_name": "ConditioningBatch8", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/conditioning", "output_node": false}, "Set Precision": {"input": {"required": {"latent_image": ["LATENT"], "precision": [["16", "32", "64"]], "set_default": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["latent_image", "precision", "set_default"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["passthrough"], "name": "Set Precision", "display_name": "Set Precision", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/precision", "output_node": false}, "Set Precision Universal": {"input": {"required": {"precision": [["bf16", "fp16", "fp32", "fp64", "passthrough"], {"default": "fp32"}], "set_default": ["BOOLEAN", {"default": false}]}, "optional": {"cond_pos": ["CONDITIONING"], "cond_neg": ["CONDITIONING"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["precision", "set_default"], "optional": ["cond_pos", "cond_neg", "sigmas", "latent_image"]}, "output": ["CONDITIONING", "CONDITIONING", "SIGMAS", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["cond_pos", "cond_neg", "sigmas", "latent_image"], "name": "Set Precision Universal", "display_name": "Set Precision Universal", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/precision", "output_node": false}, "Set Precision Advanced": {"input": {"required": {"latent_image": ["LATENT"], "global_precision": [["64", "32", "16"]], "shark_precision": [["64", "32", "16"]]}}, "input_order": {"required": ["latent_image", "global_precision", "shark_precision"]}, "output": ["LATENT", "LATENT", "LATENT", "LATENT", "LATENT"], "output_is_list": [false, false, false, false, false], "output_name": ["passthrough", "latent_cast_to_global", "latent_16", "latent_32", "latent_64"], "name": "Set Precision Advanced", "display_name": "Set Precision Advanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/precision", "output_node": false}, "LatentNoised": {"input": {"required": {"add_noise": ["BOOLEAN", {"default": true}], "noise_is_latent": ["BOOLEAN", {"default": false}], "noise_type": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"]], "alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.1, "round": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2.0, "round": 0.01}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "latent_image": ["LATENT"], "noise_strength": ["FLOAT", {"default": 1.0, "min": -20.0, "max": 20.0, "step": 0.01, "round": 0.01}], "normalize": [["false", "true"], {"default": "false"}]}, "optional": {"latent_noise": ["LATENT"], "mask": ["MASK"]}}, "input_order": {"required": ["add_noise", "noise_is_latent", "noise_type", "alpha", "k", "noise_seed", "latent_image", "noise_strength", "normalize"], "optional": ["latent_noise", "mask"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent_noised"], "name": "LatentNoised", "display_name": "LatentNoised", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "LatentNoiseList": {"input": {"required": {"latent": ["LATENT"], "alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "k_flip": ["BOOLEAN", {"default": false}], "steps": ["INT", {"default": 0, "min": -10000, "max": 10000}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"alphas": ["SIGMAS"], "ks": ["SIGMAS"]}}, "input_order": {"required": ["latent", "alpha", "k_flip", "steps", "seed"], "optional": ["alphas", "ks"]}, "output": ["LATENT"], "output_is_list": [true], "output_name": ["latent_list"], "name": "LatentNoiseList", "display_name": "LatentNoiseList", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "AdvancedNoise": {"input": {"required": {"alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.1, "round": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2.0, "round": 0.01}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "noise_type": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"]]}}, "input_order": {"required": ["alpha", "k", "noise_seed", "noise_type"]}, "output": ["NOISE"], "output_is_list": [false], "output_name": ["NOISE"], "name": "AdvancedNoise", "display_name": "AdvancedNoise", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "LatentNoiseBatch_perlin": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "width": ["INT", {"default": 1024, "min": 8, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 8, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 256}], "detail_level": ["FLOAT", {"default": 0, "min": -1, "max": 1.0, "step": 0.1}]}, "optional": {"details": ["SIGMAS"]}}, "input_order": {"required": ["seed", "width", "height", "batch_size", "detail_level"], "optional": ["details"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "LatentNoiseBatch_perlin", "display_name": "LatentNoiseBatch_perlin", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "LatentNoiseBatch_fractal": {"input": {"required": {"latent": ["LATENT"], "alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "k_flip": ["BOOLEAN", {"default": false}], "steps": ["INT", {"default": 0, "min": -10000, "max": 10000}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"alphas": ["SIGMAS"], "ks": ["SIGMAS"], "steps_": ["SIGMAS"]}}, "input_order": {"required": ["latent", "alpha", "k_flip", "steps", "seed"], "optional": ["alphas", "ks", "steps_"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentNoiseBatch_fractal", "display_name": "LatentNoiseBatch_fractal", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "LatentNoiseBatch_gaussian": {"input": {"required": {"latent": ["LATENT"], "mean": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "std": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "steps": ["INT", {"default": 0, "min": -10000, "max": 10000}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"means": ["SIGMAS"], "stds": ["SIGMAS"], "steps_": ["SIGMAS"]}}, "input_order": {"required": ["latent", "mean", "std", "steps", "seed"], "optional": ["means", "stds", "steps_"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentNoiseBatch_gaussian", "display_name": "LatentNoiseBatch_gaussian", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "LatentNoiseBatch_gaussian_channels": {"input": {"required": {"latent": ["LATENT"], "mean": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "mean_luminosity": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "mean_cyan_red": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "mean_lime_purple": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "mean_pattern_structure": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "std": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "steps": ["INT", {"default": 0, "min": -10000, "max": 10000}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"means": ["SIGMAS"], "mean_luminositys": ["SIGMAS"], "mean_cyan_reds": ["SIGMAS"], "mean_lime_purples": ["SIGMAS"], "mean_pattern_structures": ["SIGMAS"], "stds": ["SIGMAS"]}}, "input_order": {"required": ["latent", "mean", "mean_luminosity", "mean_cyan_red", "mean_lime_purple", "mean_pattern_structure", "std", "steps", "seed"], "optional": ["means", "mean_luminositys", "mean_cyan_reds", "mean_lime_purples", "mean_pattern_structures", "stds"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "LatentNoiseBatch_gaussian_channels", "display_name": "LatentNoiseBatch_gaussian_channels", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/noise", "output_node": false}, "LatentBatch_channels": {"input": {"required": {"latent": ["LATENT"], "mode": [["offset", "multiply", "power"]], "luminosity": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "cyan_red": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "lime_purple": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "pattern_structure": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}]}, "optional": {"luminositys": ["SIGMAS"], "cyan_reds": ["SIGMAS"], "lime_purples": ["SIGMAS"], "pattern_structures": ["SIGMAS"]}}, "input_order": {"required": ["latent", "mode", "luminosity", "cyan_red", "lime_purple", "pattern_structure"], "optional": ["luminositys", "cyan_reds", "lime_purples", "pattern_structures"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatch_channels", "display_name": "LatentBatch_channels", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "LatentBatch_channels_16": {"input": {"required": {"latent": ["LATENT"], "mode": [["offset", "multiply", "power"]], "chan_1": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_2": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_3": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_4": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_5": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_6": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_7": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_8": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_9": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_10": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_11": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_12": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_13": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_14": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_15": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "chan_16": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01}]}, "optional": {"chan_1s": ["SIGMAS"], "chan_2s": ["SIGMAS"], "chan_3s": ["SIGMAS"], "chan_4s": ["SIGMAS"], "chan_5s": ["SIGMAS"], "chan_6s": ["SIGMAS"], "chan_7s": ["SIGMAS"], "chan_8s": ["SIGMAS"], "chan_9s": ["SIGMAS"], "chan_10s": ["SIGMAS"], "chan_11s": ["SIGMAS"], "chan_12s": ["SIGMAS"], "chan_13s": ["SIGMAS"], "chan_14s": ["SIGMAS"], "chan_15s": ["SIGMAS"], "chan_16s": ["SIGMAS"]}}, "input_order": {"required": ["latent", "mode", "chan_1", "chan_2", "chan_3", "chan_4", "chan_5", "chan_6", "chan_7", "chan_8", "chan_9", "chan_10", "chan_11", "chan_12", "chan_13", "chan_14", "chan_15", "chan_16"], "optional": ["chan_1s", "chan_2s", "chan_3s", "chan_4s", "chan_5s", "chan_6s", "chan_7s", "chan_8s", "chan_9s", "chan_10s", "chan_11s", "chan_12s", "chan_13s", "chan_14s", "chan_15s", "chan_16s"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentBatch_channels_16", "display_name": "LatentBatch_channels_16", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Get Channel Means": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["channel_means"], "name": "Latent Get Channel Means", "display_name": "Latent Get Channel Means", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Match Channelwise": {"input": {"required": {"model": ["MODEL"], "latent_target": ["LATENT"], "latent_source": ["LATENT"]}, "optional": {"mask_target": ["MASK"], "mask_source": ["MASK"], "extra_options": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["model", "latent_target", "latent_source"], "optional": ["mask_target", "mask_source", "extra_options"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent_matched"], "name": "Latent Match Channelwise", "display_name": "Latent Match Channelwise", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent to RawX": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent_raw_x"], "name": "Latent to RawX", "display_name": "Latent to RawX", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Clear State Info": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Clear State Info", "display_name": "Latent Clear State Info", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Replace State Info": {"input": {"required": {"latent": ["LATENT"], "clear_raw_x": ["BOOLEAN", {"default": false}], "replace_end_step": ["INT", {"default": 0, "min": -10000, "max": 10000}]}}, "input_order": {"required": ["latent", "clear_raw_x", "replace_end_step"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Replace State Info", "display_name": "Latent Replace State Info", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Display State Info": {"input": {"required": {"latent": ["LATENT"]}}, "input_order": {"required": ["latent"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Latent Display State Info", "display_name": "Latent Display State Info", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": true}, "Latent Transfer State Info": {"input": {"required": {"latent_to": ["LATENT"], "latent_from": ["LATENT"]}}, "input_order": {"required": ["latent_to", "latent_from"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Transfer State Info", "display_name": "Latent Transfer State Info", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent to Cuda": {"input": {"required": {"latent": ["LATENT"], "to_cuda": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["latent", "to_cuda"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["passthrough"], "name": "Latent to Cuda", "display_name": "Latent to Cuda", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Batcher": {"input": {"required": {"latent": ["LATENT"], "batch_size": ["INT", {"default": 0, "min": -10000, "max": 10000}]}}, "input_order": {"required": ["latent", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent_batch"], "name": "Latent Batcher", "display_name": "Latent Batcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Normalize Channels": {"input": {"required": {"latent": ["LATENT"], "mode": [["full", "channels"]], "operation": [["normalize", "center", "standardize"]]}}, "input_order": {"required": ["latent", "mode", "operation"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["passthrough"], "name": "Latent Normalize Channels", "display_name": "Latent Normalize Channels", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Latent Channels From To": {"input": {"required": {"latent_to": ["LATENT"], "latent_from": ["LATENT"]}}, "input_order": {"required": ["latent_to", "latent_from"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Channels From To", "display_name": "Latent Channels From To", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "LatentPhaseMagnitude": {"input": {"required": {"latent_0_batch": ["LATENT"], "latent_1_batch": ["LATENT"], "phase_mix_power": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_mix_power": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_luminosity": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_cyan_red": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_lime_purple": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_pattern_structure": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_luminosity": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_cyan_red": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_lime_purple": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_pattern_structure": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "latent_0_normal": ["BOOLEAN", {"default": true}], "latent_1_normal": ["BOOLEAN", {"default": true}], "latent_out_normal": ["BOOLEAN", {"default": true}], "latent_0_stdize": ["BOOLEAN", {"default": true}], "latent_1_stdize": ["BOOLEAN", {"default": true}], "latent_out_stdize": ["BOOLEAN", {"default": true}], "latent_0_meancenter": ["BOOLEAN", {"default": true}], "latent_1_meancenter": ["BOOLEAN", {"default": true}], "latent_out_meancenter": ["BOOLEAN", {"default": true}]}, "optional": {"phase_mix_powers": ["SIGMAS"], "magnitude_mix_powers": ["SIGMAS"], "phase_luminositys": ["SIGMAS"], "phase_cyan_reds": ["SIGMAS"], "phase_lime_purples": ["SIGMAS"], "phase_pattern_structures": ["SIGMAS"], "magnitude_luminositys": ["SIGMAS"], "magnitude_cyan_reds": ["SIGMAS"], "magnitude_lime_purples": ["SIGMAS"], "magnitude_pattern_structures": ["SIGMAS"]}}, "input_order": {"required": ["latent_0_batch", "latent_1_batch", "phase_mix_power", "magnitude_mix_power", "phase_luminosity", "phase_cyan_red", "phase_lime_purple", "phase_pattern_structure", "magnitude_luminosity", "magnitude_cyan_red", "magnitude_lime_purple", "magnitude_pattern_structure", "latent_0_normal", "latent_1_normal", "latent_out_normal", "latent_0_stdize", "latent_1_stdize", "latent_out_stdize", "latent_0_meancenter", "latent_1_meancenter", "latent_out_meancenter"], "optional": ["phase_mix_powers", "magnitude_mix_powers", "phase_luminositys", "phase_cyan_reds", "phase_lime_purples", "phase_pattern_structures", "magnitude_luminositys", "magnitude_cyan_reds", "magnitude_lime_purples", "magnitude_pattern_structures"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "LatentPhaseMagnitude", "display_name": "LatentPhaseMagnitude", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "LatentPhaseMagnitudeMultiply": {"input": {"required": {"latent_0_batch": ["LATENT"], "phase_luminosity": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_cyan_red": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_lime_purple": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_pattern_structure": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_luminosity": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_cyan_red": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_lime_purple": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_pattern_structure": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "latent_0_normal": ["BOOLEAN", {"default": false}], "latent_out_normal": ["BOOLEAN", {"default": false}]}, "optional": {"phase_luminositys": ["SIGMAS"], "phase_cyan_reds": ["SIGMAS"], "phase_lime_purples": ["SIGMAS"], "phase_pattern_structures": ["SIGMAS"], "magnitude_luminositys": ["SIGMAS"], "magnitude_cyan_reds": ["SIGMAS"], "magnitude_lime_purples": ["SIGMAS"], "magnitude_pattern_structures": ["SIGMAS"]}}, "input_order": {"required": ["latent_0_batch", "phase_luminosity", "phase_cyan_red", "phase_lime_purple", "phase_pattern_structure", "magnitude_luminosity", "magnitude_cyan_red", "magnitude_lime_purple", "magnitude_pattern_structure", "latent_0_normal", "latent_out_normal"], "optional": ["phase_luminositys", "phase_cyan_reds", "phase_lime_purples", "phase_pattern_structures", "magnitude_luminositys", "magnitude_cyan_reds", "magnitude_lime_purples", "magnitude_pattern_structures"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentPhaseMagnitudeMultiply", "display_name": "LatentPhaseMagnitudeMultiply", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "LatentPhaseMagnitudeOffset": {"input": {"required": {"latent_0_batch": ["LATENT"], "phase_luminosity": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_cyan_red": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_lime_purple": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_pattern_structure": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_luminosity": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_cyan_red": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_lime_purple": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_pattern_structure": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "latent_0_normal": ["BOOLEAN", {"default": false}], "latent_out_normal": ["BOOLEAN", {"default": false}]}, "optional": {"phase_luminositys": ["SIGMAS"], "phase_cyan_reds": ["SIGMAS"], "phase_lime_purples": ["SIGMAS"], "phase_pattern_structures": ["SIGMAS"], "magnitude_luminositys": ["SIGMAS"], "magnitude_cyan_reds": ["SIGMAS"], "magnitude_lime_purples": ["SIGMAS"], "magnitude_pattern_structures": ["SIGMAS"]}}, "input_order": {"required": ["latent_0_batch", "phase_luminosity", "phase_cyan_red", "phase_lime_purple", "phase_pattern_structure", "magnitude_luminosity", "magnitude_cyan_red", "magnitude_lime_purple", "magnitude_pattern_structure", "latent_0_normal", "latent_out_normal"], "optional": ["phase_luminositys", "phase_cyan_reds", "phase_lime_purples", "phase_pattern_structures", "magnitude_luminositys", "magnitude_cyan_reds", "magnitude_lime_purples", "magnitude_pattern_structures"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentPhaseMagnitudeOffset", "display_name": "LatentPhaseMagnitudeOffset", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "LatentPhaseMagnitudePower": {"input": {"required": {"latent_0_batch": ["LATENT"], "phase_luminosity": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_cyan_red": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_lime_purple": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "phase_pattern_structure": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_luminosity": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_cyan_red": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_lime_purple": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "magnitude_pattern_structure": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.001}], "latent_0_normal": ["BOOLEAN", {"default": false}], "latent_out_normal": ["BOOLEAN", {"default": false}]}, "optional": {"phase_luminositys": ["SIGMAS"], "phase_cyan_reds": ["SIGMAS"], "phase_lime_purples": ["SIGMAS"], "phase_pattern_structures": ["SIGMAS"], "magnitude_luminositys": ["SIGMAS"], "magnitude_cyan_reds": ["SIGMAS"], "magnitude_lime_purples": ["SIGMAS"], "magnitude_pattern_structures": ["SIGMAS"]}}, "input_order": {"required": ["latent_0_batch", "phase_luminosity", "phase_cyan_red", "phase_lime_purple", "phase_pattern_structure", "magnitude_luminosity", "magnitude_cyan_red", "magnitude_lime_purple", "magnitude_pattern_structure", "latent_0_normal", "latent_out_normal"], "optional": ["phase_luminositys", "phase_cyan_reds", "phase_lime_purples", "phase_pattern_structures", "magnitude_luminositys", "magnitude_cyan_reds", "magnitude_lime_purples", "magnitude_pattern_structures"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "LatentPhaseMagnitudePower", "display_name": "LatentPhaseMagnitudePower", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "MaskToggle": {"input": {"required": {"enable": ["BOOLEAN", {"default": true}], "mask": ["MASK"]}}, "input_order": {"required": ["enable", "mask"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["mask"], "name": "MaskToggle", "display_name": "MaskToggle", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/masks", "output_node": false}, "Frames Masks Uninterpolate": {"input": {"required": {"raw_temporal_mask": ["MASK"], "frame_chunk_size": ["INT", {"default": 4, "min": 1, "max": 10000, "step": 1}]}, "optional": {}}, "input_order": {"required": ["raw_temporal_mask", "frame_chunk_size"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["temporal_mask"], "name": "Frames Masks Uninterpolate", "display_name": "Frames Masks Uninterpolate", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/masks", "output_node": false}, "Frames Masks ZeroOut": {"input": {"required": {"temporal_mask": ["MASK"], "zero_out_frame": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}]}, "optional": {}}, "input_order": {"required": ["temporal_mask", "zero_out_frame"], "optional": []}, "output": ["MASK"], "output_is_list": [false], "output_name": ["temporal_mask"], "name": "Frames Masks ZeroOut", "display_name": "Frames Masks ZeroOut", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/masks", "output_node": false}, "Frames Latent ReverseOrder": {"input": {"required": {"frames": ["LATENT"]}, "optional": {}}, "input_order": {"required": ["frames"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["frames_reversed"], "name": "Frames Latent ReverseOrder", "display_name": "Frames Latent ReverseOrder", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/masks", "output_node": false}, "EmptyLatentImage64": {"input": {"required": {"width": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "height": ["INT", {"default": 1024, "min": 16, "max": 16384, "step": 8}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}]}}, "input_order": {"required": ["width", "height", "batch_size"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "EmptyLatentImage64", "display_name": "EmptyLatentImage64", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "EmptyLatentImageCustom": {"input": {"required": {"width": ["INT", {"default": 24, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 24, "min": 1, "max": 16384, "step": 1}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 4096}], "channels": [["4", "16"], {"default": "4"}], "mode": [["sdxl", "cascade_b", "cascade_c", "exact"], {"default": "default"}], "compression": ["INT", {"default": 42, "min": 4, "max": 128, "step": 1}], "precision": [["fp16", "fp32", "fp64"], {"default": "fp32"}]}}, "input_order": {"required": ["width", "height", "batch_size", "channels", "mode", "compression", "precision"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "EmptyLatentImageCustom", "display_name": "EmptyLatentImageCustom", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "StableCascade_StageC_VAEEncode_Exact": {"input": {"required": {"image": ["IMAGE"], "vae": ["VAE"], "width": ["INT", {"default": 24, "min": 1, "max": 1024, "step": 1}], "height": ["INT", {"default": 24, "min": 1, "max": 1024, "step": 1}]}}, "input_order": {"required": ["image", "vae", "width", "height"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["stage_c"], "name": "StableCascade_StageC_VAEEncode_Exact", "display_name": "StableCascade_StageC_VAEEncode_Exact", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/vae", "output_node": false}, "PrepForUnsampling": {"input": {"required": {"resize_to_input": [["false", "image_1", "image_2", "mask", "latent"], {"default": "false"}], "width": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "mask_channel": [["red", "green", "blue", "alpha"]], "invert_mask": ["BOOLEAN", {"default": false}], "latent_type": [["4_channels", "16_channels"], {"default": "16_channels"}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "mask": ["IMAGE"], "latent": ["LATENT"], "vae": ["VAE"]}}, "input_order": {"required": ["resize_to_input", "width", "height", "mask_channel", "invert_mask", "latent_type"], "optional": ["image_1", "image_2", "mask", "latent", "vae"]}, "output": ["LATENT", "LATENT", "MASK", "LATENT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["latent_1", "latent_2", "mask", "empty_latent", "width", "height"], "name": "PrepForUnsampling", "display_name": "PrepForUnsampling", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/vae", "output_node": false}, "VAEEncodeAdvanced": {"input": {"required": {"resize_to_input": [["false", "image_1", "image_2", "mask", "latent"], {"default": "false"}], "width": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "height": ["INT", {"default": 1024, "min": 0, "max": 16384, "step": 1}], "mask_channel": [["red", "green", "blue", "alpha"]], "invert_mask": ["BOOLEAN", {"default": false}], "latent_type": [["4_channels", "16_channels"], {"default": "16_channels"}]}, "optional": {"image_1": ["IMAGE"], "image_2": ["IMAGE"], "mask": ["IMAGE"], "latent": ["LATENT"], "vae": ["VAE"]}}, "input_order": {"required": ["resize_to_input", "width", "height", "mask_channel", "invert_mask", "latent_type"], "optional": ["image_1", "image_2", "mask", "latent", "vae"]}, "output": ["LATENT", "LATENT", "MASK", "LATENT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["latent_1", "latent_2", "mask", "empty_latent", "width", "height"], "name": "VAEEncodeAdvanced", "display_name": "VAEEncodeAdvanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/vae", "output_node": false}, "SigmasPreview": {"input": {"required": {"sigmas": ["SIGMAS"], "print_as_list": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["sigmas", "print_as_list"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SigmasPreview", "display_name": "SigmasPreview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": true}, "SigmasSchedulePreview": {"input": {"required": {"model": ["MODEL"], "noise_mode": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.25, "step": 0.01, "min": -1000.0, "max": 1000.0}], "s_noise": ["FLOAT", {"default": 1.0, "step": 0.01, "min": -1000.0, "max": 1000.0}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "denoise_alt": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "plot_max": ["FLOAT", {"default": 2.1, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Set to a negative value to have the plot scale automatically."}], "plot_min": ["FLOAT", {"default": 0.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Set to a negative value to have the plot scale automatically."}]}, "optional": {"sigmas": ["SIGMAS"]}}, "input_order": {"required": ["model", "noise_mode", "eta", "s_noise", "denoise", "denoise_alt", "scheduler", "steps", "plot_max", "plot_min"], "optional": ["sigmas"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SigmasSchedulePreview", "display_name": "SigmasSchedulePreview", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": true}, "TorchCompileModelFluxAdv": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"]], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "double_blocks": ["STRING", {"default": "0-18", "multiline": true}], "single_blocks": ["STRING", {"default": "0-37", "multiline": true}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "double_blocks", "single_blocks", "dynamic"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "TorchCompileModelFluxAdv", "display_name": "TorchCompileModelFluxAdv", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "ClownpileModelWanVideo": {"input": {"required": {"model": ["MODEL"], "backend": [["inductor", "cudagraphs"], {"default": "inductor"}], "fullgraph": ["BOOLEAN", {"default": false, "tooltip": "Enable full graph mode"}], "mode": [["default", "max-autotune", "max-autotune-no-cudagraphs", "reduce-overhead"], {"default": "default"}], "dynamic": ["BOOLEAN", {"default": false, "tooltip": "Enable dynamic mode"}], "dynamo_cache_size_limit": ["INT", {"default": 64, "min": 0, "max": 1024, "step": 1, "tooltip": "torch._dynamo.config.cache_size_limit"}], "skip_self_attn_blocks": ["STRING", {"default": "0,1,2,3,4,5,6,7,8,9,", "multiline": true}], "compile_transformer_blocks": ["BOOLEAN", {"default": true, "tooltip": "Compile all transformer blocks"}], "force_recompile": ["BOOLEAN", {"default": false, "tooltip": "Force recompile."}]}}, "input_order": {"required": ["model", "backend", "fullgraph", "mode", "dynamic", "dynamo_cache_size_limit", "skip_self_attn_blocks", "compile_transformer_blocks", "force_recompile"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ClownpileModelWanVideo", "display_name": "ClownpileModelWanVideo", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model", "output_node": false, "experimental": true}, "ModelTimestepPatcher": {"input": {"required": {"model": ["MODEL"], "scaling": [["exponential", "linear"], {"default": "exponential"}], "shift": ["FLOAT", {"default": 3.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["model", "scaling", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ModelTimestepPatcher", "display_name": "ModelTimestepPatcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_shift", "output_node": false}, "ModelSamplingAdvanced": {"input": {"required": {"model": ["MODEL"], "scaling": [["exponential", "linear"], {"default": "exponential"}], "shift": ["FLOAT", {"default": 3.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}]}}, "input_order": {"required": ["model", "scaling", "shift"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ModelSamplingAdvanced", "display_name": "ModelSamplingAdvanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_shift", "output_node": false}, "ModelSamplingAdvancedResolution": {"input": {"required": {"model": ["MODEL"], "scaling": [["exponential", "linear"], {"default": "exponential"}], "max_shift": ["FLOAT", {"default": 1.35, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "base_shift": ["FLOAT", {"default": 0.85, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "scaling", "max_shift", "base_shift", "latent_image"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ModelSamplingAdvancedResolution", "display_name": "ModelSamplingAdvancedResolution", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_shift", "output_node": false}, "FluxGuidanceDisable": {"input": {"required": {"model": ["MODEL"], "disable": ["BOOLEAN", {"default": true}], "zero_clip_L": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "disable", "zero_clip_L"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "FluxGuidanceDisable", "display_name": "FluxGuidanceDisable", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "ReWanPatcher": {"input": {"required": {"model": ["MODEL"], "self_attn_blocks": ["STRING", {"default": "0,1,2,3,4,5,6,7,8,9,", "multiline": true}], "enable": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "self_attn_blocks", "enable"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ReWanPatcher", "display_name": "ReWanPatcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "ReFluxPatcher": {"input": {"required": {"model": ["MODEL"], "enable": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "enable"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ReFluxPatcher", "display_name": "ReFluxPatcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "FluxOrthoCFGPatcher": {"input": {"required": {"model": ["MODEL"], "enable": ["BOOLEAN", {"default": true}], "ortho_T5": ["BOOLEAN", {"default": true}], "ortho_clip_L": ["BOOLEAN", {"default": true}], "zero_clip_L": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "enable", "ortho_T5", "ortho_clip_L", "zero_clip_L"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "FluxOrthoCFGPatcher", "display_name": "FluxOrthoCFGPatcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "ReSD35Patcher": {"input": {"required": {"model": ["MODEL"], "enable": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "enable"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ReSD35Patcher", "display_name": "ReSD35Patcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "ReAuraPatcher": {"input": {"required": {"model": ["MODEL"], "enable": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["model", "enable"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["model"], "name": "ReAuraPatcher", "display_name": "ReAuraPatcher", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_patches", "output_node": false}, "UNetSave": {"input": {"required": {"model": ["MODEL"], "filename_prefix": ["STRING", {"default": "models/ComfyUI"}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["model", "filename_prefix"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "UNetSave", "display_name": "UNetSave", "description": "Save a .safetensors containing only the model data.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/model_merging", "output_node": true}, "Sigmas Recast": {"input": {"required": {"sigmas": ["SIGMAS"], "precision": [["16", "32", "64"]], "set_default": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["sigmas", "precision", "set_default"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["passthrough"], "name": "Sigmas Recast", "display_name": "Sigmas Recast", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/precision", "output_node": false}, "Sigmas Noise Inversion": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["sigmas_fwd", "sigmas_rev"], "name": "Sigmas Noise Inversion", "display_name": "Sigmas Noise Inversion", "description": "For use with unsampling. Connect sigmas_fwd to the unsampling (first) node, and sigmas_rev to the sampling (second) node.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas From Text": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["text"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas"], "name": "Sigmas From Text", "display_name": "Sigmas From Text", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Variance Floor": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Variance Floor", "display_name": "Sigmas Variance Floor", "description": "Process a sigma schedule so that any steps that are too large for variance-locked SDE sampling are replaced with the maximum permissible value.Will be very difficult to approach sigma = 0 due to the nature of the math, as steps become very small much below approximately sigma = 0.15 to 0.2.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Truncate": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "sigmas_until": ["INT", {"default": 10, "min": 0, "max": 1000, "step": 1}]}}, "input_order": {"required": ["sigmas", "sigmas_until"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Truncate", "display_name": "Sigmas Truncate", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Start": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "sigmas_until": ["INT", {"default": 10, "min": 0, "max": 1000, "step": 1}]}}, "input_order": {"required": ["sigmas", "sigmas_until"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Start", "display_name": "Sigmas Start", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Split": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "sigmas_start": ["INT", {"default": 0, "min": 0, "max": 1000, "step": 1}], "sigmas_end": ["INT", {"default": 1000, "min": 0, "max": 1000, "step": 1}]}}, "input_order": {"required": ["sigmas", "sigmas_start", "sigmas_end"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Split", "display_name": "Sigmas Split", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Concat": {"input": {"required": {"sigmas_1": ["SIGMAS", {"forceInput": true}], "sigmas_2": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas_1", "sigmas_2"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Concat", "display_name": "Sigmas Concat", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Pad": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "value": ["FLOAT", {"default": 0.0, "min": -10000, "max": 10000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "value"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Pad", "display_name": "Sigmas Pad", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Unpad": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Unpad", "display_name": "Sigmas Unpad", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas SetFloor": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "floor": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}], "new_floor": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "floor", "new_floor"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas SetFloor", "display_name": "Sigmas SetFloor", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas DeleteBelowFloor": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "floor": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "floor"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas DeleteBelowFloor", "display_name": "Sigmas DeleteBelowFloor", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas DeleteDuplicates": {"input": {"required": {"sigmas_1": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas_1"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas DeleteDuplicates", "display_name": "Sigmas DeleteDuplicates", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Cleanup": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "sigmin": ["FLOAT", {"default": 0.0291675, "min": 0, "max": 1000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "sigmin"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Cleanup", "display_name": "Sigmas Cleanup", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Mult": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "multiplier": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}]}, "optional": {"sigmas2": ["SIGMAS", {"forceInput": false}]}}, "input_order": {"required": ["sigmas", "multiplier"], "optional": ["sigmas2"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Mult", "display_name": "Sigmas Mult", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Modulus": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "divisor": ["FLOAT", {"default": 1, "min": -1000, "max": 1000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "divisor"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Modulus", "display_name": "Sigmas Modulus", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Quotient": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "divisor": ["FLOAT", {"default": 1, "min": -1000, "max": 1000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "divisor"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Quotient", "display_name": "Sigmas Quotient", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Add": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "addend": ["FLOAT", {"default": 1, "min": -1000, "max": 1000, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "addend"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Add", "display_name": "Sigmas Add", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Power": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}], "power": ["FLOAT", {"default": 1, "min": -100, "max": 100, "step": 0.01}]}}, "input_order": {"required": ["sigmas", "power"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Power", "display_name": "Sigmas Power", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Abs": {"input": {"required": {"sigmas": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Abs", "display_name": "Sigmas Abs", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas2 Mult": {"input": {"required": {"sigmas_1": ["SIGMAS", {"forceInput": true}], "sigmas_2": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas_1", "sigmas_2"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas2 Mult", "display_name": "Sigmas2 Mult", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas2 Add": {"input": {"required": {"sigmas_1": ["SIGMAS", {"forceInput": true}], "sigmas_2": ["SIGMAS", {"forceInput": true}]}}, "input_order": {"required": ["sigmas_1", "sigmas_2"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas2 Add", "display_name": "Sigmas2 Add", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Rescale": {"input": {"required": {"start": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "end": ["FLOAT", {"default": 0.0, "min": -10000, "max": 10000, "step": 0.01}], "sigmas": ["SIGMAS"]}, "optional": {}}, "input_order": {"required": ["start", "end", "sigmas"], "optional": []}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas_rescaled"], "name": "Sigmas Rescale", "display_name": "Sigmas Rescale", "description": "Can be used to set denoise. Results are generally better than with the approach used by KSampler and most nodes with denoise values (which slice the sigmas schedule according to step count, not the noise level). Will also flip the sigma schedule if the start and end values are reversed.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Math1": {"input": {"required": {"start": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "stop": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "trim": ["INT", {"default": 0, "min": -10000, "max": 0, "step": 1}], "x": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}], "y": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}], "z": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}], "f1": ["STRING", {"default": "s", "multiline": true}], "rescale": ["BOOLEAN", {"default": false}], "max1": ["FLOAT", {"default": 14.614642, "min": -10000, "max": 10000, "step": 0.01}], "min1": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}]}, "optional": {"a": ["SIGMAS", {"forceInput": false}], "b": ["SIGMAS", {"forceInput": false}], "c": ["SIGMAS", {"forceInput": false}]}}, "input_order": {"required": ["start", "stop", "trim", "x", "y", "z", "f1", "rescale", "max1", "min1"], "optional": ["a", "b", "c"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Sigmas Math1", "display_name": "Sigmas Math1", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Math3": {"input": {"required": {"start": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "stop": ["INT", {"default": 0, "min": 0, "max": 10000, "step": 1}], "trim": ["INT", {"default": 0, "min": -10000, "max": 0, "step": 1}]}, "optional": {"a": ["SIGMAS", {"forceInput": false}], "b": ["SIGMAS", {"forceInput": false}], "c": ["SIGMAS", {"forceInput": false}], "x": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}], "y": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}], "z": ["FLOAT", {"default": 1, "min": -10000, "max": 10000, "step": 0.01}], "f1": ["STRING", {"default": "s", "multiline": true}], "rescale1": ["BOOLEAN", {"default": false}], "max1": ["FLOAT", {"default": 14.614642, "min": -10000, "max": 10000, "step": 0.01}], "min1": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}], "f2": ["STRING", {"default": "s", "multiline": true}], "rescale2": ["BOOLEAN", {"default": false}], "max2": ["FLOAT", {"default": 14.614642, "min": -10000, "max": 10000, "step": 0.01}], "min2": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}], "f3": ["STRING", {"default": "s", "multiline": true}], "rescale3": ["BOOLEAN", {"default": false}], "max3": ["FLOAT", {"default": 14.614642, "min": -10000, "max": 10000, "step": 0.01}], "min3": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}]}}, "input_order": {"required": ["start", "stop", "trim"], "optional": ["a", "b", "c", "x", "y", "z", "f1", "rescale1", "max1", "min1", "f2", "rescale2", "max2", "min2", "f3", "rescale3", "max3", "min3"]}, "output": ["SIGMAS", "SIGMAS", "SIGMAS"], "output_is_list": [false, false, false], "output_name": ["SIGMAS", "SIGMAS", "SIGMAS"], "name": "Sigmas Math3", "display_name": "Sigmas Math3", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sigmas", "output_node": false}, "Sigmas Iteration Karras": {"input": {"required": {"steps_up": ["INT", {"default": 30, "min": 0, "max": 10000, "step": 1}], "steps_down": ["INT", {"default": 30, "min": 0, "max": 10000, "step": 1}], "rho_up": ["FLOAT", {"default": 3, "min": -10000, "max": 10000, "step": 0.01}], "rho_down": ["FLOAT", {"default": 4, "min": -10000, "max": 10000, "step": 0.01}], "s_min_start": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}], "s_max": ["FLOAT", {"default": 2, "min": -10000, "max": 10000, "step": 0.01}], "s_min_end": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}]}, "optional": {"momentums": ["SIGMAS", {"forceInput": false}], "sigmas": ["SIGMAS", {"forceInput": false}]}}, "input_order": {"required": ["steps_up", "steps_down", "rho_up", "rho_down", "s_min_start", "s_max", "s_min_end"], "optional": ["momentums", "sigmas"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["momentums", "sigmas"], "name": "Sigmas Iteration Karras", "display_name": "Sigmas Iteration Karras", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Sigmas Iteration Polyexp": {"input": {"required": {"steps_up": ["INT", {"default": 30, "min": 0, "max": 10000, "step": 1}], "steps_down": ["INT", {"default": 30, "min": 0, "max": 10000, "step": 1}], "rho_up": ["FLOAT", {"default": 0.6, "min": -10000, "max": 10000, "step": 0.01}], "rho_down": ["FLOAT", {"default": 0.8, "min": -10000, "max": 10000, "step": 0.01}], "s_min_start": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}], "s_max": ["FLOAT", {"default": 2, "min": -10000, "max": 10000, "step": 0.01}], "s_min_end": ["FLOAT", {"default": 0.0291675, "min": -10000, "max": 10000, "step": 0.01}]}, "optional": {"momentums": ["SIGMAS", {"forceInput": false}], "sigmas": ["SIGMAS", {"forceInput": false}]}}, "input_order": {"required": ["steps_up", "steps_down", "rho_up", "rho_down", "s_min_start", "s_max", "s_min_end"], "optional": ["momentums", "sigmas"]}, "output": ["SIGMAS", "SIGMAS"], "output_is_list": [false, false], "output_name": ["momentums", "sigmas"], "name": "Sigmas Iteration Polyexp", "display_name": "Sigmas Iteration Polyexp", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Tan Scheduler": {"input": {"required": {"steps": ["INT", {"default": 20, "min": 0, "max": 100000, "step": 1}], "offset": ["FLOAT", {"default": 20, "min": 0, "max": 100000, "step": 0.1}], "slope": ["FLOAT", {"default": 20, "min": -100000, "max": 100000, "step": 0.1}], "start": ["FLOAT", {"default": 20, "min": -100000, "max": 100000, "step": 0.1}], "end": ["FLOAT", {"default": 20, "min": -100000, "max": 100000, "step": 0.1}], "sgm": ["BOOLEAN", {"default": false}], "pad": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["steps", "offset", "slope", "start", "end", "sgm", "pad"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["SIGMAS"], "name": "Tan Scheduler", "display_name": "Tan Scheduler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Tan Scheduler 2": {"input": {"required": {"steps": ["INT", {"default": 40, "min": 0, "max": 100000, "step": 1}], "midpoint": ["INT", {"default": 20, "min": 0, "max": 100000, "step": 1}], "pivot_1": ["INT", {"default": 10, "min": 0, "max": 100000, "step": 1}], "pivot_2": ["INT", {"default": 30, "min": 0, "max": 100000, "step": 1}], "slope_1": ["FLOAT", {"default": 1, "min": -100000, "max": 100000, "step": 0.1}], "slope_2": ["FLOAT", {"default": 1, "min": -100000, "max": 100000, "step": 0.1}], "start": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000, "step": 0.1}], "middle": ["FLOAT", {"default": 0.5, "min": -100000, "max": 100000, "step": 0.1}], "end": ["FLOAT", {"default": 0.0, "min": -100000, "max": 100000, "step": 0.1}], "pad": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["steps", "midpoint", "pivot_1", "pivot_2", "slope_1", "slope_2", "start", "middle", "end", "pad"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas"], "name": "Tan Scheduler 2", "display_name": "Tan Scheduler 2", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Tan Scheduler 2 Simple": {"input": {"required": {"steps": ["INT", {"default": 40, "min": 0, "max": 100000, "step": 1}], "pivot_1": ["FLOAT", {"default": 1, "min": -100000, "max": 100000, "step": 0.01}], "pivot_2": ["FLOAT", {"default": 1, "min": -100000, "max": 100000, "step": 0.01}], "slope_1": ["FLOAT", {"default": 1, "min": -100000, "max": 100000, "step": 0.01}], "slope_2": ["FLOAT", {"default": 1, "min": -100000, "max": 100000, "step": 0.01}], "start": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000, "step": 0.01}], "middle": ["FLOAT", {"default": 0.5, "min": -100000, "max": 100000, "step": 0.01}], "end": ["FLOAT", {"default": 0.0, "min": -100000, "max": 100000, "step": 0.01}], "pad": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["steps", "pivot_1", "pivot_2", "slope_1", "slope_2", "start", "middle", "end", "pad"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas"], "name": "Tan Scheduler 2 Simple", "display_name": "Tan Scheduler 2 Simple", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Constant Scheduler": {"input": {"required": {"steps": ["INT", {"default": 40, "min": 0, "max": 100000, "step": 1}], "value_start": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000, "step": 0.01}], "value_end": ["FLOAT", {"default": 0.0, "min": -100000, "max": 100000, "step": 0.01}], "cutoff_percent": ["FLOAT", {"default": 1.0, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["steps", "value_start", "value_end", "cutoff_percent"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas"], "name": "Constant Scheduler", "display_name": "Constant Scheduler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Linear Quadratic Advanced": {"input": {"required": {"model": ["MODEL"], "steps": ["INT", {"default": 40, "min": 0, "max": 100000, "step": 1}], "denoise": ["FLOAT", {"default": 1.0, "min": -100000, "max": 100000, "step": 0.01}], "inflection_percent": ["FLOAT", {"default": 0.5, "min": 0, "max": 1, "step": 0.01}]}}, "input_order": {"required": ["model", "steps", "denoise", "inflection_percent"]}, "output": ["SIGMAS"], "output_is_list": [false], "output_name": ["sigmas"], "name": "Linear Quadratic Advanced", "display_name": "Linear Quadratic Advanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/schedulers", "output_node": false}, "Image Sharpen FS": {"input": {"required": {"images": ["IMAGE"], "method": [["hard", "linear", "vivid"], {"default": "hard"}], "type": [["median", "gaussian"], {"default": "median"}], "intensity": ["INT", {"default": 6, "min": 1, "step": 1}]}}, "input_order": {"required": ["images", "method", "type", "intensity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Sharpen FS", "display_name": "Image Sharpen FS", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Image Channels LAB": {"input": {"optional": {"RGB": ["IMAGE"], "L": ["IMAGE"], "A": ["IMAGE"], "B": ["IMAGE"]}, "required": {}}, "input_order": {"optional": ["RGB", "L", "A", "B"], "required": []}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["RGB", "L", "A", "B"], "name": "Image Channels LAB", "display_name": "Image Channels LAB", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Image Median Blur": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 6, "min": 1, "step": 1}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Median Blur", "display_name": "Image Median Blur", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Image Gaussian Blur": {"input": {"required": {"images": ["IMAGE"], "size": ["INT", {"default": 6, "min": 1, "step": 1}]}}, "input_order": {"required": ["images", "size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Gaussian Blur", "display_name": "Image Gaussian Blur", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Image Pair Split": {"input": {"required": {"img_pair": ["IMAGE"]}}, "input_order": {"required": ["img_pair"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["img_0", "img_1"], "name": "Image Pair Split", "display_name": "Image Pair Split", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Image Crop Location Exact": {"input": {"required": {"image": ["IMAGE"], "x": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "width": ["INT", {"default": 256, "max": 10000000, "min": 1, "step": 1}], "height": ["INT", {"default": 256, "max": 10000000, "min": 1, "step": 1}], "edge": [["original", "short", "long"]]}}, "input_order": {"required": ["image", "x", "y", "width", "height", "edge"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["image", "crop_data"], "name": "Image Crop Location Exact", "display_name": "Image Crop Location Exact", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Film Grain": {"input": {"required": {"image": ["IMAGE"], "density": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "highlights": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 255.0, "step": 0.01}], "supersample_factor": ["INT", {"default": 4, "min": 1, "max": 8, "step": 1}], "repeats": ["INT", {"default": 1, "min": 1, "max": 1000, "step": 1}]}}, "input_order": {"required": ["image", "density", "intensity", "highlights", "supersample_factor", "repeats"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Film Grain", "display_name": "Film Grain", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frequency Separation Linear Light": {"input": {"optional": {"high_pass": ["IMAGE"], "original": ["IMAGE"], "low_pass": ["IMAGE"]}, "required": {}}, "input_order": {"optional": ["high_pass", "original", "low_pass"], "required": []}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["high_pass", "original", "low_pass"], "name": "Frequency Separation Linear Light", "display_name": "Frequency Separation Linear Light", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frequency Separation Hard Light": {"input": {"optional": {"high_pass": ["IMAGE"], "original": ["IMAGE"], "low_pass": ["IMAGE"]}, "required": {}}, "input_order": {"optional": ["high_pass", "original", "low_pass"], "required": []}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["high_pass", "original", "low_pass"], "name": "Frequency Separation Hard Light", "display_name": "Frequency Separation Hard Light", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frequency Separation Hard Light LAB": {"input": {"optional": {"high_pass": ["IMAGE"], "original": ["IMAGE"], "low_pass": ["IMAGE"]}, "required": {}}, "input_order": {"optional": ["high_pass", "original", "low_pass"], "required": []}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["high_pass", "original", "low_pass"], "name": "Frequency Separation Hard Light LAB", "display_name": "Frequency Separation Hard Light LAB", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frame Select": {"input": {"required": {"frames": ["IMAGE"], "select": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {}}, "input_order": {"required": ["frames", "select"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Frame Select", "display_name": "Frame Select", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frames Slice": {"input": {"required": {"frames": ["IMAGE"], "start": ["INT", {"default": 0, "min": 0, "max": 10000}], "stop": ["INT", {"default": 1, "min": 1, "max": 10000}]}, "optional": {}}, "input_order": {"required": ["frames", "start", "stop"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Frames Slice", "display_name": "Frames Slice", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frames Concat": {"input": {"required": {"frames_0": ["IMAGE"], "frames_1": ["IMAGE"]}, "optional": {}}, "input_order": {"required": ["frames_0", "frames_1"], "optional": []}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Frames Concat", "display_name": "Frames Concat", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/images", "output_node": false}, "Frames Concat Masks": {"input": {"required": {"frames_0": ["MASK"], "frames_1": ["MASK"]}, "optional": {"frames_2": ["MASK"], "frames_3": ["MASK"], "frames_4": ["MASK"], "frames_5": ["MASK"], "frames_6": ["MASK"], "frames_7": ["MASK"], "frames_8": ["MASK"], "frames_9": ["MASK"]}}, "input_order": {"required": ["frames_0", "frames_1"], "optional": ["frames_2", "frames_3", "frames_4", "frames_5", "frames_6", "frames_7", "frames_8", "frames_9"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["temporal_mask"], "name": "Frames Concat Masks", "display_name": "Frames Concat Masks", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/masks", "output_node": false}, "Frame Select Latent": {"input": {"required": {"frames": ["IMAGE"], "select": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {}}, "input_order": {"required": ["frames", "select"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Frame Select Latent", "display_name": "Frame Select Latent", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Frames Slice Latent": {"input": {"required": {"frames": ["LATENT"], "start": ["INT", {"default": 0, "min": 0, "max": 10000}], "stop": ["INT", {"default": 1, "min": 1, "max": 10000}]}, "optional": {}}, "input_order": {"required": ["frames", "start", "stop"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Frames Slice Latent", "display_name": "Frames Slice Latent", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Frames Concat Latent": {"input": {"required": {"frames_0": ["LATENT"], "frames_1": ["LATENT"]}, "optional": {}}, "input_order": {"required": ["frames_0", "frames_1"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Frames Concat Latent", "display_name": "Frames Concat Latent", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Frame Select Latent Raw": {"input": {"required": {"frames": ["IMAGE"], "select": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {}}, "input_order": {"required": ["frames", "select"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Frame Select Latent Raw", "display_name": "Frame Select Latent Raw", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Frames Slice Latent Raw": {"input": {"required": {"frames": ["LATENT"], "start": ["INT", {"default": 0, "min": 0, "max": 10000}], "stop": ["INT", {"default": 1, "min": 1, "max": 10000}]}, "optional": {}}, "input_order": {"required": ["frames", "start", "stop"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Frames Slice Latent Raw", "display_name": "Frames Slice Latent Raw", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Frames Concat Latent Raw": {"input": {"required": {"frames_0": ["LATENT"], "frames_1": ["LATENT"]}, "optional": {}}, "input_order": {"required": ["frames_0", "frames_1"], "optional": []}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Frames Concat Latent Raw", "display_name": "Frames Concat Latent Raw", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/latents", "output_node": false}, "Legacy_ClownSampler": {"input": {"required": {"eta": ["FLOAT", {"default": 0.25, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "eta_var": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculate variance-corrected noise amount (overrides eta/noise_mode settings). Cannot be used at very low sigma values; reverts to eta/noise_mode for final steps."}], "s_noise": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Ratio of calculated noise amount actually added after each step. >1.0 will leave extra noise behind, <1.0 will remove more noise than it adds."}], "d_noise": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Ratio of calculated noise amount actually added after each step. >1.0 will leave extra noise behind, <1.0 will remove more noise than it adds."}], "noise_mode": [["hard", "hard_sq", "soft", "softer", "exp"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "noise_sampler_type": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"], {"default": "brownian"}], "alpha": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.1, "round": false, "tooltip": "Fractal noise mode: <0 = extra high frequency noise, >0 = extra low frequency noise, 0 = white noise."}], "k": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2.0, "round": false, "tooltip": "Fractal noise mode: all that matters is positive vs. negative. Effect unclear."}], "noise_seed": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615, "tooltip": "Seed for the SDE noise that is added after each step if eta or eta_var are non-zero. If set to -1, it will use the increment the seed most recently used by the workflow."}], "rk_type": [["res_2m", "res_3m", "res_2s", "res_3s", "rk_exp_5s", "deis_2m", "deis_3m", "deis_4m", "ralston_2s", "ralston_3s", "ralston_4s", "dpmpp_2m", "dpmpp_3m", "dpmpp_2s", "dpmpp_sde_2s", "dpmpp_3s", "midpoint_2s", "heun_2s", "heun_3s", "houwen-wray_3s", "kutta_3s", "ssprk3_3s", "rk38_4s", "rk4_4s", "dormand-prince_6s", "dormand-prince_13s", "bogacki-shampine_7s", "ddim", "euler"], {"default": "res_2m"}], "exp_mode": ["BOOLEAN", {"default": false, "tooltip": "Convert linear RK methods to exponential form."}], "multistep": ["BOOLEAN", {"default": false, "tooltip": "For samplers ending in S only. Reduces cost by one model call per step by reusing the previous step as the current predictor step."}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1, "tooltip": "Number of implicit Runge-Kutta refinement steps to run after each explicit step."}], "cfgpp": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "CFG++ scale. Use in place of, or with, CFG. Currently only working with RES, DPMPP, and DDIM samplers."}], "latent_guide_weight": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "guide_mode": [["hard_light", "mean_std", "mean", "std", "blend"], {"default": "mean", "tooltip": "The mode used. noise_mean and inversion are currently for test purposes only."}], "rescale_floor": ["BOOLEAN", {"default": true, "tooltip": "Latent_guide_weight(s) control the minimum value for the latent_guide_mask. If false, they control the maximum value."}]}, "optional": {"latent_guide": ["LATENT"], "latent_guide_inv": ["LATENT"], "latent_guide_mask": ["MASK"], "latent_guide_weights": ["SIGMAS"], "sigmas_override": ["SIGMAS"]}}, "input_order": {"required": ["eta", "eta_var", "s_noise", "d_noise", "noise_mode", "noise_sampler_type", "alpha", "k", "noise_seed", "rk_type", "exp_mode", "multistep", "implicit_steps", "cfgpp", "latent_guide_weight", "guide_mode", "rescale_floor"], "optional": ["latent_guide", "latent_guide_inv", "latent_guide_mask", "latent_guide_weights", "sigmas_override"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["SAMPLER"], "name": "Legacy_ClownSampler", "display_name": "Legacy_ClownSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/legacy/samplers", "output_node": false}, "Legacy_SharkSampler": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true}], "noise_normalize": ["BOOLEAN", {"default": true}], "noise_stdev": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "noise_mean": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "noise_is_latent": ["BOOLEAN", {"default": false}], "noise_type": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"], {"default": "gaussian"}], "alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.1, "round": false}], "k": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2.0, "round": false}], "noise_seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["standard", "unsample", "resample"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10000, "step": 0.01}], "cfg": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": false}], "truncate_conditioning": [["false", "true", "true_and_zero_neg"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "latent_image": ["LATENT"]}, "optional": {"sigmas": ["SIGMAS"], "latent_noise": ["LATENT"], "latent_noise_match": ["LATENT"]}}, "input_order": {"required": ["model", "add_noise", "noise_normalize", "noise_stdev", "noise_mean", "noise_is_latent", "noise_type", "alpha", "k", "noise_seed", "sampler_mode", "scheduler", "steps", "denoise", "cfg", "truncate_conditioning", "positive", "negative", "sampler", "latent_image"], "optional": ["sigmas", "latent_noise", "latent_noise_match"]}, "output": ["LATENT", "LATENT", "LATENT", "LATENT"], "output_is_list": [false, false, false, false], "output_name": ["output", "denoised", "output_fp64", "denoised_fp64"], "name": "Legacy_SharkSampler", "display_name": "Legacy_SharkSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/legacy/samplers", "output_node": false}, "Legacy_ClownsharKSampler": {"input": {"required": {"model": ["MODEL"], "noise_type_init": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_type_sde": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "brownian"}], "noise_mode_sde": [["hard", "hard_var", "hard_sq", "soft", "softer", "exp"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.25, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "noise_seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["standard", "unsample", "resample"]], "sampler_name": [["res_2m", "res_3m", "res_2s", "res_3s", "rk_exp_5s", "deis_2m", "deis_3m", "deis_4m", "ralston_2s", "ralston_3s", "ralston_4s", "dpmpp_2m", "dpmpp_3m", "dpmpp_2s", "dpmpp_sde_2s", "dpmpp_3s", "midpoint_2s", "heun_2s", "heun_3s", "houwen-wray_3s", "kutta_3s", "ssprk3_3s", "rk38_4s", "rk4_4s", "dormand-prince_6s", "dormand-prince_13s", "bogacki-shampine_7s", "ddim", "euler"], {"default": "res_2m"}], "implicit_sampler_name": [["default", "gauss-legendre_5s", "gauss-legendre_4s", "gauss-legendre_3s", "gauss-legendre_2s", "crouzeix_2s", "radau_iia_3s", "radau_iia_2s", "lobatto_iiic_3s", "lobatto_iiic_2s"], {"default": "default"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "denoise_alt": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "cfg": ["FLOAT", {"default": 5.0, "min": -100.0, "max": 100.0, "step": 0.1, "round": false}], "shift": ["FLOAT", {"default": 3.0, "min": -1.0, "max": 100.0, "step": 0.1, "round": false}], "base_shift": ["FLOAT", {"default": 0.85, "min": -1.0, "max": 100.0, "step": 0.1, "round": false}], "truncate_conditioning": [["false", "true"], {"default": "true"}]}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "guides": ["GUIDES"], "options": ["OPTIONS"]}}, "input_order": {"required": ["model", "noise_type_init", "noise_type_sde", "noise_mode_sde", "eta", "noise_seed", "sampler_mode", "sampler_name", "implicit_sampler_name", "scheduler", "steps", "implicit_steps", "denoise", "denoise_alt", "cfg", "shift", "base_shift", "truncate_conditioning"], "optional": ["positive", "negative", "sigmas", "latent_image", "guides", "options"]}, "output": ["LATENT", "LATENT"], "output_is_list": [false, false], "output_name": ["output", "denoised"], "name": "Legacy_ClownsharKSampler", "display_name": "Legacy_ClownsharKSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/legacy/samplers", "output_node": false}, "Legacy_ClownsharKSamplerGuides": {"input": {"required": {"guide_mode": [["hard_light", "mean_std", "mean", "std", "blend"], {"default": "blend", "tooltip": "The mode used."}], "latent_guide_weight": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "rescale_floor": ["BOOLEAN", {"default": false, "tooltip": "If true, latent_guide_weight(s) primarily affect the masked areas. If false, they control the unmasked areas."}]}, "optional": {"latent_guide": ["LATENT"], "latent_guide_inv": ["LATENT"], "latent_guide_mask": ["MASK"], "latent_guide_weights": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "latent_guide_weight", "scheduler", "steps", "denoise", "rescale_floor"], "optional": ["latent_guide", "latent_guide_inv", "latent_guide_mask", "latent_guide_weights"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["GUIDES"], "name": "Legacy_ClownsharKSamplerGuides", "display_name": "Legacy_ClownsharKSamplerGuides", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/legacy/samplers", "output_node": false}, "ClownSampler": {"input": {"required": {"noise_type_sde": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_mode_sde": [["none", "hard_sq", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "s_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "d_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "noise_seed_sde": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615}], "sampler_name": [["none", "res_2m", "res_3m", "res_2s", "res_3s", "res_3s_alt", "res_3s_cox_matthews", "res_3s_lie", "res_3s_strehmel_weiner", "res_4s_krogstad", "res_4s_strehmel_weiner", "res_4s_cox_matthews", "res_4s_munthe-kaas", "res_5s", "res_6s", "res_8s", "res_10s", "res_15s", "res_16s", "etdrk2_2s", "etdrk3_a_3s", "etdrk3_b_3s", "deis_2m", "deis_3m", "deis_4m", "ralston_2s", "ralston_3s", "ralston_4s", "dpmpp_2m", "dpmpp_3m", "dpmpp_2s", "dpmpp_sde_2s", "dpmpp_3s", "lawson4_4s", "genlawson41_4s", "modgenlawson41_4s", "midpoint_2s", "heun_2s", "heun_3s", "houwen-wray_3s", "kutta_3s", "ssprk3_3s", "rk38_4s", "rk4_4s", "rk5_7s", "rk6_7s", "bogacki-shampine_4s", "bogacki-shampine_7s", "dormand-prince_6s", "dormand-prince_13s", "tsi_7s", "ddim", "euler"], {"default": "res_2m"}], "implicit_sampler_name": [["none", "explicit_diagonal", "explicit_full", "irk_exp_diag_2s", "gauss-legendre_2s", "gauss-legendre_3s", "gauss-legendre_4s", "gauss-legendre_5s", "radau_ia_2s", "radau_ia_3s", "radau_iia_2s", "radau_iia_3s", "lobatto_iiia_2s", "lobatto_iiia_3s", "lobatto_iiib_2s", "lobatto_iiib_3s", "lobatto_iiic_2s", "lobatto_iiic_3s", "lobatto_iiic_star_2s", "lobatto_iiic_star_3s", "lobatto_iiid_2s", "lobatto_iiid_3s", "kraaijevanger_spijker_2s", "qin_zhang_2s", "pareschi_russo_2s", "pareschi_russo_alt_2s", "crouzeix_2s", "crouzeix_3s"], {"default": "explicit_diagonal"}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {"guides": ["GUIDES"], "options": ["OPTIONS"], "automation": ["AUTOMATION"], "extra_options": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["noise_type_sde", "noise_mode_sde", "eta", "s_noise", "d_noise", "noise_seed_sde", "sampler_name", "implicit_sampler_name", "implicit_steps"], "optional": ["guides", "options", "automation", "extra_options"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["sampler"], "name": "ClownSampler", "display_name": "ClownSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownSamplerAdvanced": {"input": {"required": {"noise_type_sde": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_type_sde_substep": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_mode_sde": [["none", "hard_sq", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "noise_mode_sde_substep": [["none", "hard_sq", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "eta_substep": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "s_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Adds extra SDE noise. Values around 1.03-1.07 can lead to a moderate boost in detail and paint textures."}], "d_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Downscales the sigma schedule. Values around 0.98-0.95 can lead to a large boost in detail and paint textures."}], "noise_seed_sde": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615}], "sampler_name": [["none", "res_2m", "res_3m", "res_2s", "res_3s", "res_3s_alt", "res_3s_cox_matthews", "res_3s_lie", "res_3s_strehmel_weiner", "res_4s_krogstad", "res_4s_strehmel_weiner", "res_4s_cox_matthews", "res_4s_munthe-kaas", "res_5s", "res_6s", "res_8s", "res_10s", "res_15s", "res_16s", "etdrk2_2s", "etdrk3_a_3s", "etdrk3_b_3s", "deis_2m", "deis_3m", "deis_4m", "ralston_2s", "ralston_3s", "ralston_4s", "dpmpp_2m", "dpmpp_3m", "dpmpp_2s", "dpmpp_sde_2s", "dpmpp_3s", "lawson4_4s", "genlawson41_4s", "modgenlawson41_4s", "midpoint_2s", "heun_2s", "heun_3s", "houwen-wray_3s", "kutta_3s", "ssprk3_3s", "rk38_4s", "rk4_4s", "rk5_7s", "rk6_7s", "bogacki-shampine_4s", "bogacki-shampine_7s", "dormand-prince_6s", "dormand-prince_13s", "tsi_7s", "ddim", "euler"], {"default": "res_2m"}], "implicit_sampler_name": [["none", "explicit_diagonal", "explicit_full", "irk_exp_diag_2s", "gauss-legendre_2s", "gauss-legendre_3s", "gauss-legendre_4s", "gauss-legendre_5s", "radau_ia_2s", "radau_ia_3s", "radau_iia_2s", "radau_iia_3s", "lobatto_iiia_2s", "lobatto_iiia_3s", "lobatto_iiib_2s", "lobatto_iiib_3s", "lobatto_iiic_2s", "lobatto_iiic_3s", "lobatto_iiic_star_2s", "lobatto_iiic_star_3s", "lobatto_iiid_2s", "lobatto_iiid_3s", "kraaijevanger_spijker_2s", "qin_zhang_2s", "pareschi_russo_2s", "pareschi_russo_alt_2s", "crouzeix_2s", "crouzeix_3s"], {"default": "explicit_diagonal"}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {"guides": ["GUIDES"], "options": ["OPTIONS"], "automation": ["AUTOMATION"], "extra_options": ["STRING", {"default": "", "multiline": true}]}}, "input_order": {"required": ["noise_type_sde", "noise_type_sde_substep", "noise_mode_sde", "noise_mode_sde_substep", "eta", "eta_substep", "s_noise", "d_noise", "noise_seed_sde", "sampler_name", "implicit_sampler_name", "implicit_steps"], "optional": ["guides", "options", "automation", "extra_options"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["sampler"], "name": "ClownSamplerAdvanced", "display_name": "ClownSamplerAdvanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownsharKSampler": {"input": {"required": {"model": ["MODEL"], "noise_type_init": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_type_sde": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_mode_sde": [["none", "hard_sq", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "noise_seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["standard", "unsample", "resample"]], "sampler_name": [["none", "res_2m", "res_3m", "res_2s", "res_3s", "res_3s_alt", "res_3s_cox_matthews", "res_3s_lie", "res_3s_strehmel_weiner", "res_4s_krogstad", "res_4s_strehmel_weiner", "res_4s_cox_matthews", "res_4s_munthe-kaas", "res_5s", "res_6s", "res_8s", "res_10s", "res_15s", "res_16s", "etdrk2_2s", "etdrk3_a_3s", "etdrk3_b_3s", "deis_2m", "deis_3m", "deis_4m", "ralston_2s", "ralston_3s", "ralston_4s", "dpmpp_2m", "dpmpp_3m", "dpmpp_2s", "dpmpp_sde_2s", "dpmpp_3s", "lawson4_4s", "genlawson41_4s", "modgenlawson41_4s", "midpoint_2s", "heun_2s", "heun_3s", "houwen-wray_3s", "kutta_3s", "ssprk3_3s", "rk38_4s", "rk4_4s", "rk5_7s", "rk6_7s", "bogacki-shampine_4s", "bogacki-shampine_7s", "dormand-prince_6s", "dormand-prince_13s", "tsi_7s", "ddim", "euler"], {"default": "res_2m"}], "implicit_sampler_name": [["none", "explicit_diagonal", "explicit_full", "irk_exp_diag_2s", "gauss-legendre_2s", "gauss-legendre_3s", "gauss-legendre_4s", "gauss-legendre_5s", "radau_ia_2s", "radau_ia_3s", "radau_iia_2s", "radau_iia_3s", "lobatto_iiia_2s", "lobatto_iiia_3s", "lobatto_iiib_2s", "lobatto_iiib_3s", "lobatto_iiic_2s", "lobatto_iiic_3s", "lobatto_iiic_star_2s", "lobatto_iiic_star_3s", "lobatto_iiid_2s", "lobatto_iiid_3s", "kraaijevanger_spijker_2s", "qin_zhang_2s", "pareschi_russo_2s", "pareschi_russo_alt_2s", "crouzeix_2s", "crouzeix_3s"], {"default": "explicit_diagonal"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "denoise_alt": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "cfg": ["FLOAT", {"default": 3.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "extra_options": ["STRING", {"default": "", "multiline": true}]}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "guides": ["GUIDES"], "options": ["OPTIONS"], "automation": ["AUTOMATION"]}}, "input_order": {"required": ["model", "noise_type_init", "noise_type_sde", "noise_mode_sde", "eta", "noise_seed", "sampler_mode", "sampler_name", "implicit_sampler_name", "scheduler", "steps", "implicit_steps", "denoise", "denoise_alt", "cfg", "extra_options"], "optional": ["positive", "negative", "sigmas", "latent_image", "guides", "options", "automation"]}, "output": ["LATENT", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "sde_noise"], "name": "ClownsharKSampler", "display_name": "ClownsharKSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownsharKSamplerGuides": {"input": {"required": {"guide_mode": [["unsample", "resample", "epsilon", "epsilon_projection", "epsilon_dynamic_mean", "epsilon_dynamic_mean_std", "epsilon_dynamic_mean_from_bkg", "epsilon_guide_mean_std_from_bkg", "hard_light", "blend", "blend_projection", "mean_std", "mean", "mean_tiled", "std", "data", "none"], {"default": "epsilon_projection", "tooltip": "Recommended: epsilon or mean/mean_std with sampler_mode = standard, and unsample/resample with sampler_mode = unsample/resample. Epsilon_dynamic_mean, etc. are only used with two latent inputs and a mask. Blend/hard_light/mean/mean_std etc. require low strengths, start with 0.01-0.02."}], "guide_weight": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "guide_weight_bkg": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide_bkg."}], "guide_weight_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "guide_weight_bkg_scale": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "guide_weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "guide_weight_scheduler_bkg": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "constant"}], "guide_end_step": ["INT", {"default": 15, "min": 1, "max": 10000}], "guide_bkg_end_step": ["INT", {"default": 15, "min": 1, "max": 10000}]}, "optional": {"guide": ["LATENT"], "guide_bkg": ["LATENT"], "guide_mask": ["MASK"], "guide_mask_bkg": ["MASK"], "guide_weights": ["SIGMAS"], "guide_weights_bkg": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "guide_weight", "guide_weight_bkg", "guide_weight_scale", "guide_weight_bkg_scale", "guide_weight_scheduler", "guide_weight_scheduler_bkg", "guide_end_step", "guide_bkg_end_step"], "optional": ["guide", "guide_bkg", "guide_mask", "guide_mask_bkg", "guide_weights", "guide_weights_bkg"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownsharKSamplerGuides", "display_name": "ClownsharKSamplerGuides", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownsharKSamplerGuide": {"input": {"required": {"guide_mode": [["unsample", "resample", "epsilon", "epsilon_projection", "epsilon_dynamic_mean", "epsilon_dynamic_mean_std", "epsilon_dynamic_mean_from_bkg", "epsilon_guide_mean_std_from_bkg", "hard_light", "blend", "blend_projection", "mean_std", "mean", "mean_tiled", "std", "data", "none"], {"default": "epsilon_projection", "tooltip": "Recommended: epsilon or mean/mean_std with sampler_mode = standard, and unsample/resample with sampler_mode = unsample/resample. Epsilon_dynamic_mean, etc. are only used with two latent inputs and a mask. Blend/hard_light/mean/mean_std etc. require low strengths, start with 0.01-0.02."}], "guide_weight": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "guide_weight_scale": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "guide_weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "guide_end_step": ["INT", {"default": 15, "min": 1, "max": 10000}]}, "optional": {"guide": ["LATENT"], "guide_mask": ["MASK"], "guide_weights": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "guide_weight", "guide_weight_scale", "guide_weight_scheduler", "guide_end_step"], "optional": ["guide", "guide_mask", "guide_weights"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownsharKSamplerGuide", "display_name": "ClownsharKSamplerGuide", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownOptions_SDE_Noise": {"input": {"required": {"sde_noise_steps": ["INT", {"default": 1, "min": 1, "max": 10000}]}, "optional": {"sde_noise": ["LATENT"], "options": ["OPTIONS"]}}, "input_order": {"required": ["sde_noise_steps"], "optional": ["sde_noise", "options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_SDE_Noise", "display_name": "ClownOptions_SDE_Noise", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_FrameWeights": {"input": {"required": {"frame_weights": ["SIGMAS"]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["frame_weights"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_FrameWeights", "display_name": "ClownOptions_FrameWeights", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false, "deprecated": true}, "ClownInpaint": {"input": {"required": {"guide_weight": ["FLOAT", {"default": 0.1, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "guide_weight_bkg": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide_bkg."}], "guide_weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "guide_weight_scheduler_bkg": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "constant"}], "guide_end_step": ["INT", {"default": 15, "min": 1, "max": 10000}], "guide_bkg_end_step": ["INT", {"default": 10000, "min": 1, "max": 10000}]}, "optional": {"model": ["MODEL"], "positive_inpaint": ["CONDITIONING"], "positive_bkg": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "mask": ["MASK"], "guide_weights": ["SIGMAS"], "guide_weights_bkg": ["SIGMAS"]}}, "input_order": {"required": ["guide_weight", "guide_weight_bkg", "guide_weight_scheduler", "guide_weight_scheduler_bkg", "guide_end_step", "guide_bkg_end_step"], "optional": ["model", "positive_inpaint", "positive_bkg", "negative", "latent_image", "mask", "guide_weights", "guide_weights_bkg"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "GUIDES"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "positive", "negative", "latent", "guides"], "name": "ClownInpaint", "display_name": "ClownInpaint", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownInpaintSimple": {"input": {"required": {"guide_weight": ["FLOAT", {"default": 0.1, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "guide_weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "guide_end_step": ["INT", {"default": 15, "min": 1, "max": 10000}]}, "optional": {"model": ["MODEL"], "positive_inpaint": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "mask": ["MASK"]}}, "input_order": {"required": ["guide_weight", "guide_weight_scheduler", "guide_end_step"], "optional": ["model", "positive_inpaint", "negative", "latent_image", "mask"]}, "output": ["MODEL", "CONDITIONING", "CONDITIONING", "LATENT", "GUIDES"], "output_is_list": [false, false, false, false, false], "output_name": ["model", "positive", "negative", "latent", "guides"], "name": "ClownInpaintSimple", "display_name": "ClownInpaintSimple", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownsharKSamplerOptions": {"input": {"required": {"noise_init_stdev": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "noise_init_mean": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "noise_type_init": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"], {"default": "gaussian"}], "noise_type_sde": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"], {"default": "brownian"}], "noise_mode_sde": [["hard", "hard_var", "hard_sq", "soft", "softer", "exp"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.25, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "s_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "round": false}], "d_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "alpha_init": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.1}], "k_init": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2}], "alpha_sde": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.1}], "k_sde": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2}], "noise_seed": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615, "tooltip": "Seed for the SDE noise that is added after each step if eta or eta_var are non-zero. If set to -1, it will use the increment the seed most recently used by the workflow."}], "c1": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 10000.0, "step": 0.01}], "c2": ["FLOAT", {"default": 0.5, "min": -1.0, "max": 10000.0, "step": 0.01}], "c3": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 10000.0, "step": 0.01}], "t_fn_formula": ["STRING", {"default": "", "multiline": true}], "sigma_fn_formula": ["STRING", {"default": "", "multiline": true}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["noise_init_stdev", "noise_init_mean", "noise_type_init", "noise_type_sde", "noise_mode_sde", "eta", "s_noise", "d_noise", "alpha_init", "k_init", "alpha_sde", "k_sde", "noise_seed", "c1", "c2", "c3", "t_fn_formula", "sigma_fn_formula"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownsharKSamplerOptions", "display_name": "ClownsharKSamplerOptions", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownsharKSamplerAutomation": {"input": {"required": {}, "optional": {"etas": ["SIGMAS"], "s_noises": ["SIGMAS"], "unsample_resample_scales": ["SIGMAS"]}}, "input_order": {"required": [], "optional": ["etas", "s_noises", "unsample_resample_scales"]}, "output": ["AUTOMATION"], "output_is_list": [false], "output_name": ["automation"], "name": "ClownsharKSamplerAutomation", "display_name": "ClownsharKSamplerAutomation", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownsharKSamplerAutomation_Advanced": {"input": {"required": {}, "optional": {"automation": ["AUTOMATION"], "etas": ["SIGMAS"], "etas_substep": ["SIGMAS"], "s_noises": ["SIGMAS"], "unsample_resample_scales": ["SIGMAS"], "frame_weights": ["SIGMAS"], "frame_weights_bkg": ["SIGMAS"]}}, "input_order": {"required": [], "optional": ["automation", "etas", "etas_substep", "s_noises", "unsample_resample_scales", "frame_weights", "frame_weights_bkg"]}, "output": ["AUTOMATION"], "output_is_list": [false], "output_name": ["automation"], "name": "ClownsharKSamplerAutomation_Advanced", "display_name": "ClownsharKSamplerAutomation_Advanced", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "SamplerOptions_TimestepScaling": {"input": {"required": {"sampler": ["SAMPLER"], "t_fn_formula": ["STRING", {"default": "1/((sigma).exp()+1)", "multiline": true}], "sigma_fn_formula": ["STRING", {"default": "((1-t)/t).log()", "multiline": true}]}, "optional": {}}, "input_order": {"required": ["sampler", "t_fn_formula", "sigma_fn_formula"], "optional": []}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["sampler"], "name": "SamplerOptions_TimestepScaling", "display_name": "SamplerOptions_TimestepScaling", "description": "Patches ClownSampler's t_fn and sigma_fn (sigma <-> timestep) formulas to allow picking Runge-Kutta Ci values (midpoints) with different scaling.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "SamplerOptions_GarbageCollection": {"input": {"required": {"sampler": ["SAMPLER"], "garbage_collection": ["BOOLEAN", {"default": true}]}, "optional": {}}, "input_order": {"required": ["sampler", "garbage_collection"], "optional": []}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["sampler"], "name": "SamplerOptions_GarbageCollection", "display_name": "SamplerOptions_GarbageCollection", "description": "Patches ClownSampler's to use garbage collection after every step. This can help with OOM issues during inference for large models like Flux. The tradeoff is slower sampling.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "UltraSharkSampler": {"input": {"required": {"model": ["MODEL"], "add_noise": ["BOOLEAN", {"default": true}], "normalize_noise": ["BOOLEAN", {"default": false}], "noise_type": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"]], "alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.1, "round": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2.0, "round": 0.01}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "cfg": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 100.0, "step": 0.5, "round": 0.01}], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "guide_type": [["residual", "weighted"]], "guide_weight": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": 0.01}]}, "optional": {"guide": ["LATENT"], "guide_weights": ["SIGMAS"]}}, "input_order": {"required": ["model", "add_noise", "normalize_noise", "noise_type", "alpha", "k", "noise_seed", "cfg", "positive", "negative", "sampler", "sigmas", "latent_image", "guide_type", "guide_weight"], "optional": ["guide", "guide_weights"]}, "output": ["LATENT", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["output", "denoised_output", "latent_batch"], "name": "UltraSharkSampler", "display_name": "UltraSharkSampler", "description": "For use with Stable Cascade and UltraCascade.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers/UltraCascade", "output_node": false}, "UltraSharkSampler Tiled": {"input": {"required": {"add_noise": ["BOOLEAN", {"default": true}], "noise_is_latent": ["BOOLEAN", {"default": false}], "noise_type": [["fractal", "gaussian", "gaussian_backwards", "uniform", "pyramid-cascade_B", "pyramid-interpolated", "pyramid-bilinear", "pyramid-bicubic", "pyramid-nearest", "hires-pyramid-bilinear", "hires-pyramid-bicubic", "hires-pyramid-nearest", "brownian", "laplacian", "studentt", "wavelet", "perlin"]], "alpha": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.1, "round": 0.01}], "k": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 2.0, "round": 0.01}], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "cfg": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 100.0}], "guide_type": [["residual", "weighted"]], "guide_weight": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": 0.01}], "tile_width": ["INT", {"default": 1024, "min": 2, "max": 16384, "step": 1}], "tile_height": ["INT", {"default": 1024, "min": 2, "max": 16384, "step": 1}], "tiling_strategy": [["padded", "random", "random strict", "simple"]], "max_tile_batch_size": ["INT", {"default": 64, "min": 1, "max": 256, "step": 1}], "model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "clip_name": [["CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "clip-vit-large-patch14.safetensors", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_vision_g.safetensors", "sigclip_vision_patch14_384.safetensors"], {"default": "clip-vit-large-patch14.safetensors"}], "strength": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "noise_augment": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"latent_noise": ["LATENT"], "guide": ["LATENT"], "guide_weights": ["SIGMAS"], "image_cv": ["IMAGE"]}}, "input_order": {"required": ["add_noise", "noise_is_latent", "noise_type", "alpha", "k", "noise_seed", "cfg", "guide_type", "guide_weight", "tile_width", "tile_height", "tiling_strategy", "max_tile_batch_size", "model", "positive", "negative", "sampler", "sigmas", "latent_image", "clip_name", "strength", "noise_augment"], "optional": ["latent_noise", "guide", "guide_weights", "image_cv"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "UltraSharkSampler Tiled", "display_name": "UltraSharkSampler Tiled", "description": "For use with UltraCascade.", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers/ultracascade", "output_node": false}, "SharkSampler": {"input": {"required": {"noise_type_init": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_stdev": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "noise_seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["unsample", "standard", "resample"], {"default": "standard"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000.0}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "denoise_alt": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "cfg": ["FLOAT", {"default": 5.5, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "Negative values use channelwise CFG."}]}, "optional": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "extra_options": ["STRING", {"default": "", "multiline": true}], "options": ["OPTIONS"]}}, "input_order": {"required": ["noise_type_init", "noise_stdev", "noise_seed", "sampler_mode", "scheduler", "steps", "denoise", "denoise_alt", "cfg"], "optional": ["model", "positive", "negative", "sampler", "sigmas", "latent_image", "extra_options", "options"]}, "output": ["LATENT", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "sde_noise"], "name": "SharkSampler", "display_name": "SharkSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "SharkSamplerAdvanced_Beta": {"input": {"required": {"noise_type_init": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_stdev": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "noise_seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["unsample", "standard", "resample"], {"default": "standard"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000.0}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "denoise_alt": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "cfg": ["FLOAT", {"default": 5.5, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "Negative values use channelwise CFG."}]}, "optional": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "extra_options": ["STRING", {"default": "", "multiline": true}], "options": ["OPTIONS"]}}, "input_order": {"required": ["noise_type_init", "noise_stdev", "noise_seed", "sampler_mode", "scheduler", "steps", "denoise", "denoise_alt", "cfg"], "optional": ["model", "positive", "negative", "sampler", "sigmas", "latent_image", "extra_options", "options"]}, "output": ["LATENT", "LATENT", "LATENT"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "sde_noise"], "name": "SharkSamplerAdvanced_Beta", "display_name": "SharkSamplerAdvanced_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "SharkSampler_Beta": {"input": {"required": {"scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000.0}], "steps_to_run": ["INT", {"default": -1, "min": -1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01}], "cfg": ["FLOAT", {"default": 5.5, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "Negative values use channelwise CFG."}], "seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["unsample", "standard", "resample"], {"default": "standard"}]}, "optional": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "options": ["OPTIONS"]}}, "input_order": {"required": ["scheduler", "steps", "steps_to_run", "denoise", "cfg", "seed", "sampler_mode"], "optional": ["model", "positive", "negative", "sampler", "sigmas", "latent_image", "options"]}, "output": ["LATENT", "LATENT", "OPTIONS"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "options"], "name": "SharkSampler_Beta", "display_name": "SharkSampler_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "SharkChainsampler_Beta": {"input": {"required": {"steps_to_run": ["INT", {"default": -1, "min": -1, "max": 10000}], "cfg": ["FLOAT", {"default": 5.5, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "Negative values use channelwise CFG."}], "sampler_mode": [["unsample", "resample"], {"default": "resample"}]}, "optional": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sampler": ["SAMPLER"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "options": ["OPTIONS"]}}, "input_order": {"required": ["steps_to_run", "cfg", "sampler_mode"], "optional": ["model", "positive", "negative", "sampler", "sigmas", "latent_image", "options"]}, "output": ["LATENT", "LATENT", "OPTIONS"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "options"], "name": "SharkChainsampler_Beta", "display_name": "SharkChainsampler_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "BongSampler": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 5.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "sampler_name": [["res_2m", "res_3m", "res_2s", "res_3s", "res_2m_sde", "res_3m_sde", "res_2s_sde", "res_3s_sde"], {"default": "res_2s_sde"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}]}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "denoise"], "optional": ["positive", "negative", "latent_image"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["output"], "name": "BongSampler", "display_name": "BongSampler", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownsharKSampler_Beta": {"input": {"required": {"eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "sampler_name": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"], {"default": "multistep/res_2m"}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "steps": ["INT", {"default": 30, "min": 1, "max": 10000}], "steps_to_run": ["INT", {"default": -1, "min": -1, "max": 10000}], "denoise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "cfg": ["FLOAT", {"default": 5.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false}], "seed": ["INT", {"default": 0, "min": -1, "max": 18446744073709551615}], "sampler_mode": [["unsample", "standard", "resample"], {"default": "standard"}], "bongmath": ["BOOLEAN", {"default": true}]}, "optional": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "sigmas": ["SIGMAS"], "guides": ["GUIDES"], "options": ["OPTIONS", {}]}}, "input_order": {"required": ["eta", "sampler_name", "scheduler", "steps", "steps_to_run", "denoise", "cfg", "seed", "sampler_mode", "bongmath"], "optional": ["model", "positive", "negative", "latent_image", "sigmas", "guides", "options"]}, "output": ["LATENT", "LATENT", "OPTIONS"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "options"], "name": "ClownsharKSampler_Beta", "display_name": "ClownsharKSampler_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownsharkChainsampler_Beta": {"input": {"required": {"eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "sampler_name": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"], {"default": "multistep/res_2m"}], "steps_to_run": ["INT", {"default": -1, "min": -1, "max": 10000}], "cfg": ["FLOAT", {"default": 5.5, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "Negative values use channelwise CFG."}], "sampler_mode": [["unsample", "resample"], {"default": "resample"}], "bongmath": ["BOOLEAN", {"default": true}]}, "optional": {"model": ["MODEL"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "sigmas": ["SIGMAS"], "latent_image": ["LATENT"], "guides": ["GUIDES"], "options": ["OPTIONS"]}}, "input_order": {"required": ["eta", "sampler_name", "steps_to_run", "cfg", "sampler_mode", "bongmath"], "optional": ["model", "positive", "negative", "sigmas", "latent_image", "guides", "options"]}, "output": ["LATENT", "LATENT", "OPTIONS"], "output_is_list": [false, false, false], "output_name": ["output", "denoised", "options"], "name": "ClownsharkChainsampler_Beta", "display_name": "ClownsharkChainsampler_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownSampler_Beta": {"input": {"required": {"eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "sampler_name": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"], {"default": "multistep/res_2m"}], "seed": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615}], "bongmath": ["BOOLEAN", {"default": true}]}, "optional": {"guides": ["GUIDES"], "options": ["OPTIONS", {}]}}, "input_order": {"required": ["eta", "sampler_name", "seed", "bongmath"], "optional": ["guides", "options"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["sampler"], "name": "ClownSampler_Beta", "display_name": "ClownSampler_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownSamplerAdvanced_Beta": {"input": {"required": {"noise_type_sde": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_type_sde_substep": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_mode_sde": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "noise_mode_sde_substep": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "overshoot_mode": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How step size overshoot scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "overshoot_mode_substep": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How substep size overshoot scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "eta_substep": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "overshoot": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Boost the size of each denoising step, then rescale to match the original. Has a softening effect."}], "overshoot_substep": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Boost the size of each denoising substep, then rescale to match the original. Has a softening effect."}], "noise_scaling_weight": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set to positive values to create a sharper, grittier, more detailed image. Set to negative values to soften and deepen the colors."}], "noise_boost_step": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set to positive values to create a sharper, grittier, more detailed image. Set to negative values to soften and deepen the colors."}], "noise_boost_substep": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set to positive values to create a sharper, grittier, more detailed image. Set to negative values to soften and deepen the colors."}], "noise_anchor": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Typically set to between 1.0 and 0.0. Lower values cerate a grittier, more detailed image."}], "s_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Adds extra SDE noise. Values around 1.03-1.07 can lead to a moderate boost in detail and paint textures."}], "s_noise_substep": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Adds extra SDE noise. Values around 1.03-1.07 can lead to a moderate boost in detail and paint textures."}], "d_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Downscales the sigma schedule. Values around 0.98-0.95 can lead to a large boost in detail and paint textures."}], "momentum": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Accelerate convergence with positive values when sampling, negative values when unsampling."}], "noise_seed_sde": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615}], "sampler_name": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"], {"default": "multistep/res_2m"}], "implicit_type": [["rebound", "retro-eta", "bongmath", "predictor-corrector"], {"default": "predictor-corrector"}], "implicit_type_substeps": [["rebound", "retro-eta", "bongmath", "predictor-corrector"], {"default": "predictor-corrector"}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 10000}], "implicit_substeps": ["INT", {"default": 0, "min": 0, "max": 10000}], "bongmath": ["BOOLEAN", {"default": true}]}, "optional": {"guides": ["GUIDES"], "automation": ["AUTOMATION"], "extra_options": ["STRING", {"default": "", "multiline": true}], "options": ["OPTIONS"]}}, "input_order": {"required": ["noise_type_sde", "noise_type_sde_substep", "noise_mode_sde", "noise_mode_sde_substep", "overshoot_mode", "overshoot_mode_substep", "eta", "eta_substep", "overshoot", "overshoot_substep", "noise_scaling_weight", "noise_boost_step", "noise_boost_substep", "noise_anchor", "s_noise", "s_noise_substep", "d_noise", "momentum", "noise_seed_sde", "sampler_name", "implicit_type", "implicit_type_substeps", "implicit_steps", "implicit_substeps", "bongmath"], "optional": ["guides", "automation", "extra_options", "options"]}, "output": ["SAMPLER"], "output_is_list": [false], "output_name": ["sampler"], "name": "ClownSamplerAdvanced_Beta", "display_name": "ClownSamplerAdvanced_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/samplers", "output_node": false}, "ClownGuide_Mean_Beta": {"input": {"required": {"channelwise_mode": ["BOOLEAN", {"default": true}], "projection_mode": ["BOOLEAN", {"default": true}], "weight": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "cutoff": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step": ["INT", {"default": 15, "min": -1, "max": 10000}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"guide": ["LATENT"], "mask": ["MASK"], "weights": ["SIGMAS"], "guides": ["GUIDES"]}}, "input_order": {"required": ["channelwise_mode", "projection_mode", "weight", "cutoff", "weight_scheduler", "start_step", "end_step", "invert_mask"], "optional": ["guide", "mask", "weights", "guides"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownGuide_Mean_Beta", "display_name": "ClownGuide_Mean_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownGuide_Beta": {"input": {"required": {"guide_mode": [["flow", "lure", "data", "epsilon", "pseudoimplicit", "fully_pseudoimplicit", "none"], {"default": "epsilon", "tooltip": "Recommended: epsilon or mean/mean_std with sampler_mode = standard, and unsample/resample with sampler_mode = unsample/resample. Epsilon_dynamic_mean, etc. are only used with two latent inputs and a mask. Blend/hard_light/mean/mean_std etc. require low strengths, start with 0.01-0.02."}], "channelwise_mode": ["BOOLEAN", {"default": true}], "projection_mode": ["BOOLEAN", {"default": true}], "weight": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "cutoff": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step": ["INT", {"default": 15, "min": -1, "max": 10000}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"guide": ["LATENT"], "mask": ["MASK"], "weights": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "channelwise_mode", "projection_mode", "weight", "cutoff", "weight_scheduler", "start_step", "end_step", "invert_mask"], "optional": ["guide", "mask", "weights"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownGuide_Beta", "display_name": "ClownGuide_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownGuides_Beta": {"input": {"required": {"guide_mode": [["flow", "lure", "data", "epsilon", "pseudoimplicit", "fully_pseudoimplicit", "none"], {"default": "epsilon", "tooltip": "Recommended: epsilon or mean/mean_std with sampler_mode = standard, and unsample/resample with sampler_mode = unsample/resample. Epsilon_dynamic_mean, etc. are only used with two latent inputs and a mask. Blend/hard_light/mean/mean_std etc. require low strengths, start with 0.01-0.02."}], "channelwise_mode": ["BOOLEAN", {"default": true}], "projection_mode": ["BOOLEAN", {"default": true}], "weight_masked": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "weight_unmasked": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide_bkg."}], "cutoff_masked": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "cutoff_unmasked": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "weight_scheduler_masked": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "weight_scheduler_unmasked": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "constant"}], "start_step_masked": ["INT", {"default": 0, "min": 0, "max": 10000}], "start_step_unmasked": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step_masked": ["INT", {"default": 15, "min": -1, "max": 10000}], "end_step_unmasked": ["INT", {"default": 15, "min": -1, "max": 10000}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"guide_masked": ["LATENT"], "guide_unmasked": ["LATENT"], "mask": ["MASK"], "weights_masked": ["SIGMAS"], "weights_unmasked": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "channelwise_mode", "projection_mode", "weight_masked", "weight_unmasked", "cutoff_masked", "cutoff_unmasked", "weight_scheduler_masked", "weight_scheduler_unmasked", "start_step_masked", "start_step_unmasked", "end_step_masked", "end_step_unmasked", "invert_mask"], "optional": ["guide_masked", "guide_unmasked", "mask", "weights_masked", "weights_unmasked"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownGuides_Beta", "display_name": "ClownGuides_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownGuidesAB_Beta": {"input": {"required": {"guide_mode": [["flow", "lure", "data", "epsilon", "pseudoimplicit", "fully_pseudoimplicit", "none"], {"default": "epsilon", "tooltip": "Recommended: epsilon or mean/mean_std with sampler_mode = standard, and unsample/resample with sampler_mode = unsample/resample. Epsilon_dynamic_mean, etc. are only used with two latent inputs and a mask. Blend/hard_light/mean/mean_std etc. require low strengths, start with 0.01-0.02."}], "channelwise_mode": ["BOOLEAN", {"default": false}], "projection_mode": ["BOOLEAN", {"default": false}], "weight_A": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "weight_B": ["FLOAT", {"default": 0.75, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide_bkg."}], "cutoff_A": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "cutoff_B": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "weight_scheduler_A": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "weight_scheduler_B": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "constant"}], "start_step_A": ["INT", {"default": 0, "min": 0, "max": 10000}], "start_step_B": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step_A": ["INT", {"default": 15, "min": -1, "max": 10000}], "end_step_B": ["INT", {"default": 15, "min": -1, "max": 10000}], "invert_masks": ["BOOLEAN", {"default": false}]}, "optional": {"guide_A": ["LATENT"], "guide_B": ["LATENT"], "mask_A": ["MASK"], "mask_B": ["MASK"], "weights_A": ["SIGMAS"], "weights_B": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "channelwise_mode", "projection_mode", "weight_A", "weight_B", "cutoff_A", "cutoff_B", "weight_scheduler_A", "weight_scheduler_B", "start_step_A", "start_step_B", "end_step_A", "end_step_B", "invert_masks"], "optional": ["guide_A", "guide_B", "mask_A", "mask_B", "weights_A", "weights_B"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownGuidesAB_Beta", "display_name": "ClownGuidesAB_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownGuide_Misc_Beta": {"input": {"required": {"guide_mode": [["hard_light", "blend", "blend_projection", "mean_std", "mean", "mean_tiled", "std", "data", "none"], {"default": "blend", "tooltip": "Recommended: epsilon or mean/mean_std with sampler_mode = standard, and unsample/resample with sampler_mode = unsample/resample. Epsilon_dynamic_mean, etc. are only used with two latent inputs and a mask. Blend/hard_light/mean/mean_std etc. require low strengths, start with 0.01-0.02."}], "channelwise_mode": ["BOOLEAN", {"default": false}], "projection_mode": ["BOOLEAN", {"default": false}], "weight": ["FLOAT", {"default": 0.05, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set the strength of the guide."}], "cutoff": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01, "round": false, "tooltip": "Disables the guide for the next step when the denoised image is similar to the guide. Higher values will strengthen the effect."}], "weight_scheduler": [["constant", "normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"default": "beta57"}], "start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "end_step": ["INT", {"default": 15, "min": -1, "max": 10000}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"guide": ["LATENT"], "mask": ["MASK"], "weights": ["SIGMAS"]}}, "input_order": {"required": ["guide_mode", "channelwise_mode", "projection_mode", "weight", "cutoff", "weight_scheduler", "start_step", "end_step", "invert_mask"], "optional": ["guide", "mask", "weights"]}, "output": ["GUIDES"], "output_is_list": [false], "output_name": ["guides"], "name": "ClownGuide_Misc_Beta", "display_name": "ClownGuide_Misc_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_extensions", "output_node": false}, "ClownSamplerSelector_Beta": {"input": {"required": {"sampler_name": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"], {"default": "multistep/res_2m"}]}, "optional": {}}, "input_order": {"required": ["sampler_name"], "optional": []}, "output": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"]], "output_is_list": [false], "output_name": ["sampler_name"], "name": "ClownSamplerSelector_Beta", "display_name": "ClownSamplerSelector_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_SDE_Mask_Beta": {"input": {"required": {"max": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Clamp the max value for the mask."}], "min": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Clamp the min value for the mask."}], "invert_mask": ["BOOLEAN", {"default": false}]}, "optional": {"mask": ["MASK"], "options": ["OPTIONS"]}}, "input_order": {"required": ["max", "min", "invert_mask"], "optional": ["mask", "options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_SDE_Mask_Beta", "display_name": "ClownOptions_SDE_Mask_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_SDE_Beta": {"input": {"required": {"noise_type_sde": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_type_sde_substep": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_mode_sde": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "noise_mode_sde_substep": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How noise scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "eta_substep": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Calculated noise amount to be added, then removed, after each step."}], "seed": ["INT", {"default": -1, "min": -1, "max": 18446744073709551615}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["noise_type_sde", "noise_type_sde_substep", "noise_mode_sde", "noise_mode_sde_substep", "eta", "eta_substep", "seed"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_SDE_Beta", "display_name": "ClownOptions_SDE_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_StepSize_Beta": {"input": {"required": {"overshoot_mode": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How step size overshoot scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "overshoot_mode_substep": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "hard", "tooltip": "How substep size overshoot scales with the sigma schedule. Hard is the most aggressive, the others start strong and drop rapidly."}], "overshoot": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Boost the size of each denoising step, then rescale to match the original. Has a softening effect."}], "overshoot_substep": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Boost the size of each denoising substep, then rescale to match the original. Has a softening effect."}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["overshoot_mode", "overshoot_mode_substep", "overshoot", "overshoot_substep"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_StepSize_Beta", "display_name": "ClownOptions_StepSize_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_DetailBoost_Beta": {"input": {"required": {"noise_scaling_weight": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Set to positive values to create a sharper, grittier, more detailed image. Set to negative values to soften and deepen the colors."}], "noise_scaling_type": [["sampler", "sampler_substep", "model", "model_alpha"], {"default": "model_alpha", "tooltip": "Determines whether the sampler or the model underestimates the noise level."}], "noise_scaling_mode": [["none", "hard", "lorentzian", "soft", "soft-linear", "softer", "eps", "sinusoidal", "exp", "vpsde", "er4", "hard_var"], {"default": "sinusoidal", "tooltip": "Changes the steps where the effect is greatest. Most affect early steps, sinusoidal affects middle steps."}], "noise_scaling_eta": ["FLOAT", {"default": 0.5, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "The strength of the effect of the noise_scaling_mode. Linear ignores this parameter."}], "noise_scaling_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "noise_scaling_end_step": ["INT", {"default": -1, "min": -1, "max": 10000}], "sampler_scaling_normalize": ["BOOLEAN", {"default": false, "tooltip": "Limit saturation and luminosity drift."}], "noise_anchor": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Typically set to between 1.0 and 0.0. Lower values cerate a grittier, more detailed image."}], "s_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Adds extra SDE noise. Values around 1.03-1.07 can lead to a moderate boost in detail and paint textures."}], "s_noise_substep": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Adds extra SDE noise. Values around 1.03-1.07 can lead to a moderate boost in detail and paint textures."}], "d_noise": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Downscales the sigma schedule. Values around 0.98-0.95 can lead to a large boost in detail and paint textures."}], "d_noise_start_step": ["INT", {"default": 0, "min": 0, "max": 10000}], "d_noise_inv": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01, "tooltip": "Upscales the sigma schedule. Will soften the image and deepen colors. Use after d_noise to counteract desaturation."}], "d_noise_inv_start_step": ["INT", {"default": 1, "min": 0, "max": 10000}]}, "optional": {"noise_scaling_weights": ["SIGMAS"], "noise_scaling_etas": ["SIGMAS"], "options": ["OPTIONS"]}}, "input_order": {"required": ["noise_scaling_weight", "noise_scaling_type", "noise_scaling_mode", "noise_scaling_eta", "noise_scaling_start_step", "noise_scaling_end_step", "sampler_scaling_normalize", "noise_anchor", "s_noise", "s_noise_substep", "d_noise", "d_noise_start_step", "d_noise_inv", "d_noise_inv_start_step"], "optional": ["noise_scaling_weights", "noise_scaling_etas", "options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_DetailBoost_Beta", "display_name": "ClownOptions_DetailBoost_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_Momentum_Beta": {"input": {"required": {"momentum": ["FLOAT", {"default": 0.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false, "tooltip": "Accelerate convergence with positive values when sampling, negative values when unsampling."}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["momentum"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_Momentum_Beta", "display_name": "ClownOptions_Momentum_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_ImplicitSteps_Beta": {"input": {"required": {"implicit_type": [["rebound", "retro-eta", "bongmath", "predictor-corrector"], {"default": "bongmath"}], "implicit_type_substeps": [["rebound", "retro-eta", "bongmath", "predictor-corrector"], {"default": "bongmath"}], "implicit_steps": ["INT", {"default": 0, "min": 0, "max": 10000}], "implicit_substeps": ["INT", {"default": 0, "min": 0, "max": 10000}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["implicit_type", "implicit_type_substeps", "implicit_steps", "implicit_substeps"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_ImplicitSteps_Beta", "display_name": "ClownOptions_ImplicitSteps_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_SwapSampler_Beta": {"input": {"required": {"sampler_name": [["none", "multistep/res_2m", "multistep/res_3m", "exponential/res_2s_rkmk2e", "exponential/res_2s", "exponential/res_3s", "exponential/res_3s_alt", "exponential/res_3s_cox_matthews", "exponential/res_3s_lie", "exponential/res_3s_strehmel_weiner", "exponential/res_4s_krogstad", "exponential/res_4s_krogstad_alt", "exponential/res_4s_strehmel_weiner", "exponential/res_4s_strehmel_weiner_alt", "exponential/res_4s_cox_matthews", "exponential/res_4s_cfree4", "exponential/res_4s_friedli", "exponential/res_4s_minchev", "exponential/res_4s_munthe-kaas", "exponential/res_5s", "exponential/res_5s_hochbruck-ostermann", "exponential/res_6s", "exponential/res_8s", "exponential/res_8s_alt", "exponential/res_10s", "exponential/res_15s", "exponential/res_16s", "exponential/etdrk2_2s", "exponential/etdrk3_a_3s", "exponential/etdrk3_b_3s", "exponential/etdrk4_4s", "exponential/etdrk4_4s_alt", "hybrid/pec423_2h2s", "hybrid/pec433_2h3s", "hybrid/abnorsett2_1h2s", "hybrid/abnorsett3_2h2s", "hybrid/abnorsett4_3h2s", "multistep/dpmpp_2m", "multistep/dpmpp_3m", "multistep/abnorsett_2m", "multistep/abnorsett_3m", "multistep/abnorsett_4m", "multistep/deis_2m", "multistep/deis_3m", "multistep/deis_4m", "linear/ralston_2s", "linear/ralston_3s", "linear/ralston_4s", "exponential/dpmpp_2s", "exponential/dpmpp_sde_2s", "exponential/dpmpp_3s", "exponential/lawson2a_2s", "exponential/lawson2b_2s", "exponential/lawson4_4s", "exponential/lawson41-gen_4s", "exponential/lawson41-gen-mod_4s", "hybrid/lawson42-gen-mod_1h4s", "hybrid/lawson43-gen-mod_2h4s", "hybrid/lawson44-gen-mod_3h4s", "hybrid/lawson45-gen-mod_4h4s", "linear/midpoint_2s", "linear/heun_2s", "linear/heun_3s", "linear/houwen-wray_3s", "linear/kutta_3s", "linear/ssprk3_3s", "linear/ssprk4_4s", "linear/rk38_4s", "linear/rk4_4s", "linear/rk5_7s", "linear/rk6_7s", "linear/bogacki-shampine_4s", "linear/bogacki-shampine_7s", "linear/dormand-prince_6s", "linear/dormand-prince_13s", "linear/tsi_7s", "exponential/ddim", "linear/euler", "diag_implicit/irk_exp_diag_2s", "fully_implicit/gauss-legendre_2s", "fully_implicit/gauss-legendre_3s", "fully_implicit/gauss-legendre_4s", "fully_implicit/gauss-legendre_4s_ascending_a", "fully_implicit/gauss-legendre_4s_alt", "fully_implicit/gauss-legendre_5s", "fully_implicit/gauss-legendre_5s_ascending", "fully_implicit/radau_ia_2s", "fully_implicit/radau_ia_3s", "fully_implicit/radau_iia_2s", "fully_implicit/radau_iia_3s", "fully_implicit/radau_iia_3s_alt", "fully_implicit/radau_iia_5s", "fully_implicit/radau_iia_7s", "fully_implicit/radau_iia_9s", "fully_implicit/radau_iia_11s", "fully_implicit/lobatto_iiia_2s", "fully_implicit/lobatto_iiia_3s", "fully_implicit/lobatto_iiia_4s", "fully_implicit/lobatto_iiib_2s", "fully_implicit/lobatto_iiib_3s", "fully_implicit/lobatto_iiib_4s", "fully_implicit/lobatto_iiic_2s", "fully_implicit/lobatto_iiic_3s", "fully_implicit/lobatto_iiic_4s", "fully_implicit/lobatto_iiic_star_2s", "fully_implicit/lobatto_iiic_star_3s", "fully_implicit/lobatto_iiid_2s", "fully_implicit/lobatto_iiid_3s", "diag_implicit/kraaijevanger_spijker_2s", "diag_implicit/qin_zhang_2s", "diag_implicit/pareschi_russo_2s", "diag_implicit/pareschi_russo_alt_2s", "diag_implicit/crouzeix_2s", "diag_implicit/crouzeix_3s", "diag_implicit/crouzeix_3s_alt"], {"default": "multistep/res_2m"}], "swap_below_err": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01, "round": false, "tooltip": "Swap samplers if the error per step falls below this threshold."}], "swap_at_step": ["INT", {"default": 30, "min": 1, "max": 10000}], "log_err_to_console": ["BOOLEAN", {"default": false}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["sampler_name", "swap_below_err", "swap_at_step", "log_err_to_console"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_SwapSampler_Beta", "display_name": "ClownOptions_SwapSampler_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_ExtraOptions_Beta": {"input": {"required": {"extra_options": ["STRING", {"default": "", "multiline": true}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["extra_options"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_ExtraOptions_Beta", "display_name": "ClownOptions_ExtraOptions_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_Automation_Beta": {"input": {"required": {}, "optional": {"etas": ["SIGMAS"], "etas_substep": ["SIGMAS"], "s_noises": ["SIGMAS"], "s_noises_substep": ["SIGMAS"], "epsilon_scales": ["SIGMAS"], "frame_weights": ["SIGMAS"], "options": ["OPTIONS"]}}, "input_order": {"required": [], "optional": ["etas", "etas_substep", "s_noises", "s_noises_substep", "epsilon_scales", "frame_weights", "options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_Automation_Beta", "display_name": "ClownOptions_Automation_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_Combine": {"input": {"required": {"options": ["OPTIONS"]}}, "input_order": {"required": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_Combine", "display_name": "ClownOptions_Combine", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "ClownOptions_Frameweights": {"input": {"required": {"apply_to": [["frame_weights", "frame_weights_inv"], {"default": "frame_weights", "tooltip": "Apply the frame weights to the foreground mask or the inverse mask of the guides"}], "dynamics": [["constant", "linear", "ease_out", "ease_in"], {"default": "ease_out", "tooltip": "The function type used for the dynamic period. constant: no change, linear: steady change, ease_out: starts fast, ease_in: starts slow"}], "schedule": [["moderate_early", "moderate_late", "fast_early", "fast_late", "slow_early", "slow_late"], {"default": "moderate_early", "tooltip": "fast_early: fast change starts immediately, slow_late: slow change starts later"}], "scale": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01, "tooltip": "The amount of change over the course of the frame weights. 1.0 means that the guides have no influence by the end."}], "reverse": ["BOOLEAN", {"default": false, "tooltip": "Reverse the frame weights"}]}, "optional": {"frame_weights": ["SIGMAS", {"tooltip": "Overrides all other settings EXCEPT reverse."}], "options": ["OPTIONS"]}}, "input_order": {"required": ["apply_to", "dynamics", "schedule", "scale", "reverse"], "optional": ["frame_weights", "options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "ClownOptions_Frameweights", "display_name": "ClownOptions_Frameweights", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "SharkOptions_GuideCond_Beta": {"input": {"required": {}, "optional": {"positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "cfg": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "options": ["OPTIONS"]}}, "input_order": {"required": [], "optional": ["positive", "negative", "cfg", "options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "SharkOptions_GuideCond_Beta", "display_name": "SharkOptions_GuideCond_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "SharkOptions_Beta": {"input": {"required": {"noise_type_init": [["none", "brownian", "gaussian", "gaussian_backwards", "laplacian", "perlin", "studentt", "uniform", "wavelet", "brown", "pink", "white", "blue", "violet", "ultraviolet_A", "ultraviolet_B", "ultraviolet_C", "hires-pyramid-bicubic", "hires-pyramid-bilinear", "hires-pyramid-nearest", "pyramid-bicubic", "pyramid-bilinear", "pyramid-nearest", "pyramid-interpolated", "pyramid-cascade_B"], {"default": "gaussian"}], "noise_stdev": ["FLOAT", {"default": 1.0, "min": -10000.0, "max": 10000.0, "step": 0.01, "round": false}], "denoise_alt": ["FLOAT", {"default": 1.0, "min": -10000, "max": 10000, "step": 0.01}], "channelwise_cfg": ["BOOLEAN", {"default": false}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["noise_type_init", "noise_stdev", "denoise_alt", "channelwise_cfg"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "SharkOptions_Beta", "display_name": "SharkOptions_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "SharkOptions_UltraCascade_Latent_Beta": {"input": {"required": {"width": ["INT", {"default": 60, "min": 1, "max": 16384, "step": 1}], "height": ["INT", {"default": 36, "min": 1, "max": 16384, "step": 1}]}, "optional": {"options": ["OPTIONS"]}}, "input_order": {"required": ["width", "height"], "optional": ["options"]}, "output": ["OPTIONS"], "output_is_list": [false], "output_name": ["options"], "name": "SharkOptions_UltraCascade_Latent_Beta", "display_name": "SharkOptions_UltraCascade_Latent_Beta", "description": "", "python_module": "custom_nodes.RES4LYF", "category": "RES4LYF/sampler_options", "output_node": false}, "Context Big (rgthree)": {"input": {"required": {}, "optional": {"base_ctx": ["RGTHREE_CONTEXT"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "images": ["IMAGE"], "seed": ["INT", {"forceInput": true}], "steps": ["INT", {"forceInput": true}], "step_refiner": ["INT", {"forceInput": true}], "cfg": ["FLOAT", {"forceInput": true}], "ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], {"forceInput": true}], "sampler": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], {"forceInput": true}], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], {"forceInput": true}], "clip_width": ["INT", {"forceInput": true}], "clip_height": ["INT", {"forceInput": true}], "text_pos_g": ["STRING", {"forceInput": true}], "text_pos_l": ["STRING", {"forceInput": true}], "text_neg_g": ["STRING", {"forceInput": true}], "text_neg_l": ["STRING", {"forceInput": true}], "mask": ["MASK"], "control_net": ["CONTROL_NET"]}, "hidden": {}}, "input_order": {"required": [], "optional": ["base_ctx", "model", "clip", "vae", "positive", "negative", "latent", "images", "seed", "steps", "step_refiner", "cfg", "ckpt_name", "sampler", "scheduler", "clip_width", "clip_height", "text_pos_g", "text_pos_l", "text_neg_g", "text_neg_l", "mask", "control_net"], "hidden": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", ["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Big (rgthree)", "display_name": "Context Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context (rgthree)": {"input": {"required": {}, "optional": {"base_ctx": ["RGTHREE_CONTEXT"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent": ["LATENT"], "images": ["IMAGE"], "seed": ["INT", {"forceInput": true}]}, "hidden": {"version": "FLOAT"}}, "input_order": {"required": [], "optional": ["base_ctx", "model", "clip", "vae", "positive", "negative", "latent", "images", "seed"], "hidden": ["version"]}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context (rgthree)", "display_name": "Context (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Switch (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context Switch (rgthree)", "display_name": "Context Switch (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Switch Big (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", ["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Switch Big (rgthree)", "display_name": "Context Switch Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Merge (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT"], "output_is_list": [false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED"], "name": "Context Merge (rgthree)", "display_name": "Context Merge (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Context Merge Big (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["RGTHREE_CONTEXT", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT", "INT", "INT", "FLOAT", ["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"], ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"], "INT", "INT", "STRING", "STRING", "STRING", "STRING", "MASK", "CONTROL_NET"], "output_is_list": [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], "output_name": ["CONTEXT", "MODEL", "CLIP", "VAE", "POSITIVE", "NEGATIVE", "LATENT", "IMAGE", "SEED", "STEPS", "STEP_REFINER", "CFG", "CKPT_NAME", "SAMPLER", "SCHEDULER", "CLIP_WIDTH", "CLIP_HEIGHT", "TEXT_POS_G", "TEXT_POS_L", "TEXT_NEG_G", "TEXT_NEG_L", "MASK", "CONTROL_NET"], "name": "Context Merge Big (rgthree)", "display_name": "Context Merge Big (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Display Int (rgthree)": {"input": {"required": {"input": ["INT", {"forceInput": true}]}}, "input_order": {"required": ["input"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Display Int (rgthree)", "display_name": "Display Int (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Display Any (rgthree)": {"input": {"required": {"source": ["*", {}]}}, "input_order": {"required": ["source"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Display Any (rgthree)", "display_name": "Display Any (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Lora Loader Stack (rgthree)": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_01": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_01": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_02": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_02": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_03": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_03": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "lora_04": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_04": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_01", "strength_01", "lora_02", "strength_02", "lora_03", "strength_03", "lora_04", "strength_04"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Loader Stack (rgthree)", "display_name": "Lora Loader Stack (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Seed (rgthree)": {"input": {"required": {"seed": ["INT", {"default": 0, "min": -1125899906842624, "max": 1125899906842624}]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["seed"], "hidden": ["prompt", "extra_pnginfo", "unique_id"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["SEED"], "name": "Seed (rgthree)", "display_name": "Seed (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Inset Crop (rgthree)": {"input": {"required": {"image": ["IMAGE"], "measurement": [["Pixels", "Percentage"]], "left": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "right": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "top": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}], "bottom": ["INT", {"default": 0, "min": 0, "max": 16384, "step": 8}]}}, "input_order": {"required": ["image", "measurement", "left", "right", "top", "bottom"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Inset Crop (rgthree)", "display_name": "Image Inset Crop (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Prompt (rgthree)": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_model": ["MODEL"], "opt_clip": ["CLIP"], "insert_lora": [["CHOOSE", "DISABLE LORAS", "0193 NIKKE RAPI_v1", "0203 Soryu Asuka Langley_v1", "AndreaBruno-000014", "Andrian_Luchian", "Anime Art V3", "Daniel_Hahn-4", "Exogenous", "FGstyle", "Fantasy World", "Felix_Meynet", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0", "Flux/1980s_jp_girl_flux", "Flux/AT-ST_-_Scout_Walker_Flux", "Flux/Anime Art V3", "Flux/CPA_CynerPunkAnime", "Flux/Flux DetailerV2", "Flux/Girl_with_Pearl_Earring_FLUX-000009", "Flux/IKEA_Instructions_Style_FLUX", "Flux/Line drawing -flux-lora_One thought V1 ", "Flux/Lineart_v2_flux-000010", "Flux/Luminous_Shadowscape-000016", "Flux/MECHS/flux_emata4000", "Flux/MinimalistLineArt_Flux", "Flux/Modern_Abstract_Minimalist", "Flux/MoriiMee_Gothic_Niji_Style_FLUX", "Flux/Neon_Cyberpunk_Cyberspace_FLUX", "Flux/Nissan_Skyline_GT-R_R34", "Flux/OtherRides/gatling-000004", "Flux/OtherRides/gatling-000008", "Flux/OtherRides/gatling", "Flux/OtherRides/rock-000004", "Flux/OtherRides/rock-000008", "Flux/OtherRides/rock", "Flux/Porsche 718 Spyder RS_000003500", "Flux/RetroAnimeFluxV1", "Flux/Sinfully_Stylish_1.0_Flux", "Flux/TTCSV1.0-000010", "Flux/aidmaFLUXPro1.1-FLUX-v0.3", "Flux/aidmaFLuxPro1.1-IL-v0.3", "Flux/aidmaMJ6.1-FLUX-v0.5", "Flux/aidmaRealisticSkin-FLUX-v0.1", "Flux/anotherdysto02-000019", "Flux/autumn-002-000004", "Flux/autumn-002-000008", "Flux/autumn-002-000012", "Flux/autumn-002", "Flux/ethereal-dystopia01FL", "Flux/flux dtmh", "Flux/flux.1_lora_flyway_Epic-detail_v2", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2", "Flux/flux_realism_lora", "Flux/if-model-03-000008", "Flux/madocalypse", "Flux/mjV6", "Flux/moody-fog", "Flux/neon-mist03-000015", "Flux/qiu_blue_000009500", "Flux/styles/DTLDR-F", "Flux/styles/GLSHS", "Flux/styles/GTHAN-F", "Flux/styles/NEOSTF-000001", "Flux/styles/NSTLG_-_NSFW", "Flux/styles/superdemidov", "Flux/velozzi-red-003-000012", "Flux/volt-post-000012", "FluxMythP0rtr4itStyle", "Luminous_Shadowscape-000016", "MOONZ_COMIC_PORTRAITS", "MS_Real_Ass_on_Glass_Lite", "Ma.k", "Mangaka_3012", "MoriiMee_Gothic_Niji_Style_FLUX", "Paul_Chadeisson", "Richard_Anderson-5", "Sci-fi_env_flux", "South_Park_style_flux", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF", "akirabikev0.2", "artilands_v02-000006", "car sketch", "clip_l", "designed_by_Norman_Foster_FLUX_304", "designed_by_Steven_Holl_FLUX_308", "glassball-000014", "l4nc145tr4t05z3r0", "lora-AITK-watercolor", "m200-000015", "oue_style_flux_lora_000003000", "princess_xl_v1", "sd15/Anime-Merged", "sd15/Cyberpunk-Anime-Diffusion", "sd15/EpicSpaceMachine", "sd15/PaperCut_v1", "sd15/Tron-Legacy-Style-trnlgcy", "sd15/bubblydubbly", "sd15/eldenRing-v3-pruned", "sd15/feralplmr_artstyle", "sd15/inkpunk-diffusion-v1", "sd15/interior", "sd15/mdjrny-v4", "sd15/moDi-v1-pruned", "sd15/pytorch_lora_weights", "sd15/quadruped mechasV2", "sd15/realisticVisionV30_v30VAE", "sd15/redshift-diffusion-v1", "sd15/robo-diffusion-v1", "sd15/samdoartsultmerge", "sd15/tdst4000", "sd15/trinart_characters_it4_v1", "sd15/v1-5-pruned-emaonly", "sdxl/Ahegaoo", "sdxl/DonMCyb3rN3cr0XL-000009", "sdxl/Drone_Cars_XL", "sdxl/Japanese_INK", "sdxl/Krekkov Illust", "sdxl/Phy_model_crv", "sdxl/Surfacing_v1", "sdxl/Surreal Harmony", "sdxl/aiBeautyIthlinni_ithlinniV1", "sdxl/amzn_mscles_64_new", "sdxl/aresMix_v02", "sdxl/cardrifting", "sdxl/cumshot_49", "sdxl/daddario_lora_sdxl_v1-000008", "sdxl/incase_style_v3-1_ponyxl_ilff", "sdxl/ip-adapter-faceid-plusv2_sd15_lora", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora", "sdxl/ip-adapter-faceid_sd15_lora", "sdxl/ip-adapter-faceid_sdxl_lora", "sdxl/knolling3", "sdxl/lineart/Coloring_book_-_LineArt", "sdxl/lineart/continuous line art", "sdxl/lineart/lineartSDXL", "sdxl/lineart/samsung_line_art", "sdxl/megastructure-V1", "sdxl/nsfw/Erect Horse Penis", "sdxl/nsfw/FemBush-V4", "sdxl/nsfw/GodPussy1 v4", "sdxl/nsfw/InniePussy1 v4", "sdxl/nsfw/Moo_DengXLP", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009", "sdxl/nsfw/ass_support_object_v0.2", "sdxl/nsfw/backless panties xl", "sdxl/nsfw/minigts_sdxl_64", "sdxl/nsfw/model-lora-Bottom 1.0.bis", "sdxl/nsfw/multiple_labia_ringsV60", "sdxl/nsfw/nudify_xl_lite", "sdxl/nsfw/onoffxl.2023.10.02", "sdxl/princess_xl_v1", "sdxl/product_shot_of", "sdxl/pytorch_lora_weights", "sdxl/restfeetup55_rvkwi", "sdxl/sc0lpt - Figure Sculpture", "sdxl/tech_streetwear", "sdxl/xarchex_v1", "zeekars"]], "insert_embedding": [["CHOOSE", "easynegative"]], "insert_saved": [["CHOOSE"]]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt"], "optional": ["opt_model", "opt_clip", "insert_lora", "insert_embedding", "insert_saved"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["CONDITIONING", "MODEL", "CLIP", "TEXT"], "name": "Power Prompt (rgthree)", "display_name": "Power Prompt (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Power Prompt - Simple (rgthree)": {"input": {"required": {"prompt": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_clip": ["CLIP"], "insert_embedding": [["CHOOSE", "easynegative"]], "insert_saved": [["CHOOSE"]]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt"], "optional": ["opt_clip", "insert_embedding", "insert_saved"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "STRING"], "output_is_list": [false, false], "output_name": ["CONDITIONING", "TEXT"], "name": "Power Prompt - Simple (rgthree)", "display_name": "Power Prompt - Simple (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "KSampler Config (rgthree)": {"input": {"required": {"steps_total": ["INT", {"default": 30, "min": 1, "max": 16384, "step": 1}], "refiner_step": ["INT", {"default": 24, "min": 1, "max": 16384, "step": 1}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0, "step": 0.5}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]]}}, "input_order": {"required": ["steps_total", "refiner_step", "cfg", "sampler_name", "scheduler"]}, "output": ["INT", "INT", "FLOAT", ["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"], ["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "output_is_list": [false, false, false, false, false], "output_name": ["STEPS", "REFINER_STEP", "CFG", "SAMPLER", "SCHEDULER"], "name": "KSampler Config (rgthree)", "display_name": "KSampler Config (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Empty Latent Image (rgthree)": {"input": {"required": {"dimensions": [["1536 x 640   (landscape)", "1344 x 768   (landscape)", "1216 x 832   (landscape)", "1152 x 896   (landscape)", "1024 x 1024  (square)", " 896 x 1152  (portrait)", " 832 x 1216  (portrait)", " 768 x 1344  (portrait)", " 640 x 1536  (portrait)"], {"default": "1024 x 1024  (square)"}], "clip_scale": ["FLOAT", {"default": 2.0, "min": 1.0, "max": 10.0, "step": 0.5}], "batch_size": ["INT", {"default": 1, "min": 1, "max": 64}]}}, "input_order": {"required": ["dimensions", "clip_scale", "batch_size"]}, "output": ["LATENT", "INT", "INT"], "output_is_list": [false, false, false], "output_name": ["LATENT", "CLIP_WIDTH", "CLIP_HEIGHT"], "name": "SDXL Empty Latent Image (rgthree)", "display_name": "SDXL Empty Latent Image (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Power Prompt - Positive (rgthree)": {"input": {"required": {"prompt_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "prompt_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_model": ["MODEL"], "opt_clip": ["CLIP"], "opt_clip_width": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "opt_clip_height": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "insert_lora": [["CHOOSE", "DISABLE LORAS", "0193 NIKKE RAPI_v1", "0203 Soryu Asuka Langley_v1", "AndreaBruno-000014", "Andrian_Luchian", "Anime Art V3", "Daniel_Hahn-4", "Exogenous", "FGstyle", "Fantasy World", "Felix_Meynet", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0", "Flux/1980s_jp_girl_flux", "Flux/AT-ST_-_Scout_Walker_Flux", "Flux/Anime Art V3", "Flux/CPA_CynerPunkAnime", "Flux/Flux DetailerV2", "Flux/Girl_with_Pearl_Earring_FLUX-000009", "Flux/IKEA_Instructions_Style_FLUX", "Flux/Line drawing -flux-lora_One thought V1 ", "Flux/Lineart_v2_flux-000010", "Flux/Luminous_Shadowscape-000016", "Flux/MECHS/flux_emata4000", "Flux/MinimalistLineArt_Flux", "Flux/Modern_Abstract_Minimalist", "Flux/MoriiMee_Gothic_Niji_Style_FLUX", "Flux/Neon_Cyberpunk_Cyberspace_FLUX", "Flux/Nissan_Skyline_GT-R_R34", "Flux/OtherRides/gatling-000004", "Flux/OtherRides/gatling-000008", "Flux/OtherRides/gatling", "Flux/OtherRides/rock-000004", "Flux/OtherRides/rock-000008", "Flux/OtherRides/rock", "Flux/Porsche 718 Spyder RS_000003500", "Flux/RetroAnimeFluxV1", "Flux/Sinfully_Stylish_1.0_Flux", "Flux/TTCSV1.0-000010", "Flux/aidmaFLUXPro1.1-FLUX-v0.3", "Flux/aidmaFLuxPro1.1-IL-v0.3", "Flux/aidmaMJ6.1-FLUX-v0.5", "Flux/aidmaRealisticSkin-FLUX-v0.1", "Flux/anotherdysto02-000019", "Flux/autumn-002-000004", "Flux/autumn-002-000008", "Flux/autumn-002-000012", "Flux/autumn-002", "Flux/ethereal-dystopia01FL", "Flux/flux dtmh", "Flux/flux.1_lora_flyway_Epic-detail_v2", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2", "Flux/flux_realism_lora", "Flux/if-model-03-000008", "Flux/madocalypse", "Flux/mjV6", "Flux/moody-fog", "Flux/neon-mist03-000015", "Flux/qiu_blue_000009500", "Flux/styles/DTLDR-F", "Flux/styles/GLSHS", "Flux/styles/GTHAN-F", "Flux/styles/NEOSTF-000001", "Flux/styles/NSTLG_-_NSFW", "Flux/styles/superdemidov", "Flux/velozzi-red-003-000012", "Flux/volt-post-000012", "FluxMythP0rtr4itStyle", "Luminous_Shadowscape-000016", "MOONZ_COMIC_PORTRAITS", "MS_Real_Ass_on_Glass_Lite", "Ma.k", "Mangaka_3012", "MoriiMee_Gothic_Niji_Style_FLUX", "Paul_Chadeisson", "Richard_Anderson-5", "Sci-fi_env_flux", "South_Park_style_flux", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF", "akirabikev0.2", "artilands_v02-000006", "car sketch", "clip_l", "designed_by_Norman_Foster_FLUX_304", "designed_by_Steven_Holl_FLUX_308", "glassball-000014", "l4nc145tr4t05z3r0", "lora-AITK-watercolor", "m200-000015", "oue_style_flux_lora_000003000", "princess_xl_v1", "sd15/Anime-Merged", "sd15/Cyberpunk-Anime-Diffusion", "sd15/EpicSpaceMachine", "sd15/PaperCut_v1", "sd15/Tron-Legacy-Style-trnlgcy", "sd15/bubblydubbly", "sd15/eldenRing-v3-pruned", "sd15/feralplmr_artstyle", "sd15/inkpunk-diffusion-v1", "sd15/interior", "sd15/mdjrny-v4", "sd15/moDi-v1-pruned", "sd15/pytorch_lora_weights", "sd15/quadruped mechasV2", "sd15/realisticVisionV30_v30VAE", "sd15/redshift-diffusion-v1", "sd15/robo-diffusion-v1", "sd15/samdoartsultmerge", "sd15/tdst4000", "sd15/trinart_characters_it4_v1", "sd15/v1-5-pruned-emaonly", "sdxl/Ahegaoo", "sdxl/DonMCyb3rN3cr0XL-000009", "sdxl/Drone_Cars_XL", "sdxl/Japanese_INK", "sdxl/Krekkov Illust", "sdxl/Phy_model_crv", "sdxl/Surfacing_v1", "sdxl/Surreal Harmony", "sdxl/aiBeautyIthlinni_ithlinniV1", "sdxl/amzn_mscles_64_new", "sdxl/aresMix_v02", "sdxl/cardrifting", "sdxl/cumshot_49", "sdxl/daddario_lora_sdxl_v1-000008", "sdxl/incase_style_v3-1_ponyxl_ilff", "sdxl/ip-adapter-faceid-plusv2_sd15_lora", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora", "sdxl/ip-adapter-faceid_sd15_lora", "sdxl/ip-adapter-faceid_sdxl_lora", "sdxl/knolling3", "sdxl/lineart/Coloring_book_-_LineArt", "sdxl/lineart/continuous line art", "sdxl/lineart/lineartSDXL", "sdxl/lineart/samsung_line_art", "sdxl/megastructure-V1", "sdxl/nsfw/Erect Horse Penis", "sdxl/nsfw/FemBush-V4", "sdxl/nsfw/GodPussy1 v4", "sdxl/nsfw/InniePussy1 v4", "sdxl/nsfw/Moo_DengXLP", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009", "sdxl/nsfw/ass_support_object_v0.2", "sdxl/nsfw/backless panties xl", "sdxl/nsfw/minigts_sdxl_64", "sdxl/nsfw/model-lora-Bottom 1.0.bis", "sdxl/nsfw/multiple_labia_ringsV60", "sdxl/nsfw/nudify_xl_lite", "sdxl/nsfw/onoffxl.2023.10.02", "sdxl/princess_xl_v1", "sdxl/product_shot_of", "sdxl/pytorch_lora_weights", "sdxl/restfeetup55_rvkwi", "sdxl/sc0lpt - Figure Sculpture", "sdxl/tech_streetwear", "sdxl/xarchex_v1", "zeekars"]], "insert_embedding": [["CHOOSE", "easynegative"]], "insert_saved": [["CHOOSE"]], "target_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "target_height": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_height": ["INT", {"default": -1, "min": -1, "max": 16384}]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt_g", "prompt_l"], "optional": ["opt_model", "opt_clip", "opt_clip_width", "opt_clip_height", "insert_lora", "insert_embedding", "insert_saved", "target_width", "target_height", "crop_width", "crop_height"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "MODEL", "CLIP", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["CONDITIONING", "MODEL", "CLIP", "TEXT_G", "TEXT_L"], "name": "SDXL Power Prompt - Positive (rgthree)", "display_name": "SDXL Power Prompt - Positive (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "SDXL Power Prompt - Simple / Negative (rgthree)": {"input": {"required": {"prompt_g": ["STRING", {"multiline": true, "dynamicPrompts": true}], "prompt_l": ["STRING", {"multiline": true, "dynamicPrompts": true}]}, "optional": {"opt_clip": ["CLIP"], "opt_clip_width": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "opt_clip_height": ["INT", {"forceInput": true, "default": 1024.0, "min": 0, "max": 16384}], "insert_embedding": [["CHOOSE", "easynegative"]], "insert_saved": [["CHOOSE"]], "target_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "target_height": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_width": ["INT", {"default": -1, "min": -1, "max": 16384}], "crop_height": ["INT", {"default": -1, "min": -1, "max": 16384}]}, "hidden": {"values_insert_saved": [["CHOOSE"]]}}, "input_order": {"required": ["prompt_g", "prompt_l"], "optional": ["opt_clip", "opt_clip_width", "opt_clip_height", "insert_embedding", "insert_saved", "target_width", "target_height", "crop_width", "crop_height"], "hidden": ["values_insert_saved"]}, "output": ["CONDITIONING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["CONDITIONING", "TEXT_G", "TEXT_L"], "name": "SDXL Power Prompt - Simple / Negative (rgthree)", "display_name": "SDXL Power Prompt - Simple / Negative (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Any Switch (rgthree)": {"input": {"required": {}, "optional": {}}, "input_order": {"required": [], "optional": []}, "output": ["*"], "output_is_list": [false], "output_name": ["*"], "name": "Any Switch (rgthree)", "display_name": "Any Switch (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "Image Comparer (rgthree)": {"input": {"required": {}, "optional": {"image_a": ["IMAGE"], "image_b": ["IMAGE"]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": [], "optional": ["image_a", "image_b"], "hidden": ["prompt", "extra_pnginfo"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Image Comparer (rgthree)", "display_name": "Image Comparer (rgthree)", "description": "Saves the input images to your ComfyUI output directory.", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": true}, "Power Lora Loader (rgthree)": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"]}, "optional": {}, "hidden": {}}, "input_order": {"required": ["model", "clip"], "optional": [], "hidden": []}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Power Lora Loader (rgthree)", "display_name": "Power Lora Loader (rgthree)", "description": "", "python_module": "custom_nodes.rgthree-comfy", "category": "rgthree", "output_node": false}, "TestNode": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "TestNode", "display_name": "Test Node", "description": "", "python_module": "custom_nodes.test_node", "category": "test", "output_node": false}, "BLIP Model Loader": {"input": {"required": {"blip_model": ["STRING", {"default": "Salesforce/blip-image-captioning-base"}], "vqa_model_id": ["STRING", {"default": "Salesforce/blip-vqa-base"}], "device": [["cuda", "cpu"]]}}, "input_order": {"required": ["blip_model", "vqa_model_id", "device"]}, "output": ["BLIP_MODEL"], "output_is_list": [false], "output_name": ["BLIP_MODEL"], "name": "BLIP Model Loader", "display_name": "BLIP Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Blend Latents": {"input": {"required": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "operation": [["add", "multiply", "divide", "subtract", "overlay", "hard_light", "soft_light", "screen", "linear_dodge", "difference", "exclusion", "random"]], "blend": ["FLOAT", {"default": 0.5, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["latent_a", "latent_b", "operation", "blend"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Blend Latents", "display_name": "Blend Latents", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent", "output_node": false}, "Bus Node": {"input": {"required": {}, "optional": {"bus": ["BUS"], "model": ["MODEL"], "clip": ["CLIP"], "vae": ["VAE"], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"]}}, "input_order": {"required": [], "optional": ["bus", "model", "clip", "vae", "positive", "negative"]}, "output": ["BUS", "MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING"], "output_is_list": [false, false, false, false, false, false], "output_name": ["bus", "model", "clip", "vae", "positive", "negative"], "name": "Bus Node", "display_name": "Bus Node", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Utilities", "output_node": false}, "Cache Node": {"input": {"required": {"latent_suffix": ["STRING", {"default": "33596251_cache", "multiline": false}], "image_suffix": ["STRING", {"default": "59726345_cache", "multiline": false}], "conditioning_suffix": ["STRING", {"default": "29935188_cache", "multiline": false}]}, "optional": {"output_path": ["STRING", {"default": "/media/hiro/AI_Drive/Linux/ComfyUI/custom_nodes/was-node-suite-comfyui/cache", "multiline": false}], "latent": ["LATENT"], "image": ["IMAGE"], "conditioning": ["CONDITIONING"]}}, "input_order": {"required": ["latent_suffix", "image_suffix", "conditioning_suffix"], "optional": ["output_path", "latent", "image", "conditioning"]}, "output": ["STRING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["latent_filename", "image_filename", "conditioning_filename"], "name": "Cache Node", "display_name": "Cache Node", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Checkpoint Loader": {"input": {"required": {"config_name": [["anything_v3.yaml", "v1-inference.yaml", "v1-inference_clip_skip_2.yaml", "v1-inference_clip_skip_2_fp16.yaml", "v1-inference_fp16.yaml", "v1-inpainting-inference.yaml", "v2-inference-v.yaml", "v2-inference-v_fp32.yaml", "v2-inference.yaml", "v2-inference_fp32.yaml", "v2-inpainting-inference.yaml"]], "ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["config_name", "ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Checkpoint Loader", "display_name": "Checkpoint Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Checkpoint Loader (Simple)": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Checkpoint Loader (Simple)", "display_name": "Checkpoint Loader (Simple)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "CLIPTextEncode (NSP)": {"input": {"required": {"mode": [["Noodle Soup Prompts", "Wildcards"]], "noodle_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "text": ["STRING", {"multiline": true}], "clip": ["CLIP"]}}, "input_order": {"required": ["mode", "noodle_key", "seed", "text", "clip"]}, "output": ["CONDITIONING", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["conditioning", "parsed_text", "raw_text"], "name": "CLIPTextEncode (NSP)", "display_name": "CLIPTextEncode (NSP)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Conditioning", "output_node": true}, "CLIP Input Switch": {"input": {"required": {"clip_a": ["CLIP"], "clip_b": ["CLIP"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["clip_a", "clip_b", "boolean"]}, "output": ["CLIP"], "output_is_list": [false], "output_name": ["CLIP"], "name": "CLIP Input Switch", "display_name": "CLIP Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "CLIP Vision Input Switch": {"input": {"required": {"clip_vision_a": ["CLIP_VISION"], "clip_vision_b": ["CLIP_VISION"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["clip_vision_a", "clip_vision_b", "boolean"]}, "output": ["CLIP_VISION"], "output_is_list": [false], "output_name": ["CLIP_VISION"], "name": "CLIP Vision Input Switch", "display_name": "CLIP Vision Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Conditioning Input Switch": {"input": {"required": {"conditioning_a": ["CONDITIONING"], "conditioning_b": ["CONDITIONING"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["conditioning_a", "conditioning_b", "boolean"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Conditioning Input Switch", "display_name": "Conditioning Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Constant Number": {"input": {"required": {"number_type": [["integer", "float", "bool"]], "number": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}]}, "optional": {"number_as_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["number_type", "number"], "optional": ["number_as_text"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Constant Number", "display_name": "Constant Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Create Grid Image": {"input": {"required": {"images_path": ["STRING", {"default": "./ComfyUI/input/", "multiline": false}], "pattern_glob": ["STRING", {"default": "*", "multiline": false}], "include_subfolders": [["false", "true"]], "border_width": ["INT", {"default": 3, "min": 0, "max": 100, "step": 1}], "number_of_columns": ["INT", {"default": 6, "min": 1, "max": 24, "step": 1}], "max_cell_size": ["INT", {"default": 256, "min": 32, "max": 1280, "step": 1}], "border_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["images_path", "pattern_glob", "include_subfolders", "border_width", "number_of_columns", "max_cell_size", "border_red", "border_green", "border_blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Grid Image", "display_name": "Create Grid Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Create Grid Image from Batch": {"input": {"required": {"images": ["IMAGE"], "border_width": ["INT", {"default": 3, "min": 0, "max": 100, "step": 1}], "number_of_columns": ["INT", {"default": 6, "min": 1, "max": 24, "step": 1}], "max_cell_size": ["INT", {"default": 256, "min": 32, "max": 2048, "step": 1}], "border_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "border_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["images", "border_width", "number_of_columns", "max_cell_size", "border_red", "border_green", "border_blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Create Grid Image from Batch", "display_name": "Create Grid Image from Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Create Morph Image": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "still_image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph", "multiline": false}], "filetype": [["GIF", "APNG"]]}}, "input_order": {"required": ["image_a", "image_b", "transition_frames", "still_image_delay_ms", "duration_ms", "loops", "max_size", "output_path", "filename", "filetype"]}, "output": ["IMAGE", "IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["image_a_pass", "image_b_pass", "filepath_text", "filename_text"], "name": "Create Morph Image", "display_name": "Create Morph Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "Create Morph Image from Path": {"input": {"required": {"transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "still_image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "input_path": ["STRING", {"default": "./ComfyUI", "multiline": false}], "input_pattern": ["STRING", {"default": "*", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph", "multiline": false}], "filetype": [["GIF", "APNG"]]}}, "input_order": {"required": ["transition_frames", "still_image_delay_ms", "duration_ms", "loops", "max_size", "input_path", "input_pattern", "output_path", "filename", "filetype"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["filepath_text", "filename_text"], "name": "Create Morph Image from Path", "display_name": "Create Morph Image from Path", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "Create Video from Path": {"input": {"required": {"transition_frames": ["INT", {"default": 30, "min": 0, "max": 120, "step": 1}], "image_delay_sec": ["FLOAT", {"default": 2.5, "min": 0.01, "max": 60000.0, "step": 0.01}], "fps": ["INT", {"default": 30, "min": 1, "max": 60.0, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1920, "step": 1}], "input_path": ["STRING", {"default": "./ComfyUI/input", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "comfy_video", "multiline": false}], "codec": [["AVC1", "FFV1", "H264", "MP4V"]]}}, "input_order": {"required": ["transition_frames", "image_delay_sec", "fps", "max_size", "input_path", "output_path", "filename", "codec"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["filepath_text", "filename_text"], "name": "Create Video from Path", "display_name": "Create Video from Path", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "CLIPSeg Masking": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"clipseg_model": ["CLIPSEG_MODEL"]}}, "input_order": {"required": ["image", "text"], "optional": ["clipseg_model"]}, "output": ["MASK", "IMAGE"], "output_is_list": [false, false], "output_name": ["MASK", "MASK_IMAGE"], "name": "CLIPSeg Masking", "display_name": "CLIPSeg Masking", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "CLIPSeg Model Loader": {"input": {"required": {"model": ["STRING", {"default": "CIDAS/clipseg-rd64-refined", "multiline": false}]}}, "input_order": {"required": ["model"]}, "output": ["CLIPSEG_MODEL"], "output_is_list": [false], "output_name": ["clipseg_model"], "name": "CLIPSeg Model Loader", "display_name": "CLIPSeg Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "CLIPSeg Batch Masking": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "text_a": ["STRING", {"default": "", "multiline": false}], "text_b": ["STRING", {"default": "", "multiline": false}]}, "optional": {"image_c": ["IMAGE"], "image_d": ["IMAGE"], "image_e": ["IMAGE"], "image_f": ["IMAGE"], "text_c": ["STRING", {"default": "", "multiline": false}], "text_d": ["STRING", {"default": "", "multiline": false}], "text_e": ["STRING", {"default": "", "multiline": false}], "text_f": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["image_a", "image_b", "text_a", "text_b"], "optional": ["image_c", "image_d", "image_e", "image_f", "text_c", "text_d", "text_e", "text_f"]}, "output": ["IMAGE", "MASK", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["IMAGES_BATCH", "MASKS_BATCH", "MASK_IMAGES_BATCH"], "name": "CLIPSeg Batch Masking", "display_name": "CLIPSeg Batch Masking", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Convert Masks to Images": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGES"], "name": "Convert Masks to Images", "display_name": "Convert Masks to Images", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Control Net Model Input Switch": {"input": {"required": {"control_net_a": ["CONTROL_NET"], "control_net_b": ["CONTROL_NET"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["control_net_a", "control_net_b", "boolean"]}, "output": ["CONTROL_NET"], "output_is_list": [false], "output_name": ["CONTROL_NET"], "name": "Control Net Model Input Switch", "display_name": "Control Net Model Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Debug Number to Console": {"input": {"required": {"number": ["NUMBER"], "label": ["STRING", {"default": "Debug to Console", "multiline": false}]}}, "input_order": {"required": ["number", "label"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Debug Number to Console", "display_name": "Debug Number to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Dictionary to Console": {"input": {"required": {"dictionary": ["DICT"], "label": ["STRING", {"default": "Dictionary Output", "multiline": false}]}}, "input_order": {"required": ["dictionary", "label"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Dictionary to Console", "display_name": "Dictionary to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Diffusers Model Loader": {"input": {"required": {"model_path": [[]]}}, "input_order": {"required": ["model_path"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Diffusers Model Loader", "display_name": "Diffusers Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Diffusers Hub Model Down-Loader": {"input": {"required": {"repo_id": ["STRING", {"multiline": false}], "revision": ["STRING", {"default": "None", "multiline": false}]}}, "input_order": {"required": ["repo_id", "revision"]}, "output": ["MODEL", "CLIP", "VAE", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "NAME_STRING"], "name": "Diffusers Hub Model Down-Loader", "display_name": "Diffusers Hub Model Down-Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders/Advanced", "output_node": false}, "Export API": {"input": {"required": {"save_prompt_api": [["true", "true"]], "output_path": ["STRING", {"default": "./ComfyUI/output/", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI_Prompt"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 2, "max": 9, "step": 1}], "parse_text_tokens": ["BOOLEAN", {"default": false}]}, "hidden": {"prompt": "PROMPT"}}, "input_order": {"required": ["save_prompt_api", "output_path", "filename_prefix", "filename_delimiter", "filename_number_padding", "parse_text_tokens"], "hidden": ["prompt"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Export API", "display_name": "Export API", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Latent Input Switch": {"input": {"required": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["latent_a", "latent_b", "boolean"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Input Switch", "display_name": "Latent Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Load Cache": {"input": {"required": {"latent_path": ["STRING", {"default": "", "multiline": false}], "image_path": ["STRING", {"default": "", "multiline": false}], "conditioning_path": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["latent_path", "image_path", "conditioning_path"]}, "output": ["LATENT", "IMAGE", "CONDITIONING"], "output_is_list": [false, false, false], "output_name": ["LATENT", "IMAGE", "CONDITIONING"], "name": "Load Cache", "display_name": "Load Cache", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Logic Boolean": {"input": {"required": {"boolean": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN", "NUMBER", "INT", "FLOAT"], "output_is_list": [false, false, false, false], "output_name": ["BOOLEAN", "NUMBER", "INT", "FLOAT"], "name": "Logic Boolean", "display_name": "Logic Boolean", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Boolean Primitive": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Boolean Primitive", "display_name": "Logic Boolean Primitive", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison OR": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison OR", "display_name": "Logic Comparison OR", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison AND": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison AND", "display_name": "Logic Comparison AND", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic Comparison XOR": {"input": {"required": {"boolean_a": ["BOOLEAN", {"default": false}], "boolean_b": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean_a", "boolean_b"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic Comparison XOR", "display_name": "Logic Comparison XOR", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Logic NOT": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Logic NOT", "display_name": "Logic NOT", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Lora Loader": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "NAME_STRING"], "name": "Lora Loader", "display_name": "Lora Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Hex to HSL": {"input": {"required": {"hex_color": ["STRING", {"default": "#FF0000"}]}, "optional": {"include_alpha": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["hex_color"], "optional": ["include_alpha"]}, "output": ["INT", "INT", "INT", "FLOAT", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["hue", "saturation", "lightness", "alpha", "hsl"], "name": "Hex to HSL", "display_name": "Hex to HSL", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Utilities", "output_node": false}, "HSL to Hex": {"input": {"required": {"hsl_color": ["STRING", {"default": "hsl(0, 100%, 50%)"}]}}, "input_order": {"required": ["hsl_color"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["hex_color"], "name": "HSL to Hex", "display_name": "HSL to Hex", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Utilities", "output_node": false}, "Image SSAO (Ambient Occlusion)": {"input": {"required": {"images": ["IMAGE"], "depth_images": ["IMAGE"], "strength": ["FLOAT", {"min": 0.0, "max": 5.0, "default": 1.0, "step": 0.01}], "radius": ["FLOAT", {"min": 0.01, "max": 1024, "default": 30, "step": 0.01}], "ao_blur": ["FLOAT", {"min": 0.01, "max": 1024, "default": 2.5, "step": 0.01}], "specular_threshold": ["INT", {"min": 0, "max": 255, "default": 25, "step": 1}], "enable_specular_masking": [["True", "False"]], "tile_size": ["INT", {"min": 1, "max": 512, "default": 1, "step": 1}]}}, "input_order": {"required": ["images", "depth_images", "strength", "radius", "ao_blur", "specular_threshold", "enable_specular_masking", "tile_size"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["composited_images", "ssao_images", "specular_mask_images"], "name": "Image SSAO (Ambient Occlusion)", "display_name": "Image SSAO (Ambient Occlusion)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image SSDO (Direct Occlusion)": {"input": {"required": {"images": ["IMAGE"], "depth_images": ["IMAGE"], "strength": ["FLOAT", {"min": 0.0, "max": 5.0, "default": 1.0, "step": 0.01}], "radius": ["FLOAT", {"min": 0.01, "max": 1024, "default": 30, "step": 0.01}], "specular_threshold": ["INT", {"min": 0, "max": 255, "default": 128, "step": 1}], "colored_occlusion": [["True", "False"]]}}, "input_order": {"required": ["images", "depth_images", "strength", "radius", "specular_threshold", "colored_occlusion"]}, "output": ["IMAGE", "IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false, false], "output_name": ["composited_images", "ssdo_images", "ssdo_image_masks", "light_source_image_masks"], "name": "Image SSDO (Direct Occlusion)", "display_name": "Image SSDO (Direct Occlusion)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Analyze": {"input": {"required": {"image": ["IMAGE"], "mode": [["Black White Levels", "RGB Levels"]]}}, "input_order": {"required": ["image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Analyze", "display_name": "Image Analyze", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Image Aspect Ratio": {"input": {"required": {}, "optional": {"image": ["IMAGE"], "width": ["NUMBER"], "height": ["NUMBER"]}}, "input_order": {"required": [], "optional": ["image", "width", "height"]}, "output": ["NUMBER", "FLOAT", "NUMBER", "STRING", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["aspect_number", "aspect_float", "is_landscape_bool", "aspect_ratio_common", "aspect_type"], "name": "Image Aspect Ratio", "display_name": "Image Aspect Ratio", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Image Batch": {"input": {"required": {}, "optional": {"images_a": ["IMAGE"], "images_b": ["IMAGE"], "images_c": ["IMAGE"], "images_d": ["IMAGE"]}}, "input_order": {"required": [], "optional": ["images_a", "images_b", "images_c", "images_d"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Batch", "display_name": "Image Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blank": {"input": {"required": {"width": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}], "height": ["INT", {"default": 512, "min": 8, "max": 4096, "step": 1}], "red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["width", "height", "red", "green", "blue"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Blank", "display_name": "Image Blank", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blend by Mask": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "mask": ["IMAGE"], "blend_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "mask", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Blend by Mask", "display_name": "Image Blend by Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blend": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "blend_percentage": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Blend", "display_name": "Image Blend", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Blending Mode": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "mode": [["add", "color", "color_burn", "color_dodge", "darken", "difference", "exclusion", "hard_light", "hue", "lighten", "multiply", "overlay", "screen", "soft_light"]], "blend_percentage": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image_a", "image_b", "mode", "blend_percentage"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Blending Mode", "display_name": "Image Blending Mode", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Image Bloom Filter": {"input": {"required": {"image": ["IMAGE"], "radius": ["FLOAT", {"default": 10, "min": 0.0, "max": 1024, "step": 0.1}], "intensity": ["FLOAT", {"default": 1, "min": 0.0, "max": 1.0, "step": 0.1}]}}, "input_order": {"required": ["image", "radius", "intensity"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Bloom Filter", "display_name": "Image Bloom Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Canny Filter": {"input": {"required": {"images": ["IMAGE"], "enable_threshold": [["false", "true"]], "threshold_low": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "threshold_high": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["images", "enable_threshold", "threshold_low", "threshold_high"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Canny Filter", "display_name": "Image Canny Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Chromatic Aberration": {"input": {"required": {"image": ["IMAGE"], "red_offset": ["INT", {"default": 2, "min": -255, "max": 255, "step": 1}], "green_offset": ["INT", {"default": -1, "min": -255, "max": 255, "step": 1}], "blue_offset": ["INT", {"default": 1, "min": -255, "max": 255, "step": 1}], "intensity": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "fade_radius": ["INT", {"default": 12, "min": 0, "max": 1024, "step": 1}]}}, "input_order": {"required": ["image", "red_offset", "green_offset", "blue_offset", "intensity", "fade_radius"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Chromatic Aberration", "display_name": "Image Chromatic Aberration", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Color Palette": {"input": {"required": {"image": ["IMAGE"], "colors": ["INT", {"default": 16, "min": 8, "max": 256, "step": 1}], "mode": [["Chart", "back_to_back"]]}}, "input_order": {"required": ["image", "colors", "mode"]}, "output": ["IMAGE", "LIST"], "output_is_list": [false, false], "output_name": ["image", "color_palettes"], "name": "Image Color Palette", "display_name": "Image Color Palette", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Image Crop Face": {"input": {"required": {"image": ["IMAGE"], "crop_padding_factor": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 2.0, "step": 0.01}], "cascade_xml": [["lbpcascade_animeface.xml", "haarcascade_frontalface_default.xml", "haarcascade_frontalface_alt.xml", "haarcascade_frontalface_alt2.xml", "haarcascade_frontalface_alt_tree.xml", "haarcascade_profileface.xml", "haarcascade_upperbody.xml", "haarcascade_eye.xml"]]}}, "input_order": {"required": ["image", "crop_padding_factor", "cascade_xml"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Face", "display_name": "Image Crop Face", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Crop Location": {"input": {"required": {"image": ["IMAGE"], "top": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "left": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "right": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bottom": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}]}}, "input_order": {"required": ["image", "top", "left", "right", "bottom"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Location", "display_name": "Image Crop Location", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Crop Square Location": {"input": {"required": {"image": ["IMAGE"], "x": ["INT", {"default": 0, "max": 24576, "min": 0, "step": 1}], "y": ["INT", {"default": 0, "max": 24576, "min": 0, "step": 1}], "size": ["INT", {"default": 256, "max": 4096, "min": 5, "step": 1}]}}, "input_order": {"required": ["image", "x", "y", "size"]}, "output": ["IMAGE", "CROP_DATA"], "output_is_list": [false, false], "output_name": ["IMAGE", "CROP_DATA"], "name": "Image Crop Square Location", "display_name": "Image Crop Square Location", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Displacement Warp": {"input": {"required": {"images": ["IMAGE"], "displacement_maps": ["IMAGE"], "amplitude": ["FLOAT", {"default": 25.0, "min": -4096, "max": 4096, "step": 0.1}]}}, "input_order": {"required": ["images", "displacement_maps", "amplitude"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Displacement Warp", "display_name": "Image Displacement Warp", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Lucy Sharpen": {"input": {"required": {"images": ["IMAGE"], "iterations": ["INT", {"default": 2, "min": 1, "max": 12, "step": 1}], "kernel_size": ["INT", {"default": 3, "min": 1, "max": 16, "step": 1}]}}, "input_order": {"required": ["images", "iterations", "kernel_size"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Lucy Sharpen", "display_name": "Image Lucy Sharpen", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Paste Face": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK_IMAGE"], "name": "Image Paste Face", "display_name": "Image Paste Face", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Paste Crop": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Paste Crop", "display_name": "Image Paste Crop", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Paste Crop by Location": {"input": {"required": {"image": ["IMAGE"], "crop_image": ["IMAGE"], "top": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "left": ["INT", {"default": 0, "max": 10000000, "min": 0, "step": 1}], "right": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "bottom": ["INT", {"default": 256, "max": 10000000, "min": 0, "step": 1}], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "crop_image", "top", "left", "right", "bottom", "crop_blending", "crop_sharpening"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Paste Crop by Location", "display_name": "Image Paste Crop by Location", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Pixelate": {"input": {"required": {"images": ["IMAGE"], "pixelation_size": ["FLOAT", {"default": 164, "min": 16, "max": 480, "step": 1}], "num_colors": ["FLOAT", {"default": 16, "min": 2, "max": 256, "step": 1}], "init_mode": [["k-means++", "random", "none"]], "max_iterations": ["FLOAT", {"default": 100, "min": 1, "max": 256, "step": 1}], "dither": [["False", "True"]], "dither_mode": [["FloydSteinberg", "Ordered"]]}, "optional": {"color_palettes": ["LIST", {"forceInput": true}], "color_palette_mode": [["Brightness", "BrightnessAndTonal", "Linear", "Tonal"]], "reverse_palette": [["False", "True"]]}}, "input_order": {"required": ["images", "pixelation_size", "num_colors", "init_mode", "max_iterations", "dither", "dither_mode"], "optional": ["color_palettes", "color_palette_mode", "reverse_palette"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Pixelate", "display_name": "Image Pixelate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Power Noise": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "frequency": ["FLOAT", {"default": 0.5, "max": 10.0, "min": 0.0, "step": 0.01}], "attenuation": ["FLOAT", {"default": 0.5, "max": 10.0, "min": 0.0, "step": 0.01}], "noise_type": [["grey", "white", "pink", "blue", "green", "mix"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "frequency", "attenuation", "noise_type", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Power Noise", "display_name": "Image Power Noise", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Dragan Photography Filter": {"input": {"required": {"image": ["IMAGE"], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "brightness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 16.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 6.0, "step": 0.01}], "highpass_radius": ["FLOAT", {"default": 6.0, "min": 0.0, "max": 255.0, "step": 0.01}], "highpass_samples": ["INT", {"default": 1, "min": 0, "max": 6.0, "step": 1}], "highpass_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 3.0, "step": 0.01}], "colorize": [["true", "false"]]}}, "input_order": {"required": ["image", "saturation", "contrast", "brightness", "sharpness", "highpass_radius", "highpass_samples", "highpass_strength", "colorize"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Dragan Photography Filter", "display_name": "Image Dragan Photography Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Edge Detection Filter": {"input": {"required": {"image": ["IMAGE"], "mode": [["normal", "laplacian"]]}}, "input_order": {"required": ["image", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Edge Detection Filter", "display_name": "Image Edge Detection Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Film Grain": {"input": {"required": {"image": ["IMAGE"], "density": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "intensity": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 1.0, "step": 0.01}], "highlights": ["FLOAT", {"default": 1.0, "min": 0.01, "max": 255.0, "step": 0.01}], "supersample_factor": ["INT", {"default": 4, "min": 1, "max": 8, "step": 1}]}}, "input_order": {"required": ["image", "density", "intensity", "highlights", "supersample_factor"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Film Grain", "display_name": "Image Film Grain", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Filter Adjustments": {"input": {"required": {"image": ["IMAGE"], "brightness": ["FLOAT", {"default": 0.0, "min": -1.0, "max": 1.0, "step": 0.01}], "contrast": ["FLOAT", {"default": 1.0, "min": -1.0, "max": 2.0, "step": 0.01}], "saturation": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 5.0, "step": 0.01}], "sharpness": ["FLOAT", {"default": 1.0, "min": -5.0, "max": 5.0, "step": 0.01}], "blur": ["INT", {"default": 0, "min": 0, "max": 16, "step": 1}], "gaussian_blur": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1024.0, "step": 0.1}], "edge_enhance": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "detail_enhance": [["false", "true"]]}}, "input_order": {"required": ["image", "brightness", "contrast", "saturation", "sharpness", "blur", "gaussian_blur", "edge_enhance", "detail_enhance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Filter Adjustments", "display_name": "Image Filter Adjustments", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Flip": {"input": {"required": {"images": ["IMAGE"], "mode": [["horizontal", "vertical"]]}}, "input_order": {"required": ["images", "mode"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Flip", "display_name": "Image Flip", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Gradient Map": {"input": {"required": {"image": ["IMAGE"], "gradient_image": ["IMAGE"], "flip_left_right": [["false", "true"]]}}, "input_order": {"required": ["image", "gradient_image", "flip_left_right"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Gradient Map", "display_name": "Image Gradient Map", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Generate Gradient": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "direction": [["horizontal", "vertical"]], "tolerance": ["INT", {"default": 0, "max": 255, "min": 0, "step": 1}], "gradient_stops": ["STRING", {"default": "0:255,0,0\n25:255,255,255\n50:0,255,0\n75:0,0,255", "multiline": true}]}}, "input_order": {"required": ["width", "height", "direction", "tolerance", "gradient_stops"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Generate Gradient", "display_name": "Image Generate Gradient", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate", "output_node": false}, "Image High Pass Filter": {"input": {"required": {"images": ["IMAGE"], "radius": ["INT", {"default": 10, "min": 1, "max": 500, "step": 1}], "strength": ["FLOAT", {"default": 1.5, "min": 0.0, "max": 255.0, "step": 0.1}], "color_output": [["true", "false"]], "neutral_background": [["true", "false"]]}}, "input_order": {"required": ["images", "radius", "strength", "color_output", "neutral_background"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image High Pass Filter", "display_name": "Image High Pass Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image History Loader": {"input": {"required": {"image": [["No History"]]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "filename_text"], "name": "Image History Loader", "display_name": "Image History Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/History", "output_node": false}, "Image Input Switch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["image_a", "image_b", "boolean"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Input Switch", "display_name": "Image Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Image Levels Adjustment": {"input": {"required": {"image": ["IMAGE"], "black_level": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 255.0, "step": 0.1}], "mid_level": ["FLOAT", {"default": 127.5, "min": 0.0, "max": 255.0, "step": 0.1}], "white_level": ["FLOAT", {"default": 255, "min": 0.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "black_level", "mid_level", "white_level"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Levels Adjustment", "display_name": "Image Levels Adjustment", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Load": {"input": {"required": {"image_path": ["STRING", {"default": "./ComfyUI/input/example.png", "multiline": false}], "RGBA": [["false", "true"]]}, "optional": {"filename_text_extension": [["true", "false"]]}}, "input_order": {"required": ["image_path", "RGBA"], "optional": ["filename_text_extension"]}, "output": ["IMAGE", "MASK", "STRING"], "output_is_list": [false, false, false], "output_name": ["image", "mask", "filename_text"], "name": "Image Load", "display_name": "Image Load", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Image Median Filter": {"input": {"required": {"image": ["IMAGE"], "diameter": ["INT", {"default": 2.0, "min": 0.1, "max": 255, "step": 1}], "sigma_color": ["FLOAT", {"default": 10.0, "min": -255.0, "max": 255.0, "step": 0.1}], "sigma_space": ["FLOAT", {"default": 10.0, "min": -255.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "diameter", "sigma_color", "sigma_space"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Median Filter", "display_name": "Image Median Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Mix RGB Channels": {"input": {"required": {"red_channel": ["IMAGE"], "green_channel": ["IMAGE"], "blue_channel": ["IMAGE"]}}, "input_order": {"required": ["red_channel", "green_channel", "blue_channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Mix RGB Channels", "display_name": "Image Mix RGB Channels", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Monitor Effects Filter": {"input": {"required": {"image": ["IMAGE"], "mode": [["Digital Distortion", "Signal Distortion", "TV Distortion"]], "amplitude": ["INT", {"default": 5, "min": 1, "max": 255, "step": 1}], "offset": ["INT", {"default": 10, "min": 1, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "mode", "amplitude", "offset"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Monitor Effects Filter", "display_name": "Image Monitor Effects Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Nova Filter": {"input": {"required": {"image": ["IMAGE"], "amplitude": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.001}], "frequency": ["FLOAT", {"default": 3.14, "min": 0.0, "max": 100.0, "step": 0.001}]}}, "input_order": {"required": ["image", "amplitude", "frequency"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Nova Filter", "display_name": "Image Nova Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Padding": {"input": {"required": {"image": ["IMAGE"], "feathering": ["INT", {"default": 120, "min": 0, "max": 2048, "step": 1}], "feather_second_pass": [["true", "false"]], "left_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "right_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "top_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}], "bottom_padding": ["INT", {"default": 512, "min": 8, "max": 48000, "step": 1}]}}, "input_order": {"required": ["image", "feathering", "feather_second_pass", "left_padding", "right_padding", "top_padding", "bottom_padding"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "Image Padding", "display_name": "Image Padding", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Perlin Noise": {"input": {"required": {"width": ["INT", {"default": 512, "max": 2048, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 2048, "min": 64, "step": 1}], "scale": ["INT", {"default": 100, "max": 2048, "min": 2, "step": 1}], "octaves": ["INT", {"default": 4, "max": 8, "min": 0, "step": 1}], "persistence": ["FLOAT", {"default": 0.5, "max": 100.0, "min": 0.01, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "scale", "octaves", "persistence", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Perlin Noise", "display_name": "Image Perlin Noise", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Rembg (Remove Background)": {"input": {"required": {"images": ["IMAGE"], "transparency": ["BOOLEAN", {"default": true}], "model": [["u2net", "u2netp", "u2net_human_seg", "silueta", "isnet-general-use", "isnet-anime"]], "post_processing": ["BOOLEAN", {"default": false}], "only_mask": ["BOOLEAN", {"default": false}], "alpha_matting": ["BOOLEAN", {"default": false}], "alpha_matting_foreground_threshold": ["INT", {"default": 240, "min": 0, "max": 255}], "alpha_matting_background_threshold": ["INT", {"default": 10, "min": 0, "max": 255}], "alpha_matting_erode_size": ["INT", {"default": 10, "min": 0, "max": 255}], "background_color": [["none", "black", "white", "magenta", "chroma green", "chroma blue"]]}}, "input_order": {"required": ["images", "transparency", "model", "post_processing", "only_mask", "alpha_matting", "alpha_matting_foreground_threshold", "alpha_matting_background_threshold", "alpha_matting_erode_size", "background_color"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Rembg (Remove Background)", "display_name": "Image Rembg (Remove Background)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/AI", "output_node": false}, "Image Perlin Power Fractal": {"input": {"required": {"width": ["INT", {"default": 512, "max": 8192, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 8192, "min": 64, "step": 1}], "scale": ["INT", {"default": 100, "max": 2048, "min": 2, "step": 1}], "octaves": ["INT", {"default": 4, "max": 8, "min": 0, "step": 1}], "persistence": ["FLOAT", {"default": 0.5, "max": 100.0, "min": 0.01, "step": 0.01}], "lacunarity": ["FLOAT", {"default": 2.0, "max": 100.0, "min": 0.01, "step": 0.01}], "exponent": ["FLOAT", {"default": 2.0, "max": 100.0, "min": 0.01, "step": 0.01}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["width", "height", "scale", "octaves", "persistence", "lacunarity", "exponent", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Perlin Power Fractal", "display_name": "Image Perlin Power Fractal", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image Remove Background (Alpha)": {"input": {"required": {"images": ["IMAGE"], "mode": [["background", "foreground"]], "threshold": ["INT", {"default": 127, "min": 0, "max": 255, "step": 1}], "threshold_tolerance": ["INT", {"default": 2, "min": 1, "max": 24, "step": 1}]}}, "input_order": {"required": ["images", "mode", "threshold", "threshold_tolerance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Remove Background (Alpha)", "display_name": "Image Remove Background (Alpha)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Remove Color": {"input": {"required": {"image": ["IMAGE"], "target_red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "target_green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "target_blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_red": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_green": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "replace_blue": ["INT", {"default": 255, "min": 0, "max": 255, "step": 1}], "clip_threshold": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "target_red", "target_green", "target_blue", "replace_red", "replace_green", "replace_blue", "clip_threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Remove Color", "display_name": "Image Remove Color", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Resize": {"input": {"required": {"image": ["IMAGE"], "mode": [["rescale", "resize"]], "supersample": [["true", "false"]], "resampling": [["lanczos", "nearest", "bilinear", "bicubic"]], "rescale_factor": ["FLOAT", {"default": 2, "min": 0.01, "max": 16.0, "step": 0.01}], "resize_width": ["INT", {"default": 1024, "min": 1, "max": 48000, "step": 1}], "resize_height": ["INT", {"default": 1536, "min": 1, "max": 48000, "step": 1}]}}, "input_order": {"required": ["image", "mode", "supersample", "resampling", "rescale_factor", "resize_width", "resize_height"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Resize", "display_name": "Image Resize", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Rotate": {"input": {"required": {"images": ["IMAGE"], "mode": [["transpose", "internal"]], "rotation": ["INT", {"default": 0, "min": 0, "max": 360, "step": 90}], "sampler": [["nearest", "bilinear", "bicubic"]]}}, "input_order": {"required": ["images", "mode", "rotation", "sampler"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Rotate", "display_name": "Image Rotate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Rotate Hue": {"input": {"required": {"image": ["IMAGE"], "hue_shift": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["image", "hue_shift"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Rotate Hue", "display_name": "Image Rotate Hue", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Send HTTP": {"input": {"required": {"images": ["IMAGE"], "url": ["STRING", {"default": "example.com"}], "method_type": [["post", "put", "patch"], {"default": "post"}], "request_field_name": ["STRING", {"default": "image"}]}, "optional": {"additional_request_headers": ["DICT"]}}, "input_order": {"required": ["images", "url", "method_type", "request_field_name"], "optional": ["additional_request_headers"]}, "output": ["INT", "STRING"], "output_is_list": [false, false], "output_name": ["status_code", "result_text"], "name": "Image Send HTTP", "display_name": "Image Send HTTP", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Image Save": {"input": {"required": {"images": ["IMAGE"], "output_path": ["STRING", {"default": "[time(%Y-%m-%d)]", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 1, "max": 9, "step": 1}], "filename_number_start": [["false", "true"]], "extension": [["png", "jpg", "jpeg", "gif", "tiff", "webp", "bmp"]], "dpi": ["INT", {"default": 300, "min": 1, "max": 2400, "step": 1}], "quality": ["INT", {"default": 100, "min": 1, "max": 100, "step": 1}], "optimize_image": [["true", "false"]], "lossless_webp": [["false", "true"]], "overwrite_mode": [["false", "prefix_as_filename"]], "show_history": [["false", "true"]], "show_history_by_prefix": [["true", "false"]], "embed_workflow": [["true", "false"]], "show_previews": [["true", "false"]]}, "hidden": {"prompt": "PROMPT", "extra_pnginfo": "EXTRA_PNGINFO"}}, "input_order": {"required": ["images", "output_path", "filename_prefix", "filename_delimiter", "filename_number_padding", "filename_number_start", "extension", "dpi", "quality", "optimize_image", "lossless_webp", "overwrite_mode", "show_history", "show_history_by_prefix", "embed_workflow", "show_previews"], "hidden": ["prompt", "extra_pnginfo"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["images", "files"], "name": "Image Save", "display_name": "Image Save", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Image Seamless Texture": {"input": {"required": {"images": ["IMAGE"], "blending": ["FLOAT", {"default": 0.4, "max": 1.0, "min": 0.0, "step": 0.01}], "tiled": [["true", "false"]], "tiles": ["INT", {"default": 2, "max": 6, "min": 2, "step": 2}]}}, "input_order": {"required": ["images", "blending", "tiled", "tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "Image Seamless Texture", "display_name": "Image Seamless Texture", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Select Channel": {"input": {"required": {"image": ["IMAGE"], "channel": [["red", "green", "blue"]]}}, "input_order": {"required": ["image", "channel"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Select Channel", "display_name": "Image Select Channel", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Select Color": {"input": {"required": {"image": ["IMAGE"], "red": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "green": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "blue": ["INT", {"default": 255.0, "min": 0.0, "max": 255.0, "step": 0.1}], "variance": ["INT", {"default": 10, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "red", "green", "blue", "variance"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Select Color", "display_name": "Image Select Color", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Shadows and Highlights": {"input": {"required": {"image": ["IMAGE"], "shadow_threshold": ["FLOAT", {"default": 75, "min": 0.0, "max": 255.0, "step": 0.1}], "shadow_factor": ["FLOAT", {"default": 1.5, "min": -12.0, "max": 12.0, "step": 0.1}], "shadow_smoothing": ["FLOAT", {"default": 0.25, "min": -255.0, "max": 255.0, "step": 0.1}], "highlight_threshold": ["FLOAT", {"default": 175, "min": 0.0, "max": 255.0, "step": 0.1}], "highlight_factor": ["FLOAT", {"default": 0.5, "min": -12.0, "max": 12.0, "step": 0.1}], "highlight_smoothing": ["FLOAT", {"default": 0.25, "min": -255.0, "max": 255.0, "step": 0.1}], "simplify_isolation": ["FLOAT", {"default": 0, "min": -255.0, "max": 255.0, "step": 0.1}]}}, "input_order": {"required": ["image", "shadow_threshold", "shadow_factor", "shadow_smoothing", "highlight_threshold", "highlight_factor", "highlight_smoothing", "simplify_isolation"]}, "output": ["IMAGE", "IMAGE", "IMAGE"], "output_is_list": [false, false, false], "output_name": ["image", "shadow_map", "highlight_map"], "name": "Image Shadows and Highlights", "display_name": "Image Shadows and Highlights", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Adjustment", "output_node": false}, "Image Size to Number": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["width_num", "height_num", "width_float", "height_float", "width_int", "height_int"], "name": "Image Size to Number", "display_name": "Image Size to Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Image Stitch": {"input": {"required": {"image_a": ["IMAGE"], "image_b": ["IMAGE"], "stitch": [["top", "left", "bottom", "right"]], "feathering": ["INT", {"default": 50, "min": 0, "max": 2048, "step": 1}]}}, "input_order": {"required": ["image_a", "image_b", "stitch", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Stitch", "display_name": "Image Stitch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image Style Filter": {"input": {"required": {"image": ["IMAGE"], "style": [["1977", "aden", "brannan", "brooklyn", "clarendon", "earlybird", "fairy tale", "gingham", "hudson", "inkwell", "kelvin", "lark", "lofi", "maven", "mayfair", "moon", "nashville", "perpetua", "reyes", "rise", "slumber", "stinson", "toaster", "valencia", "walden", "willow", "xpro2"]]}}, "input_order": {"required": ["image", "style"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Style Filter", "display_name": "Image Style Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image Threshold": {"input": {"required": {"image": ["IMAGE"], "threshold": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["image", "threshold"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Threshold", "display_name": "Image Threshold", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Tiled": {"input": {"required": {"image": ["IMAGE"], "num_tiles": ["INT", {"default": 4, "max": 64, "min": 2, "step": 1}]}}, "input_order": {"required": ["image", "num_tiles"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGES"], "name": "Image Tiled", "display_name": "Image Tiled", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Process", "output_node": false}, "Image Transpose": {"input": {"required": {"image": ["IMAGE"], "image_overlay": ["IMAGE"], "width": ["INT", {"default": 512, "min": -48000, "max": 48000, "step": 1}], "height": ["INT", {"default": 512, "min": -48000, "max": 48000, "step": 1}], "X": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "Y": ["INT", {"default": 0, "min": -48000, "max": 48000, "step": 1}], "rotation": ["INT", {"default": 0, "min": -360, "max": 360, "step": 1}], "feathering": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["image", "image_overlay", "width", "height", "X", "Y", "rotation", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image Transpose", "display_name": "Image Transpose", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Transform", "output_node": false}, "Image fDOF Filter": {"input": {"required": {"image": ["IMAGE"], "depth": ["IMAGE"], "mode": [["mock", "gaussian", "box"]], "radius": ["INT", {"default": 8, "min": 1, "max": 128, "step": 1}], "samples": ["INT", {"default": 1, "min": 1, "max": 3, "step": 1}]}}, "input_order": {"required": ["image", "depth", "mode", "radius", "samples"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Image fDOF Filter", "display_name": "Image fDOF Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Filter", "output_node": false}, "Image to Latent Mask": {"input": {"required": {"images": ["IMAGE"], "channel": [["alpha", "red", "green", "blue"]]}}, "input_order": {"required": ["images", "channel"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Image to Latent Mask", "display_name": "Image to Latent Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Image to Noise": {"input": {"required": {"images": ["IMAGE"], "num_colors": ["INT", {"default": 16, "max": 256, "min": 2, "step": 2}], "black_mix": ["INT", {"default": 0, "max": 20, "min": 0, "step": 1}], "gaussian_mix": ["FLOAT", {"default": 0.0, "max": 1024, "min": 0, "step": 0.1}], "brightness": ["FLOAT", {"default": 1.0, "max": 2.0, "min": 0.0, "step": 0.01}], "output_mode": [["batch", "list"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["images", "num_colors", "black_mix", "gaussian_mix", "brightness", "output_mode", "seed"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image to Noise", "display_name": "Image to Noise", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "Image to Seed": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["INT"], "output_is_list": [true], "output_name": ["INT"], "name": "Image to Seed", "display_name": "Image to Seed", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Analyze", "output_node": false}, "Images to RGB": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Images to RGB", "display_name": "Images to RGB", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Images to Linear": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Images to Linear", "display_name": "Images to Linear", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image", "output_node": false}, "Integer place counter": {"input": {"required": {"int_input": ["INT", {"default": 0, "min": 0, "max": 10000000, "step": 1}]}}, "input_order": {"required": ["int_input"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT_PLACES"], "name": "Integer place counter", "display_name": "Integer place counter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Integer", "output_node": false}, "Image Voronoi Noise Filter": {"input": {"required": {"width": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "height": ["INT", {"default": 512, "max": 4096, "min": 64, "step": 1}], "density": ["INT", {"default": 50, "max": 256, "min": 10, "step": 2}], "modulator": ["INT", {"default": 0, "max": 8, "min": 0, "step": 1}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}, "optional": {"flat": [["False", "True"]], "RGB_output": [["True", "False"]]}}, "input_order": {"required": ["width", "height", "density", "modulator", "seed"], "optional": ["flat", "RGB_output"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["image"], "name": "Image Voronoi Noise Filter", "display_name": "Image Voronoi Noise Filter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Generate/Noise", "output_node": false}, "KSampler (WAS)": {"input": {"required": {"model": ["MODEL"], "seed": ["SEED"], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "denoise"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "KSampler (WAS)", "display_name": "KSampler (WAS)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Sampling", "output_node": false}, "KSampler Cycle": {"input": {"required": {"model": ["MODEL"], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 10000}], "cfg": ["FLOAT", {"default": 8.0, "min": 0.0, "max": 100.0}], "sampler_name": [["euler", "euler_cfg_pp", "euler_ancestral", "euler_ancestral_cfg_pp", "heun", "heunpp2", "dpm_2", "dpm_2_ancestral", "lms", "dpm_fast", "dpm_adaptive", "dpmpp_2s_ancestral", "dpmpp_2s_ancestral_cfg_pp", "dpmpp_sde", "dpmpp_sde_gpu", "dpmpp_2m", "dpmpp_2m_cfg_pp", "dpmpp_2m_sde", "dpmpp_2m_sde_gpu", "dpmpp_3m_sde", "dpmpp_3m_sde_gpu", "ddpm", "lcm", "ipndm", "ipndm_v", "deis", "res_multistep", "res_multistep_cfg_pp", "res_multistep_ancestral", "res_multistep_ancestral_cfg_pp", "gradient_estimation", "er_sde", "ddim", "uni_pc", "uni_pc_bh2", "rk_beta", "legacy_rk", "rk", "deis_4m_sde", "deis_3m_sde", "deis_2m_sde", "deis_4m", "deis_3m", "deis_2m", "res_6s_sde", "res_5s_sde", "res_3s_sde", "res_2s_sde", "res_2m_sde", "res_6s", "res_5s", "res_3s", "res_2s", "res_2m", "bleh_preset_0"]], "scheduler": [["normal", "karras", "exponential", "sgm_uniform", "simple", "ddim_uniform", "beta", "linear_quadratic", "kl_optimal", "beta57"]], "positive": ["CONDITIONING"], "negative": ["CONDITIONING"], "latent_image": ["LATENT"], "tiled_vae": [["disable", "enable"]], "latent_upscale": [["disable", "nearest-exact", "bilinear", "area", "bicubic", "bislerp"]], "upscale_factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 8.0, "step": 0.1}], "upscale_cycles": ["INT", {"default": 2, "min": 2, "max": 12, "step": 1}], "starting_denoise": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}], "cycle_denoise": ["FLOAT", {"default": 0.5, "min": 0.0, "max": 1.0, "step": 0.01}], "scale_denoise": [["enable", "disable"]], "scale_sampling": [["bilinear", "bicubic", "nearest", "lanczos"]], "vae": ["VAE"]}, "optional": {"secondary_model": ["MODEL"], "secondary_start_cycle": ["INT", {"default": 2, "min": 2, "max": 16, "step": 1}], "upscale_model": ["UPSCALE_MODEL"], "processor_model": ["UPSCALE_MODEL"], "pos_additive": ["CONDITIONING"], "neg_additive": ["CONDITIONING"], "pos_add_mode": [["increment", "decrement"]], "pos_add_strength": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}], "pos_add_strength_scaling": [["enable", "disable"]], "pos_add_strength_cutoff": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 10.0, "step": 0.01}], "neg_add_mode": [["increment", "decrement"]], "neg_add_strength": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}], "neg_add_strength_scaling": [["enable", "disable"]], "neg_add_strength_cutoff": ["FLOAT", {"default": 2.0, "min": 0.01, "max": 10.0, "step": 0.01}], "sharpen_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 10.0, "step": 0.01}], "sharpen_radius": ["INT", {"default": 2, "min": 1, "max": 12, "step": 1}], "steps_scaling": [["enable", "disable"]], "steps_control": [["decrement", "increment"]], "steps_scaling_value": ["INT", {"default": 10, "min": 1, "max": 20, "step": 1}], "steps_cutoff": ["INT", {"default": 20, "min": 4, "max": 1000, "step": 1}], "denoise_cutoff": ["FLOAT", {"default": 0.25, "min": 0.01, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["model", "seed", "steps", "cfg", "sampler_name", "scheduler", "positive", "negative", "latent_image", "tiled_vae", "latent_upscale", "upscale_factor", "upscale_cycles", "starting_denoise", "cycle_denoise", "scale_denoise", "scale_sampling", "vae"], "optional": ["secondary_model", "secondary_start_cycle", "upscale_model", "processor_model", "pos_additive", "neg_additive", "pos_add_mode", "pos_add_strength", "pos_add_strength_scaling", "pos_add_strength_cutoff", "neg_add_mode", "neg_add_strength", "neg_add_strength_scaling", "neg_add_strength_cutoff", "sharpen_strength", "sharpen_radius", "steps_scaling", "steps_control", "steps_scaling_value", "steps_cutoff", "denoise_cutoff"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent(s)"], "name": "KSampler Cycle", "display_name": "KSampler Cycle", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Sampling", "output_node": false}, "Latent Batch": {"input": {"required": {}, "optional": {"latent_a": ["LATENT"], "latent_b": ["LATENT"], "latent_c": ["LATENT"], "latent_d": ["LATENT"]}}, "input_order": {"required": [], "optional": ["latent_a", "latent_b", "latent_c", "latent_d"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "Latent Batch", "display_name": "Latent Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent", "output_node": false}, "Latent Noise Injection": {"input": {"required": {"samples": ["LATENT"], "noise_std": ["FLOAT", {"default": 0.1, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["samples", "noise_std"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Noise Injection", "display_name": "Latent Noise Injection", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent/Generate", "output_node": false}, "Latent Size to Number": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["NUMBER", "NUMBER", "FLOAT", "FLOAT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false], "output_name": ["tensor_w_num", "tensor_h_num", "tensor_w_float", "tensor_h_float", "tensor_w_int", "tensor_h_int"], "name": "Latent Size to Number", "display_name": "Latent Size to Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Latent Upscale by Factor (WAS)": {"input": {"required": {"samples": ["LATENT"], "mode": [["area", "bicubic", "bilinear", "nearest"]], "factor": ["FLOAT", {"default": 2.0, "min": 0.1, "max": 8.0, "step": 0.01}], "align": [["true", "false"]]}}, "input_order": {"required": ["samples", "mode", "factor", "align"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["LATENT"], "name": "Latent Upscale by Factor (WAS)", "display_name": "Latent Upscale by Factor (WAS)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent/Transform", "output_node": false}, "Load Image Batch": {"input": {"required": {"mode": [["single_image", "incremental_image", "random"]], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "index": ["INT", {"default": 0, "min": 0, "max": 150000, "step": 1}], "label": ["STRING", {"default": "Batch 001", "multiline": false}], "path": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "*", "multiline": false}], "allow_RGBA_output": [["false", "true"]]}, "optional": {"filename_text_extension": [["true", "false"]]}}, "input_order": {"required": ["mode", "seed", "index", "label", "path", "pattern", "allow_RGBA_output"], "optional": ["filename_text_extension"]}, "output": ["IMAGE", "STRING"], "output_is_list": [false, false], "output_name": ["image", "filename_text"], "name": "Load Image Batch", "display_name": "Load Image Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Load Text File": {"input": {"required": {"file_path": ["STRING", {"default": "", "multiline": false}], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": false}]}}, "input_order": {"required": ["file_path", "dictionary_name"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["STRING", "DICT"], "name": "Load Text File", "display_name": "Load Text File", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": false}, "Load Lora": {"input": {"required": {"model": ["MODEL"], "clip": ["CLIP"], "lora_name": [["None", "0193 NIKKE RAPI_v1.safetensors", "0203 Soryu Asuka Langley_v1.safetensors", "AndreaBruno-000014.safetensors", "Andrian_Luchian.safetensors", "Anime Art V3.safetensors", "Daniel_Hahn-4.safetensors", "Exogenous.safetensors", "FGstyle.safetensors", "Fantasy World.safetensors", "Felix_Meynet.safetensors", "Flux/- Flux1 De-Distilled - the_edgy_mech_1.0.safetensors", "Flux/1980s_jp_girl_flux.safetensors", "Flux/AT-ST_-_Scout_Walker_Flux.safetensors", "Flux/Anime Art V3.safetensors", "Flux/CPA_CynerPunkAnime.safetensors", "Flux/Flux DetailerV2.safetensors", "Flux/Girl_with_Pearl_Earring_FLUX-000009.safetensors", "Flux/IKEA_Instructions_Style_FLUX.safetensors", "Flux/Line drawing -flux-lora_One thought V1 .safetensors", "Flux/Lineart_v2_flux-000010.safetensors", "Flux/Luminous_Shadowscape-000016.safetensors", "Flux/MECHS/flux_emata4000.safetensors", "Flux/MinimalistLineArt_Flux.safetensors", "Flux/Modern_Abstract_Minimalist.safetensors", "Flux/MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Flux/Neon_Cyberpunk_Cyberspace_FLUX.safetensors", "Flux/Nissan_Skyline_GT-R_R34.safetensors", "Flux/OtherRides/gatling-000004.safetensors", "Flux/OtherRides/gatling-000008.safetensors", "Flux/OtherRides/gatling.safetensors", "Flux/OtherRides/rock-000004.safetensors", "Flux/OtherRides/rock-000008.safetensors", "Flux/OtherRides/rock.safetensors", "Flux/Porsche 718 Spyder RS_000003500.safetensors", "Flux/RetroAnimeFluxV1.safetensors", "Flux/Sinfully_Stylish_1.0_Flux.safetensors", "Flux/TTCSV1.0-000010.safetensors", "Flux/aidmaFLUXPro1.1-FLUX-v0.3.safetensors", "Flux/aidmaFLuxPro1.1-IL-v0.3.safetensors", "Flux/aidmaMJ6.1-FLUX-v0.5.safetensors", "Flux/aidmaRealisticSkin-FLUX-v0.1.safetensors", "Flux/anotherdysto02-000019.safetensors", "Flux/autumn-002-000004.safetensors", "Flux/autumn-002-000008.safetensors", "Flux/autumn-002-000012.safetensors", "Flux/autumn-002.safetensors", "Flux/ethereal-dystopia01FL.safetensors", "Flux/flux dtmh.safetensors", "Flux/flux.1_lora_flyway_Epic-detail_v2.safetensors", "Flux/flux1DevHyperNF4Flux1DevBNB_flux1DevBNBNF4V2.safetensors", "Flux/flux_realism_lora.safetensors", "Flux/if-model-03-000008.safetensors", "Flux/madocalypse.safetensors", "Flux/mjV6.safetensors", "Flux/moody-fog.safetensors", "Flux/neon-mist03-000015.safetensors", "Flux/qiu_blue_000009500.safetensors", "Flux/styles/DTLDR-F.safetensors", "Flux/styles/GLSHS.safetensors", "Flux/styles/GTHAN-F.safetensors", "Flux/styles/NEOSTF-000001.safetensors", "Flux/styles/NSTLG_-_NSFW.safetensors", "Flux/styles/superdemidov.safetensors", "Flux/velozzi-red-003-000012.safetensors", "Flux/volt-post-000012.safetensors", "FluxMythP0rtr4itStyle.safetensors", "Luminous_Shadowscape-000016.safetensors", "MOONZ_COMIC_PORTRAITS.safetensors", "MS_Real_Ass_on_Glass_Lite.safetensors", "Ma.k.safetensors", "Mangaka_3012.safetensors", "MoriiMee_Gothic_Niji_Style_FLUX.safetensors", "Paul_Chadeisson.safetensors", "Richard_Anderson-5.safetensors", "Sci-fi_env_flux.safetensors", "South_Park_style_flux.safetensors", "ViT-L-14-TEXT-detail-improved-hiT-GmP-TE-only-HF.safetensors", "akirabikev0.2.safetensors", "artilands_v02-000006.safetensors", "car sketch.safetensors", "clip_l.safetensors", "designed_by_Norman_Foster_FLUX_304.safetensors", "designed_by_Steven_Holl_FLUX_308.safetensors", "glassball-000014.safetensors", "l4nc145tr4t05z3r0.safetensors", "lora-AITK-watercolor.safetensors", "m200-000015.safetensors", "oue_style_flux_lora_000003000.safetensors", "princess_xl_v1.safetensors", "sd15/Anime-Merged.ckpt", "sd15/Cyberpunk-Anime-Diffusion.ckpt", "sd15/EpicSpaceMachine.ckpt", "sd15/PaperCut_v1.ckpt", "sd15/Tron-Legacy-Style-trnlgcy.ckpt", "sd15/bubblydubbly.ckpt", "sd15/eldenRing-v3-pruned.ckpt", "sd15/feralplmr_artstyle.ckpt", "sd15/inkpunk-diffusion-v1.ckpt", "sd15/interior.safetensors", "sd15/mdjrny-v4.ckpt", "sd15/moDi-v1-pruned.ckpt", "sd15/pytorch_lora_weights.safetensors", "sd15/quadruped mechasV2.safetensors", "sd15/realisticVisionV30_v30VAE.safetensors", "sd15/redshift-diffusion-v1.ckpt", "sd15/robo-diffusion-v1.ckpt", "sd15/samdoartsultmerge.ckpt", "sd15/tdst4000.ckpt", "sd15/trinart_characters_it4_v1.ckpt", "sd15/v1-5-pruned-emaonly.safetensors", "sdxl/Ahegaoo.safetensors", "sdxl/DonMCyb3rN3cr0XL-000009.safetensors", "sdxl/Drone_Cars_XL.safetensors", "sdxl/Japanese_INK.safetensors", "sdxl/Krekkov Illust.safetensors", "sdxl/Phy_model_crv.safetensors", "sdxl/Surfacing_v1.safetensors", "sdxl/Surreal Harmony.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/amzn_mscles_64_new.safetensors", "sdxl/aresMix_v02.safetensors", "sdxl/cardrifting.safetensors", "sdxl/cumshot_49.safetensors", "sdxl/daddario_lora_sdxl_v1-000008.safetensors", "sdxl/incase_style_v3-1_ponyxl_ilff.safetensors", "sdxl/ip-adapter-faceid-plusv2_sd15_lora.safetensors", "sdxl/ip-adapter-faceid-plusv2_sdxl_lora.safetensors", "sdxl/ip-adapter-faceid_sd15_lora.safetensors", "sdxl/ip-adapter-faceid_sdxl_lora.safetensors", "sdxl/knolling3.safetensors", "sdxl/lineart/Coloring_book_-_LineArt.safetensors", "sdxl/lineart/continuous line art.safetensors", "sdxl/lineart/lineartSDXL.safetensors", "sdxl/lineart/samsung_line_art.safetensors", "sdxl/megastructure-V1.safetensors", "sdxl/nsfw/Erect Horse Penis.safetensors", "sdxl/nsfw/FemBush-V4.safetensors", "sdxl/nsfw/GodPussy1 v4.safetensors", "sdxl/nsfw/InniePussy1 v4.safetensors", "sdxl/nsfw/Moo_DengXLP.safetensors", "sdxl/nsfw/NsfwPovAllInOneLoraSdxl-000009.safetensors", "sdxl/nsfw/ass_support_object_v0.2.safetensors", "sdxl/nsfw/backless panties xl.safetensors", "sdxl/nsfw/minigts_sdxl_64.safetensors", "sdxl/nsfw/model-lora-Bottom 1.0.bis.safetensors", "sdxl/nsfw/multiple_labia_ringsV60.safetensors", "sdxl/nsfw/nudify_xl_lite.safetensors", "sdxl/nsfw/onoffxl.2023.10.02.safetensors", "sdxl/princess_xl_v1.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/pytorch_lora_weights.safetensors", "sdxl/restfeetup55_rvkwi.safetensors", "sdxl/sc0lpt - Figure Sculpture.safetensors", "sdxl/tech_streetwear.safetensors", "sdxl/xarchex_v1.safetensors", "zeekars.safetensors"]], "strength_model": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}], "strength_clip": ["FLOAT", {"default": 1.0, "min": -10.0, "max": 10.0, "step": 0.01}]}}, "input_order": {"required": ["model", "clip", "lora_name", "strength_model", "strength_clip"]}, "output": ["MODEL", "CLIP", "STRING"], "output_is_list": [false, false, false], "output_name": ["MODEL", "CLIP", "NAME_STRING"], "name": "Load Lora", "display_name": "Load Lora", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Lora Input Switch": {"input": {"required": {"model_a": ["MODEL"], "clip_a": ["CLIP"], "model_b": ["MODEL"], "clip_b": ["CLIP"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["model_a", "clip_a", "model_b", "clip_b", "boolean"]}, "output": ["MODEL", "CLIP"], "output_is_list": [false, false], "output_name": ["MODEL", "CLIP"], "name": "Lora Input Switch", "display_name": "Lora Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Masks Add": {"input": {"required": {"masks_a": ["MASK"], "masks_b": ["MASK"]}}, "input_order": {"required": ["masks_a", "masks_b"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Masks Add", "display_name": "Masks Add", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Subtract": {"input": {"required": {"masks_a": ["MASK"], "masks_b": ["MASK"]}}, "input_order": {"required": ["masks_a", "masks_b"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Masks Subtract", "display_name": "Masks Subtract", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Arbitrary Region": {"input": {"required": {"masks": ["MASK"], "size": ["INT", {"default": 256, "min": 1, "max": 4096, "step": 1}], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "size", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Arbitrary Region", "display_name": "Mask Arbitrary Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Batch to Mask": {"input": {"required": {"masks": ["MASK"], "batch_number": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "batch_number"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Mask Batch to Mask", "display_name": "Mask Batch to Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Batch": {"input": {"optional": {"masks_a": ["MASK"], "masks_b": ["MASK"], "masks_c": ["MASK"], "masks_d": ["MASK"]}}, "input_order": {"optional": ["masks_a", "masks_b", "masks_c", "masks_d"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["masks"], "name": "Mask Batch", "display_name": "Mask Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Ceiling Region": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Ceiling Region", "display_name": "Mask Ceiling Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Dominant Region": {"input": {"required": {"masks": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["masks", "padding"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Crop Dominant Region", "display_name": "Mask Crop Dominant Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Minority Region": {"input": {"required": {"masks": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}]}}, "input_order": {"required": ["masks", "padding"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Crop Minority Region", "display_name": "Mask Crop Minority Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Crop Region": {"input": {"required": {"mask": ["MASK"], "padding": ["INT", {"default": 24, "min": 0, "max": 4096, "step": 1}], "region_type": [["dominant", "minority"]]}}, "input_order": {"required": ["mask", "padding", "region_type"]}, "output": ["MASK", "CROP_DATA", "INT", "INT", "INT", "INT", "INT", "INT"], "output_is_list": [false, false, false, false, false, false, false, false], "output_name": ["cropped_mask", "crop_data", "top_int", "left_int", "right_int", "bottom_int", "width_int", "height_int"], "name": "Mask Crop Region", "display_name": "Mask Crop Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Paste Region": {"input": {"required": {"mask": ["MASK"], "crop_mask": ["MASK"], "crop_data": ["CROP_DATA"], "crop_blending": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 1.0, "step": 0.01}], "crop_sharpening": ["INT", {"default": 0, "min": 0, "max": 3, "step": 1}]}}, "input_order": {"required": ["mask", "crop_mask", "crop_data", "crop_blending", "crop_sharpening"]}, "output": ["MASK", "MASK"], "output_is_list": [false, false], "output_name": ["RESULT_MASK", "CROP_MASK"], "name": "Mask Paste Region", "display_name": "Mask Paste Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Dilate Region": {"input": {"required": {"masks": ["MASK"], "iterations": ["INT", {"default": 5, "min": 1, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "iterations"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Dilate Region", "display_name": "Mask Dilate Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Dominant Region": {"input": {"required": {"masks": ["MASK"], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Dominant Region", "display_name": "Mask Dominant Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Erode Region": {"input": {"required": {"masks": ["MASK"], "iterations": ["INT", {"default": 5, "min": 1, "max": 64, "step": 1}]}}, "input_order": {"required": ["masks", "iterations"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Erode Region", "display_name": "Mask Erode Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Fill Holes": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Fill Holes", "display_name": "Mask Fill Holes", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Floor Region": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Floor Region", "display_name": "Mask Floor Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Gaussian Region": {"input": {"required": {"masks": ["MASK"], "radius": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 1024, "step": 0.1}]}}, "input_order": {"required": ["masks", "radius"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Gaussian Region", "display_name": "Mask Gaussian Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Invert": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Invert", "display_name": "Mask Invert", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Minority Region": {"input": {"required": {"masks": ["MASK"], "threshold": ["INT", {"default": 128, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Minority Region", "display_name": "Mask Minority Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Rect Area": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "y": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "width": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "height": ["INT", {"default": 50, "min": 0, "max": 100, "step": 1}], "blur_radius": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["x", "y", "width", "height", "blur_radius"], "hidden": ["extra_pnginfo", "unique_id"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Rect Area", "display_name": "Mask Rect Area", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Rect Area (Advanced)": {"input": {"required": {"x": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}], "y": ["INT", {"default": 0, "min": 0, "max": 4096, "step": 64}], "width": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 64}], "height": ["INT", {"default": 256, "min": 0, "max": 4096, "step": 64}], "image_width": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "image_height": ["INT", {"default": 512, "min": 64, "max": 4096, "step": 64}], "blur_radius": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}, "hidden": {"extra_pnginfo": "EXTRA_PNGINFO", "unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["x", "y", "width", "height", "image_width", "image_height", "blur_radius"], "hidden": ["extra_pnginfo", "unique_id"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Rect Area (Advanced)", "display_name": "Mask Rect Area (Advanced)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Smooth Region": {"input": {"required": {"masks": ["MASK"], "sigma": ["FLOAT", {"default": 5.0, "min": 0.0, "max": 128.0, "step": 0.1}]}}, "input_order": {"required": ["masks", "sigma"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Smooth Region", "display_name": "Mask Smooth Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Mask Threshold Region": {"input": {"required": {"masks": ["MASK"], "black_threshold": ["INT", {"default": 75, "min": 0, "max": 255, "step": 1}], "white_threshold": ["INT", {"default": 175, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["masks", "black_threshold", "white_threshold"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASKS"], "name": "Mask Threshold Region", "display_name": "Mask Threshold Region", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Combine Regions": {"input": {"required": {"mask_a": ["MASK"], "mask_b": ["MASK"]}, "optional": {"mask_c": ["MASK"], "mask_d": ["MASK"], "mask_e": ["MASK"], "mask_f": ["MASK"]}}, "input_order": {"required": ["mask_a", "mask_b"], "optional": ["mask_c", "mask_d", "mask_e", "mask_f"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Masks Combine Regions", "display_name": "Masks Combine Regions", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Masks Combine Batch": {"input": {"required": {"masks": ["MASK"]}}, "input_order": {"required": ["masks"]}, "output": ["MASK"], "output_is_list": [false], "output_name": ["MASK"], "name": "Masks Combine Batch", "display_name": "Masks Combine Batch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "MiDaS Model Loader": {"input": {"required": {"midas_model": [["DPT_Large", "DPT_Hybrid"]]}}, "input_order": {"required": ["midas_model"]}, "output": ["MIDAS_MODEL"], "output_is_list": [false], "output_name": ["midas_model"], "name": "MiDaS Model Loader", "display_name": "MiDaS Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "MiDaS Depth Approximation": {"input": {"required": {"image": ["IMAGE"], "use_cpu": [["false", "true"]], "midas_type": [["DPT_Large", "DPT_Hybrid"]], "invert_depth": [["false", "true"]]}, "optional": {"midas_model": ["MIDAS_MODEL"]}}, "input_order": {"required": ["image", "use_cpu", "midas_type", "invert_depth"], "optional": ["midas_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["images"], "name": "MiDaS Depth Approximation", "display_name": "MiDaS Depth Approximation", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/AI", "output_node": false}, "MiDaS Mask Image": {"input": {"required": {"image": ["IMAGE"], "use_cpu": [["false", "true"]], "midas_model": [["DPT_Large", "DPT_Hybrid", "DPT_Small"]], "remove": [["background", "foregroud"]], "threshold": [["false", "true"]], "threshold_low": ["FLOAT", {"default": 10, "min": 0, "max": 255, "step": 1}], "threshold_mid": ["FLOAT", {"default": 200, "min": 0, "max": 255, "step": 1}], "threshold_high": ["FLOAT", {"default": 210, "min": 0, "max": 255, "step": 1}], "smoothing": ["FLOAT", {"default": 0.25, "min": 0.0, "max": 16.0, "step": 0.01}], "background_red": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_green": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}], "background_blue": ["INT", {"default": 0, "min": 0, "max": 255, "step": 1}]}}, "input_order": {"required": ["image", "use_cpu", "midas_model", "remove", "threshold", "threshold_low", "threshold_mid", "threshold_high", "smoothing", "background_red", "background_green", "background_blue"]}, "output": ["IMAGE", "IMAGE"], "output_is_list": [false, false], "output_name": ["RESULT", "DEPTH"], "name": "MiDaS Mask Image", "display_name": "MiDaS Mask Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/AI", "output_node": false}, "Model Input Switch": {"input": {"required": {"model_a": ["MODEL"], "model_b": ["MODEL"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["model_a", "model_b", "boolean"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "Model Input Switch", "display_name": "Model Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Number Counter": {"input": {"required": {"number_type": [["integer", "float"]], "mode": [["increment", "decrement", "increment_to_stop", "decrement_to_stop"]], "start": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}], "stop": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615, "step": 0.01}], "step": ["FLOAT", {"default": 1, "min": 0, "max": 99999, "step": 0.01}]}, "optional": {"reset_bool": ["NUMBER"]}, "hidden": {"unique_id": "UNIQUE_ID"}}, "input_order": {"required": ["number_type", "mode", "start", "stop", "step"], "optional": ["reset_bool"], "hidden": ["unique_id"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["number", "float", "int"], "name": "Number Counter", "display_name": "Number Counter", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Number Operation": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "operation": [["addition", "subtraction", "division", "floor division", "multiplication", "exponentiation", "modulus", "greater-than", "greater-than or equals", "less-than", "less-than or equals", "equals", "does not equal"]]}}, "input_order": {"required": ["number_a", "number_b", "operation"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Operation", "display_name": "Number Operation", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Float": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["FLOAT"], "output_is_list": [false], "output_name": ["FLOAT"], "name": "Number to Float", "display_name": "Number to Float", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number Input Switch": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["number_a", "number_b", "boolean"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Input Switch", "display_name": "Number Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Number Input Condition": {"input": {"required": {"number_a": ["NUMBER"], "number_b": ["NUMBER"], "return_boolean": [["false", "true"]], "comparison": [["and", "or", "greater-than", "greater-than or equals", "less-than", "less-than or equals", "equals", "does not equal", "divisible by", "if A odd", "if A even", "if A prime", "factor of"]]}}, "input_order": {"required": ["number_a", "number_b", "return_boolean", "comparison"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Input Condition", "display_name": "Number Input Condition", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Number Multiple Of": {"input": {"required": {"number": ["NUMBER"], "multiple": ["INT", {"default": 8, "min": -18446744073709551615, "max": 18446744073709551615}]}}, "input_order": {"required": ["number", "multiple"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Number Multiple Of", "display_name": "Number Multiple Of", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Functions", "output_node": false}, "Number PI": {"input": {"required": {}}, "input_order": {"required": []}, "output": ["NUMBER", "FLOAT"], "output_is_list": [false, false], "output_name": ["NUMBER", "FLOAT"], "name": "Number PI", "display_name": "Number PI", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Number to Int": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["INT"], "output_is_list": [false], "output_name": ["INT"], "name": "Number to Int", "display_name": "Number to Int", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Seed": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["SEED"], "output_is_list": [false], "output_name": ["SEED"], "name": "Number to Seed", "display_name": "Number to Seed", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to String": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Number to String", "display_name": "Number to String", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Number to Text": {"input": {"required": {"number": ["NUMBER"]}}, "input_order": {"required": ["number"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Number to Text", "display_name": "Number to Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number/Operations", "output_node": false}, "Boolean To Text": {"input": {"required": {"boolean": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Boolean To Text", "display_name": "Boolean To Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Prompt Styles Selector": {"input": {"required": {"style": [["None"]]}}, "input_order": {"required": ["style"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive_string", "negative_string"], "name": "Prompt Styles Selector", "display_name": "Prompt Styles Selector", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Prompt Multiple Styles Selector": {"input": {"required": {"style1": [["None"]], "style2": [["None"]], "style3": [["None"]], "style4": [["None"]]}}, "input_order": {"required": ["style1", "style2", "style3", "style4"]}, "output": ["STRING", "STRING"], "output_is_list": [false, false], "output_name": ["positive_string", "negative_string"], "name": "Prompt Multiple Styles Selector", "display_name": "Prompt Multiple Styles Selector", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Random Number": {"input": {"required": {"number_type": [["integer", "float", "bool"]], "minimum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "maximum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["number_type", "minimum", "maximum", "seed"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "Random Number", "display_name": "Random Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Save Text File": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "path": ["STRING", {"default": "./ComfyUI/output/[time(%Y-%m-%d)]", "multiline": false}], "filename_prefix": ["STRING", {"default": "ComfyUI"}], "filename_delimiter": ["STRING", {"default": "_"}], "filename_number_padding": ["INT", {"default": 4, "min": 0, "max": 9, "step": 1}]}, "optional": {"file_extension": ["STRING", {"default": ".txt"}], "encoding": ["STRING", {"default": "utf-8"}], "filename_suffix": ["STRING", {"default": ""}]}}, "input_order": {"required": ["text", "path", "filename_prefix", "filename_delimiter", "filename_number_padding"], "optional": ["file_extension", "encoding", "filename_suffix"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Save Text File", "display_name": "Save Text File", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/IO", "output_node": true}, "Seed": {"input": {"required": {"seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["seed"]}, "output": ["SEED", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["seed", "number", "float", "int"], "name": "Seed", "display_name": "Seed", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "Tensor Batch to Image": {"input": {"required": {"images_batch": ["IMAGE"], "batch_image_number": ["INT", {"default": 0, "min": 0, "max": 64, "step": 1}]}}, "input_order": {"required": ["images_batch", "batch_image_number"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Tensor Batch to Image", "display_name": "Tensor Batch to Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Latent/Transform", "output_node": false}, "BLIP Analyze Image": {"input": {"required": {"images": ["IMAGE"], "mode": [["caption", "interrogate"]], "question": ["STRING", {"default": "What does the background consist of?", "multiline": true, "dynamicPrompts": false}], "blip_model": ["BLIP_MODEL"]}, "optional": {"min_length": ["INT", {"min": 1, "max": 1024, "default": 24}], "max_length": ["INT", {"min": 2, "max": 1024, "default": 64}], "num_beams": ["INT", {"min": 1, "max": 12, "default": 5}], "no_repeat_ngram_size": ["INT", {"min": 1, "max": 12, "default": 3}], "early_stopping": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["images", "mode", "question", "blip_model"], "optional": ["min_length", "max_length", "num_beams", "no_repeat_ngram_size", "early_stopping"]}, "output": ["STRING", "STRING"], "output_is_list": [false, true], "output_name": ["FULL_CAPTIONS", "CAPTIONS"], "name": "BLIP Analyze Image", "display_name": "BLIP Analyze Image", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/AI", "output_node": false}, "SAM Model Loader": {"input": {"required": {"model_size": [["ViT-H", "ViT-L", "ViT-B"]]}}, "input_order": {"required": ["model_size"]}, "output": ["SAM_MODEL"], "output_is_list": [false], "output_name": ["SAM_MODEL"], "name": "SAM Model Loader", "display_name": "SAM Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Parameters": {"input": {"required": {"points": ["STRING", {"default": "[128, 128]; [0, 0]", "multiline": false}], "labels": ["STRING", {"default": "[1, 0]", "multiline": false}]}}, "input_order": {"required": ["points", "labels"]}, "output": ["SAM_PARAMETERS"], "output_is_list": [false], "output_name": ["SAM_PARAMETERS"], "name": "SAM Parameters", "display_name": "SAM Parameters", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Parameters Combine": {"input": {"required": {"sam_parameters_a": ["SAM_PARAMETERS"], "sam_parameters_b": ["SAM_PARAMETERS"]}}, "input_order": {"required": ["sam_parameters_a", "sam_parameters_b"]}, "output": ["SAM_PARAMETERS"], "output_is_list": [false], "output_name": ["SAM_PARAMETERS"], "name": "SAM Parameters Combine", "display_name": "SAM Parameters Combine", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "SAM Image Mask": {"input": {"required": {"sam_model": ["SAM_MODEL"], "sam_parameters": ["SAM_PARAMETERS"], "image": ["IMAGE"]}}, "input_order": {"required": ["sam_model", "sam_parameters", "image"]}, "output": ["IMAGE", "MASK"], "output_is_list": [false, false], "output_name": ["IMAGE", "MASK"], "name": "SAM Image Mask", "display_name": "SAM Image Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Masking", "output_node": false}, "Samples Passthrough (Stat System)": {"input": {"required": {"samples": ["LATENT"]}}, "input_order": {"required": ["samples"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["samples"], "name": "Samples Passthrough (Stat System)", "display_name": "Samples Passthrough (Stat System)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": false}, "String to Text": {"input": {"required": {"string": ["STRING", {}]}}, "input_order": {"required": ["string"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "String to Text", "display_name": "String to Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Image Bounds": {"input": {"required": {"image": ["IMAGE"]}}, "input_order": {"required": ["image"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Image Bounds", "display_name": "Image Bounds", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Inset Image Bounds": {"input": {"required": {"image_bounds": ["IMAGE_BOUNDS"], "inset_left": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_right": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_top": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "inset_bottom": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["image_bounds", "inset_left", "inset_right", "inset_top", "inset_bottom"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Inset Image Bounds", "display_name": "Inset Image Bounds", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Blend": {"input": {"required": {"target": ["IMAGE"], "target_bounds": ["IMAGE_BOUNDS"], "source": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}], "feathering": ["INT", {"default": 16, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["target", "target_bounds", "source", "blend_factor", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Blend", "display_name": "Bounded Image Blend", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Blend with Mask": {"input": {"required": {"target": ["IMAGE"], "target_mask": ["MASK"], "target_bounds": ["IMAGE_BOUNDS"], "source": ["IMAGE"], "blend_factor": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0}], "feathering": ["INT", {"default": 16, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["target", "target_mask", "target_bounds", "source", "blend_factor", "feathering"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Blend with Mask", "display_name": "Bounded Image Blend with Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Crop": {"input": {"required": {"image": ["IMAGE"], "image_bounds": ["IMAGE_BOUNDS"]}}, "input_order": {"required": ["image", "image_bounds"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "Bounded Image Crop", "display_name": "Bounded Image Crop", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Bounded Image Crop with Mask": {"input": {"required": {"image": ["IMAGE"], "mask": ["MASK"], "padding_left": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_right": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_top": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}], "padding_bottom": ["INT", {"default": 64, "min": 0, "max": 18446744073709551615}]}, "optional": {"return_list": ["BOOLEAN", {"default": false}]}}, "input_order": {"required": ["image", "mask", "padding_left", "padding_right", "padding_top", "padding_bottom"], "optional": ["return_list"]}, "output": ["IMAGE", "IMAGE_BOUNDS"], "output_is_list": [false, false], "output_name": ["IMAGE", "IMAGE_BOUNDS"], "name": "Bounded Image Crop with Mask", "display_name": "Bounded Image Crop with Mask", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Image/Bound", "output_node": false}, "Image Bounds to Console": {"input": {"required": {"image_bounds": ["IMAGE_BOUNDS"], "label": ["STRING", {"default": "Debug to Console", "multiline": false}]}}, "input_order": {"required": ["image_bounds", "label"]}, "output": ["IMAGE_BOUNDS"], "output_is_list": [false], "output_name": ["IMAGE_BOUNDS"], "name": "Image Bounds to Console", "display_name": "Image Bounds to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Text Dictionary Update": {"input": {"required": {"dictionary_a": ["DICT"], "dictionary_b": ["DICT"]}, "optional": {"dictionary_c": ["DICT"], "dictionary_d": ["DICT"]}}, "input_order": {"required": ["dictionary_a", "dictionary_b"], "optional": ["dictionary_c", "dictionary_d"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary Update", "display_name": "Text Dictionary Update", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Get": {"input": {"required": {"dictionary": ["DICT"], "key": ["STRING", {"default": "", "multiline": false}]}, "optional": {"default_value": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["dictionary", "key"], "optional": ["default_value"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Dictionary Get", "display_name": "Text Dictionary Get", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Convert": {"input": {"required": {"dictionary_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["dictionary_text"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary Convert", "display_name": "Text Dictionary Convert", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary New": {"input": {"required": {"key_1": ["STRING", {"default": "", "multiline": false}], "value_1": ["STRING", {"default": "", "multiline": false}]}, "optional": {"key_2": ["STRING", {"default": "", "multiline": false}], "value_2": ["STRING", {"default": "", "multiline": false}], "key_3": ["STRING", {"default": "", "multiline": false}], "value_3": ["STRING", {"default": "", "multiline": false}], "key_4": ["STRING", {"default": "", "multiline": false}], "value_4": ["STRING", {"default": "", "multiline": false}], "key_5": ["STRING", {"default": "", "multiline": false}], "value_5": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["key_1", "value_1"], "optional": ["key_2", "value_2", "key_3", "value_3", "key_4", "value_4", "key_5", "value_5"]}, "output": ["DICT"], "output_is_list": [false], "output_name": ["DICT"], "name": "Text Dictionary New", "display_name": "Text Dictionary New", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary Keys": {"input": {"required": {"dictionary": ["DICT"]}, "optional": {}}, "input_order": {"required": ["dictionary"], "optional": []}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text Dictionary Keys", "display_name": "Text Dictionary Keys", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Dictionary To Text": {"input": {"required": {"dictionary": ["DICT"]}, "optional": {}}, "input_order": {"required": ["dictionary"], "optional": []}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Dictionary To Text", "display_name": "Text Dictionary To Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Add Tokens": {"input": {"required": {"tokens": ["STRING", {"default": "[hello]: world", "multiline": true}], "print_current_tokens": [["false", "true"]]}}, "input_order": {"required": ["tokens", "print_current_tokens"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Text Add Tokens", "display_name": "Text Add Tokens", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Tokens", "output_node": true}, "Text Add Token by Input": {"input": {"required": {"token_name": ["STRING", {"forceInput": true}], "token_value": ["STRING", {"forceInput": true}], "print_current_tokens": [["false", "true"]]}}, "input_order": {"required": ["token_name", "token_value", "print_current_tokens"]}, "output": [], "output_is_list": [], "output_name": [], "name": "Text Add Token by Input", "display_name": "Text Add Token by Input", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Tokens", "output_node": true}, "Text Compare": {"input": {"required": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "mode": [["similarity", "difference"]], "tolerance": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}]}}, "input_order": {"required": ["text_a", "text_b", "mode", "tolerance"]}, "output": ["STRING", "STRING", "BOOLEAN", "NUMBER", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["TEXT_A_PASS", "TEXT_B_PASS", "BOOLEAN", "SCORE_NUMBER", "COMPARISON_TEXT"], "name": "Text Compare", "display_name": "Text Compare", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Concatenate": {"input": {"required": {"delimiter": ["STRING", {"default": ", "}], "clean_whitespace": [["true", "false"]]}, "optional": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["delimiter", "clean_whitespace"], "optional": ["text_a", "text_b", "text_c", "text_d"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Concatenate", "display_name": "Text Concatenate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text File History Loader": {"input": {"required": {"file": [["No History"]], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": true}]}}, "input_order": {"required": ["file", "dictionary_name"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["STRING", "DICT"], "name": "Text File History Loader", "display_name": "Text File History Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/History", "output_node": false}, "Text Find and Replace by Dictionary": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "dictionary": ["DICT"], "replacement_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "dictionary", "replacement_key", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Find and Replace by Dictionary", "display_name": "Text Find and Replace by Dictionary", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find and Replace Input": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "find": ["STRING", {"forceInput": true}], "replace": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text", "find", "replace"]}, "output": ["STRING", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["result_text", "replacement_count_number", "replacement_count_float", "replacement_count_int"], "name": "Text Find and Replace Input", "display_name": "Text Find and Replace Input", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find and Replace": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "find": ["STRING", {"default": "", "multiline": false}], "replace": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text", "find", "replace"]}, "output": ["STRING", "NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false, false], "output_name": ["result_text", "replacement_count_number", "replacement_count_float", "replacement_count_int"], "name": "Text Find and Replace", "display_name": "Text Find and Replace", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Find": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "substring": ["STRING", {"default": "", "multiline": false}], "pattern": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text", "substring", "pattern"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["found"], "name": "Text Find", "display_name": "Text Find", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Search", "output_node": false}, "Text Input Switch": {"input": {"required": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["text_a", "text_b", "boolean"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Input Switch", "display_name": "Text Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Text List": {"input": {"required": {}, "optional": {"text_a": ["STRING", {"forceInput": true}], "text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}], "text_e": ["STRING", {"forceInput": true}], "text_f": ["STRING", {"forceInput": true}], "text_g": ["STRING", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["text_a", "text_b", "text_c", "text_d", "text_e", "text_f", "text_g"]}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text List", "display_name": "Text List", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text List Concatenate": {"input": {"required": {}, "optional": {"list_a": ["LIST", {"forceInput": true}], "list_b": ["LIST", {"forceInput": true}], "list_c": ["LIST", {"forceInput": true}], "list_d": ["LIST", {"forceInput": true}]}}, "input_order": {"required": [], "optional": ["list_a", "list_b", "list_c", "list_d"]}, "output": ["LIST"], "output_is_list": [false], "output_name": ["LIST"], "name": "Text List Concatenate", "display_name": "Text List Concatenate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text List to Text": {"input": {"required": {"delimiter": ["STRING", {"default": ", "}], "text_list": ["LIST", {"forceInput": true}]}}, "input_order": {"required": ["delimiter", "text_list"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text List to Text", "display_name": "Text List to Text", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Load Line From File": {"input": {"required": {"file_path": ["STRING", {"default": "", "multiline": false}], "dictionary_name": ["STRING", {"default": "[filename]", "multiline": false}], "label": ["STRING", {"default": "TextBatch", "multiline": false}], "mode": [["automatic", "index"]], "index": ["INT", {"default": 0, "min": 0, "step": 1}]}, "optional": {"multiline_text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["file_path", "dictionary_name", "label", "mode", "index"], "optional": ["multiline_text"]}, "output": ["STRING", "DICT"], "output_is_list": [false, false], "output_name": ["line_text", "dictionary"], "name": "Text Load Line From File", "display_name": "Text Load Line From File", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Multiline": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Multiline", "display_name": "Text Multiline", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Multiline (Code Compatible)": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": true, "dynamicPrompts": false}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Multiline (Code Compatible)", "display_name": "Text Multiline (Code Compatible)", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Parse A1111 Embeddings": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse A1111 Embeddings", "display_name": "Text Parse A1111 Embeddings", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Parse", "output_node": false}, "Text Parse Noodle Soup Prompts": {"input": {"required": {"mode": [["Noodle Soup Prompts", "Wildcards"]], "noodle_key": ["STRING", {"default": "__", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["mode", "noodle_key", "seed", "text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse Noodle Soup Prompts", "display_name": "Text Parse Noodle Soup Prompts", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Parse", "output_node": true}, "Text Parse Tokens": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Parse Tokens", "display_name": "Text Parse Tokens", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Tokens", "output_node": false}, "Text Random Line": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Random Line", "display_name": "Text Random Line", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Random Prompt": {"input": {"required": {"search_seed": ["STRING", {"multiline": false}]}}, "input_order": {"required": ["search_seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Random Prompt", "display_name": "Text Random Prompt", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text String": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"text_b": ["STRING", {"default": "", "multiline": false}], "text_c": ["STRING", {"default": "", "multiline": false}], "text_d": ["STRING", {"default": "", "multiline": false}]}}, "input_order": {"required": ["text"], "optional": ["text_b", "text_c", "text_d"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["TEXT", "TEXT_B", "TEXT_C", "TEXT_D"], "name": "Text String", "display_name": "Text String", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text", "output_node": false}, "Text Contains": {"input": {"required": {"text": ["STRING", {"default": "", "multiline": false}], "sub_text": ["STRING", {"default": "", "multiline": false}]}, "optional": {"case_insensitive": ["BOOLEAN", {"default": true}]}}, "input_order": {"required": ["text", "sub_text"], "optional": ["case_insensitive"]}, "output": ["BOOLEAN"], "output_is_list": [false], "output_name": ["BOOLEAN"], "name": "Text Contains", "display_name": "Text Contains", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Text Shuffle": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": ",", "multiline": false}], "seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}]}}, "input_order": {"required": ["text", "separator", "seed"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Shuffle", "display_name": "Text Shuffle", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text Sort": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "separator": ["STRING", {"default": ", ", "multiline": false}]}}, "input_order": {"required": ["text", "separator"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text Sort", "display_name": "Text Sort", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to Conditioning": {"input": {"required": {"clip": ["CLIP"], "text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["clip", "text"]}, "output": ["CONDITIONING"], "output_is_list": [false], "output_name": ["CONDITIONING"], "name": "Text to Conditioning", "display_name": "Text to Conditioning", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to Console": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "label": ["STRING", {"default": "Text Output", "multiline": false}]}}, "input_order": {"required": ["text", "label"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text to Console", "display_name": "Text to Console", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Debug", "output_node": true}, "Text to Number": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["NUMBER"], "output_is_list": [false], "output_name": ["NUMBER"], "name": "Text to Number", "display_name": "Text to Number", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text to String": {"input": {"required": {"text": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text"]}, "output": ["STRING"], "output_is_list": [false], "output_name": ["STRING"], "name": "Text to String", "display_name": "Text to String", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "Text String Truncate": {"input": {"required": {"text": ["STRING", {"forceInput": true}], "truncate_by": [["characters", "words"]], "truncate_from": [["end", "beginning"]], "truncate_to": ["INT", {"default": 10, "min": -99999999, "max": 99999999, "step": 1}]}, "optional": {"text_b": ["STRING", {"forceInput": true}], "text_c": ["STRING", {"forceInput": true}], "text_d": ["STRING", {"forceInput": true}]}}, "input_order": {"required": ["text", "truncate_by", "truncate_from", "truncate_to"], "optional": ["text_b", "text_c", "text_d"]}, "output": ["STRING", "STRING", "STRING", "STRING"], "output_is_list": [false, false, false, false], "output_name": ["TEXT", "TEXT_B", "TEXT_C", "TEXT_D"], "name": "Text String Truncate", "display_name": "Text String Truncate", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Text/Operations", "output_node": false}, "True Random.org Number Generator": {"input": {"required": {"api_key": ["STRING", {"default": "00000000-0000-0000-0000-000000000000", "multiline": false}], "minimum": ["FLOAT", {"default": 0, "min": -18446744073709551615, "max": 18446744073709551615}], "maximum": ["FLOAT", {"default": 10000000, "min": -18446744073709551615, "max": 18446744073709551615}], "mode": [["random", "fixed"]]}}, "input_order": {"required": ["api_key", "minimum", "maximum", "mode"]}, "output": ["NUMBER", "FLOAT", "INT"], "output_is_list": [false, false, false], "output_name": ["NUMBER", "FLOAT", "INT"], "name": "True Random.org Number Generator", "display_name": "True Random.org Number Generator", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Number", "output_node": false}, "unCLIP Checkpoint Loader": {"input": {"required": {"ckpt_name": [["FLUX1/flux1-dev-fp8.safetensors", "SD-Med/sd3.5_large.safetensors", "SD-Med/sd3.5_medium.safetensors", "Zero/stable_zero123.ckpt", "illuminatiDiffusionV1_v11-unclip-h-fp16.safetensors", "sd15/SovietPunkAIp.safetensors", "sd15/analogDiffusion_10Safetensors.safetensors", "sd15/animePastelDream_softBakedVae.safetensors", "sd15/architectureExterior_v90.safetensors", "sd15/epicrealism_naturalSinRC1VAE.safetensors", "sd15/hdarchimaster_v10.safetensors", "sd15/iclight_sd15_fbc.safetensors", "sd15/iclight_sd15_fc.safetensors", "sd15/lazymixRealAmateur_v30b.safetensors", "sd15/mechav11_lora_34800.safetensors", "sd15/povSkinTexture_v2.safetensors", "sd15/uberRealisticMornMerge_urpmv13.safetensors", "sd15/v1-5-pruned.safetensors", "sd15/xsmerge_v31InSafetensor.safetensors", "sdxl/20231122-1700582714007-0001.safetensors", "sdxl/4Guofeng4XL_v1125D(1).safetensors", "sdxl/4x_NMKD-Superscale-SP_178000_G.pth", "sdxl/7thAnimeXLPonyA_v10.safetensors", "sdxl/CounterfeitV25_25.safetensors", "sdxl/NiceLora_v20.safetensors", "sdxl/aiBeautyIthlinni_ithlinniV1.safetensors", "sdxl/astranime_v5B.safetensors", "sdxl/boltningRealistic_hyperD.safetensors", "sdxl/charturnerv2.pt", "sdxl/control_v11e_sd15_ip2p(1).pth", "sdxl/control_v11e_sd15_ip2p.pth", "sdxl/crystalClearXL_ccxl.safetensors", "sdxl/cyberrealistic_v33.safetensors", "sdxl/deliberate_v2.safetensors", "sdxl/dreamshaperXL10_alpha2Xl10.safetensors", "sdxl/dreamshaper_4BakedVae.safetensors", "sdxl/eddiemauroLora2 (Elegant).safetensors", "sdxl/eddiemauroLora2(Tech).safetensors", "sdxl/eddiemauroLora2.safetensors", "sdxl/elldrethsStolendreams_stolenDreams.safetensors", "sdxl/evaAyanamiRei_arV1.safetensors", "sdxl/honkaiImpact3Herrscher_k423V1.safetensors", "sdxl/ip-adapter_sdxl_vit-h(1).safetensors", "sdxl/juggernautXL_version5.safetensors", "sdxl/knolling_20.safetensors", "sdxl/lucyCyberpunk_35Epochs.safetensors", "sdxl/majicmixRealistic_v7.safetensors", "sdxl/megaModel12AnimeUltra_megaModel12Beta.safetensors", "sdxl/nanachiMadeInAbyss_charNanachi.safetensors", "sdxl/neverendingDreamNED_bakedVae.safetensors", "sdxl/nissanSkylineGTRR34_v10.safetensors", "sdxl/ponyDiffusionV6XL_v6StartWithThisOne.safetensors", "sdxl/productDesign_eddiemauro20.safetensors", "sdxl/product_shot_of.safetensors", "sdxl/protovisionXLHighFidelity3D_release0620Bakedvae.safetensors", "sdxl/rachelwalker.ckpt", "sdxl/realismBYSTABLEYOGI_ponyV2.safetensors", "sdxl/realismEngineSDXL_v10.safetensors", "sdxl/realisticVisionV13_v13.safetensors", "sdxl/realvisxlV50_v50LightningBakedvae.safetensors", "sdxl/rpg_V4.safetensors", "sdxl/sd_xl_base_1.0.safetensors", "sdxl/sd_xl_refiner_1.0.safetensors", "sdxl/stanleysTriweekendXXL_stanleysPrancingPony.safetensors", "sdxl/trueImageAI_v10.safetensors", "sdxl/v1-5-pruned-emaonly.safetensors", "sdxl/v2-1_768-ema-pruned.ckpt", "sdxl/yaeMikoRealistic_yaemikoMixed.safetensors", "sdxl/zavychromaxl_v90.safetensors", "stable_zero123.ckpt"]]}}, "input_order": {"required": ["ckpt_name"]}, "output": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "STRING"], "output_is_list": [false, false, false, false, false], "output_name": ["MODEL", "CLIP", "VAE", "CLIP_VISION", "NAME_STRING"], "name": "unCLIP Checkpoint Loader", "display_name": "unCLIP Checkpoint Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Upscale Model Loader": {"input": {"required": {"model_name": [["4x-UltraSharp.pth", "4xNomos2_hq_dat2/4xNomos2_hq_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.pth", "4xRealWebPhoto/4xRealWebPhoto_v4_dat2.safetensors", "4x_NMKD-Siax_200k.pth", "4x_NMKD-Superscale-SP_178000_G.pth", "8x_NMKD-Superscale_150000_G.pth", "OmniSR_X4_DF2K/checkpoints/epoch994_OmniSR.pth", "last.ckpt"]]}}, "input_order": {"required": ["model_name"]}, "output": ["UPSCALE_MODEL", "STRING"], "output_is_list": [false, false], "output_name": ["UPSCALE_MODEL", "MODEL_NAME_TEXT"], "name": "Upscale Model Loader", "display_name": "Upscale Model Loader", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Loaders", "output_node": false}, "Upscale Model Switch": {"input": {"required": {"upscale_model_a": ["UPSCALE_MODEL"], "upscale_model_b": ["UPSCALE_MODEL"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["upscale_model_a", "upscale_model_b", "boolean"]}, "output": ["UPSCALE_MODEL"], "output_is_list": [false], "output_name": ["UPSCALE_MODEL"], "name": "Upscale Model Switch", "display_name": "Upscale Model Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Write to GIF": {"input": {"required": {"image": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 2, "max": 60, "step": 1}], "image_delay_ms": ["FLOAT", {"default": 2500.0, "min": 0.1, "max": 60000.0, "step": 0.1}], "duration_ms": ["FLOAT", {"default": 0.1, "min": 0.1, "max": 60000.0, "step": 0.1}], "loops": ["INT", {"default": 0, "min": 0, "max": 100, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1280, "step": 1}], "output_path": ["STRING", {"default": "/media/hiro/AI_Drive/Linux/ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "morph_writer", "multiline": false}]}}, "input_order": {"required": ["image", "transition_frames", "image_delay_ms", "duration_ms", "loops", "max_size", "output_path", "filename"]}, "output": ["IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["image_pass", "filepath_text", "filename_text"], "name": "Write to GIF", "display_name": "Write to GIF", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation/Writer", "output_node": false}, "Write to Video": {"input": {"required": {"image": ["IMAGE"], "transition_frames": ["INT", {"default": 30, "min": 0, "max": 120, "step": 1}], "image_delay_sec": ["FLOAT", {"default": 2.5, "min": 0.1, "max": 60000.0, "step": 0.1}], "fps": ["INT", {"default": 30, "min": 1, "max": 60.0, "step": 1}], "max_size": ["INT", {"default": 512, "min": 128, "max": 1920, "step": 1}], "output_path": ["STRING", {"default": "./ComfyUI/output", "multiline": false}], "filename": ["STRING", {"default": "comfy_writer", "multiline": false}], "codec": [["AVC1", "FFV1", "H264", "MP4V"]]}}, "input_order": {"required": ["image", "transition_frames", "image_delay_sec", "fps", "max_size", "output_path", "filename", "codec"]}, "output": ["IMAGE", "STRING", "STRING"], "output_is_list": [false, false, false], "output_name": ["IMAGE_PASS", "filepath_text", "filename_text"], "name": "Write to Video", "display_name": "Write to Video", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation/Writer", "output_node": false}, "VAE Input Switch": {"input": {"required": {"vae_a": ["VAE"], "vae_b": ["VAE"], "boolean": ["BOOLEAN", {"forceInput": true}]}}, "input_order": {"required": ["vae_a", "vae_b", "boolean"]}, "output": ["VAE"], "output_is_list": [false], "output_name": ["VAE"], "name": "VAE Input Switch", "display_name": "VAE Input Switch", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Logic", "output_node": false}, "Video Dump Frames": {"input": {"required": {"video_path": ["STRING", {"default": "./ComfyUI/input/MyVideo.mp4", "multiline": false}], "output_path": ["STRING", {"default": "./ComfyUI/input/MyVideo", "multiline": false}], "prefix": ["STRING", {"default": "frame_", "multiline": false}], "filenumber_digits": ["INT", {"default": 4, "min": -1, "max": 8, "step": 1}], "extension": [["png", "jpg", "gif", "tiff"]]}}, "input_order": {"required": ["video_path", "output_path", "prefix", "filenumber_digits", "extension"]}, "output": ["STRING", "NUMBER"], "output_is_list": [false, false], "output_name": ["output_path", "processed_count"], "name": "Video Dump Frames", "display_name": "Video Dump Frames", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "WAS Suite/Animation", "output_node": false}, "CLIPSEG2": {"input": {"required": {"image": ["IMAGE"], "text": ["STRING", {"default": "", "multiline": false}], "use_cuda": ["BOOLEAN", {"default": false}]}, "optional": {"clipseg_model": ["CLIPSEG_MODEL"]}}, "input_order": {"required": ["image", "text", "use_cuda"], "optional": ["clipseg_model"]}, "output": ["IMAGE"], "output_is_list": [false], "output_name": ["IMAGE"], "name": "CLIPSEG2", "display_name": "CLIPSEG2", "description": "", "python_module": "custom_nodes.was-node-suite-comfyui", "category": "image/transformation", "output_node": false}, "SaveImageWebsocket": {"input": {"required": {"images": ["IMAGE"]}}, "input_order": {"required": ["images"]}, "output": [], "output_is_list": [], "output_name": [], "name": "SaveImageWebsocket", "display_name": "SaveImageWebsocket", "description": "", "python_module": "custom_nodes.websocket_image_save", "category": "api/image", "output_node": true}, "FluxFluxLoraLoader": {"input": {"required": {"model": ["MODEL"], "lora_name": [[]], "strength_model": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}]}}, "input_order": {"required": ["model", "lora_name", "strength_model"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "FluxFluxLoraLoader", "display_name": "Load Flux LoRA", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "LoadFluxControlNet": {"input": {"required": {"model_name": [["flux-dev", "flux-dev-fp8", "flux-schnell"]], "controlnet_path": [["flux-canny-controlnet-v3.safetensors", "flux-canny-controlnet.safetensors", "flux-hed-controlnet-v3.safetensors"]]}}, "input_order": {"required": ["model_name", "controlnet_path"]}, "output": ["FluxControlNet"], "output_is_list": [false], "output_name": ["ControlNet"], "name": "LoadFluxControlNet", "display_name": "Load Flux ControlNet", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyFluxControlNet": {"input": {"required": {"controlnet": ["FluxControlNet"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}]}, "optional": {"controlnet_condition": ["ControlNetCondition", {"default": null}]}}, "input_order": {"required": ["controlnet", "image", "strength"], "optional": ["controlnet_condition"]}, "output": ["ControlNetCondition"], "output_is_list": [false], "output_name": ["controlnet_condition"], "name": "ApplyFluxControlNet", "display_name": "Apply Flux ControlNet", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyAdvancedFluxControlNet": {"input": {"required": {"controlnet": ["FluxControlNet"], "image": ["IMAGE"], "strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 10.0, "step": 0.01}], "start": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "end": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"controlnet_condition": ["ControlNetCondition", {"default": null}]}}, "input_order": {"required": ["controlnet", "image", "strength", "start", "end"], "optional": ["controlnet_condition"]}, "output": ["ControlNetCondition"], "output_is_list": [false], "output_name": ["controlnet_condition"], "name": "ApplyAdvancedFluxControlNet", "display_name": "Apply Advanced Flux ControlNet", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "XlabsSampler": {"input": {"required": {"model": ["MODEL"], "conditioning": ["CONDITIONING"], "neg_conditioning": ["CONDITIONING"], "noise_seed": ["INT", {"default": 0, "min": 0, "max": 18446744073709551615}], "steps": ["INT", {"default": 20, "min": 1, "max": 100}], "timestep_to_start_cfg": ["INT", {"default": 20, "min": 0, "max": 100}], "true_gs": ["FLOAT", {"default": 3, "min": 0, "max": 100}], "image_to_image_strength": ["FLOAT", {"default": 0.0, "min": 0.0, "max": 1.0, "step": 0.01}], "denoise_strength": ["FLOAT", {"default": 1.0, "min": 0.0, "max": 1.0, "step": 0.01}]}, "optional": {"latent_image": ["LATENT", {"default": null}], "controlnet_condition": ["ControlNetCondition", {"default": null}]}}, "input_order": {"required": ["model", "conditioning", "neg_conditioning", "noise_seed", "steps", "timestep_to_start_cfg", "true_gs", "image_to_image_strength", "denoise_strength"], "optional": ["latent_image", "controlnet_condition"]}, "output": ["LATENT"], "output_is_list": [false], "output_name": ["latent"], "name": "XlabsSampler", "display_name": "Xlabs Sampler", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyFluxIPAdapter": {"input": {"required": {"model": ["MODEL"], "ip_adapter_flux": ["IP_ADAPTER_FLUX"], "image": ["IMAGE"], "ip_scale": ["FLOAT", {"default": 0.93, "min": 0.0, "max": 1.0, "step": 0.001}]}}, "input_order": {"required": ["model", "ip_adapter_flux", "image", "ip_scale"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyFluxIPAdapter", "display_name": "Apply Flux IPAdapter", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "LoadFluxIPAdapter": {"input": {"required": {"ipadatper": [["ip_adapter.safetensors"]], "clip_vision": [["CLIP-ViT-H-14-laion2B-s32B-b79K.safetensors", "CLIP-ViT-bigG-14-laion2B-39B-b160k.safetensors", "clip-vit-large-patch14.safetensors", "clipLCLIPGFullFP32_zer0intVisionCLIPL.safetensors", "clip_vision_g.safetensors", "sigclip_vision_patch14_384.safetensors"]], "provider": [["CPU", "GPU"]]}}, "input_order": {"required": ["ipadatper", "clip_vision", "provider"]}, "output": ["IP_ADAPTER_FLUX"], "output_is_list": [false], "output_name": ["ipadapterFlux"], "name": "LoadFluxIPAdapter", "display_name": "Load Flux IPAdatpter", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}, "ApplyAdvancedFluxIPAdapter": {"input": {"required": {"model": ["MODEL"], "ip_adapter_flux": ["IP_ADAPTER_FLUX"], "image": ["IMAGE"], "begin_strength": ["FLOAT", {"default": 0.0, "min": -100.0, "max": 100.0, "step": 0.01}], "end_strength": ["FLOAT", {"default": 1.0, "min": -100.0, "max": 100.0, "step": 0.01}], "smothing_type": [["Linear", "First half", "Second half", "Sigmoid"]]}}, "input_order": {"required": ["model", "ip_adapter_flux", "image", "begin_strength", "end_strength", "smothing_type"]}, "output": ["MODEL"], "output_is_list": [false], "output_name": ["MODEL"], "name": "ApplyAdvancedFluxIPAdapter", "display_name": "Apply Advanced Flux IPAdapter", "description": "", "python_module": "custom_nodes.x-flux-comfyui", "category": "XLabsNodes", "output_node": false}}